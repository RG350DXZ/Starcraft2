//==================================================================================================
// 
// Generated Map Script
// 
// Name:   Dragonball Z All Sagas BETA
// 
//==================================================================================================
include "TriggerLibs/NativeLib"
include "LibGAx3"

//--------------------------------------------------------------------------------------------------
// Library: STARCODE v1.4
//--------------------------------------------------------------------------------------------------
// Function Declarations
void lib1_gf_StarcodeStartCode ();
void lib1_gf_StarcodeStoreIntegerValue (int lp_value, int lp_maximumValue);
void lib1_gf_StarcodeSetCode (string lp_code);
void lib1_gf_StarcodeSetEncryptionAlphabet (string lp_string);
string lib1_gf_StarcodeGetCode ();
int lib1_gf_StarcodeGetIntegerValue (int lp_maximumValue);
string lib1_gf_StarcodeEncryptString (string lp_toEncrypt, string lp_key);
string lib1_gf_StarcodeCompressString (string lp_toCompress);
string lib1_gf_StarcodeHashString (string lp_toHash, int lp_securityLevel);
string lib1_gf_StarcodeRemoveHashfromString (string lp_string, int lp_securityLevel);
bool lib1_gf_StarcodeValidateString (string lp_toCheck, int lp_securityLevel);
string lib1_gf_StarcodeDecryptString (string lp_toDecrypt, string lp_key);
string lib1_gf_StarcodeDecompressString (string lp_toDecompress);

// Custom Script
//--------------------------------------------------------------------------------------------------
// Custom Script: Source
//--------------------------------------------------------------------------------------------------
//===========================================================
//================  S T A R C O D E  v1.4 ===================
//===========================================================
//  by s3rius
 
 
string STARCODE_Alphabet="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!$%/()=?,.-;:_^#+* @{[]}|~`"; //
int STARCODE_AlphabetLength=StringLength(STARCODE_Alphabet);
string STARCODE_CurrentCode="0";
string STARCODE_fill(string s, int i){
    int c=i-StringLength(s);
    string t="";
    while(c>0){
        t+="0";
        c-=1;
    }
    return t+s;
}
string STARCODE_cut(string s){
    int i=1;
    while(i<StringLength(s) && StringSub(s,i,i)=="0"){
        i+=1;
    }
    return StringSub(s,i,StringLength(s));
}
string STARCODE_BigNumAdd(string number, string addition){
    int i=0;
    int c=0;
    int carry=0;
    int ln=StringLength(number);
    int la=StringLength(addition);
    string out="";
    if(la>ln){
        number=STARCODE_fill(number, la);
        ln=la;
    }else if(ln>la){
        addition=STARCODE_fill(addition, ln);
        la=ln;
    }
 
    while(i<ln){
        c=StringToInt( StringSub(number, ln-i,ln-i) ) + StringToInt( StringSub(addition, la-i,la-i) );
        out=IntToString( (c+carry) % 10 ) +out;
        carry=(c+carry) / 10;
        i+=1;
    }
    if (carry>0){
        out=IntToString(carry)+out;
    }
    return out;
}
string STARCODE_BigNumSubtract(string number, string subtraction){
    int i=0;
    int c=0;
    int carry=0;
    int ln=StringLength(number);
    int ls=StringLength(subtraction);
    string out="";
    if(ls>ln){
        number=STARCODE_fill(number, ls);
        ln=ls;
    }else if(ln>ls){
        subtraction=STARCODE_fill(subtraction, ln);
        ls=ln;
    }
    while(i<ln){
        c=StringToInt( StringSub(number, ln-i,ln-i) ) - StringToInt( StringSub(subtraction, ls-i,ls-i) );
        c-=carry;
        if(c<0){
            carry=1;
            c+=10;
        }else{
            carry=0;
        }
        out=IntToString( c ) +out;
        i+=1;
    }
    //if (carry>0){
        //debug("This bigint is not suited for negative numbers!");
    //}
    out=STARCODE_cut(out);
    //debug(out);
    return out;
}
string STARCODE_BigNumMultiply(string number, string multi){
    int i=0;
    int m=StringToInt(multi);
    int c=0;
    int carry=0;
    int ln=StringLength(number);
    int lm=StringLength(multi);
    string out="";
    while(i<ln){
        c=(StringToInt(StringSub(number, ln-i,ln-i)) * m)+carry;
        out=IntToString( (c % 10) ) +out;
        carry=c / 10;
        i+=1;
    }
    if (carry>0){
        out=IntToString(carry)+out;
    }
    if(multi=="0"){
        out="0";
    }
    //debug(out);
    return out;
}
string STARCODE_BigNumDivive(string number, string div){
    int i=1;
    int d=StringToInt(div);
    int c=0;
    int carry=0;
    int ln=StringLength(number);
    int ld=StringLength(div);
    string out="";
    while(i<=ln){
        c=(StringToInt(StringSub(number, i, i)))+carry*10;
        out+=IntToString( c / d );
        carry=c % d;
        i+=1;
    }
    if (carry>0){
        //debug("Left: "+IntToString(carry));
    }
    out=STARCODE_cut(out);
    //debug(out);
    return out;
}
string STARCODE_BigNumModulo(string number, string div){
    int i=1;
    int d=StringToInt(div);
    int c=0;
    int carry=0;
    int ln=StringLength(number);
    int ld=StringLength(div);
    string out="";
    while(i<=ln){
        c=(StringToInt(StringSub(number, i, i)))+carry*10;
        carry=c % d;
        i+=1;
    }
    //debug(IntToString(carry));
    return IntToString(carry);
}
string STARCODE_BigNumPower(string number, int pow){
    string out=number;
    if (pow>0){
        while(pow>1){
            out=STARCODE_BigNumMultiply(out, number);
            pow-=1;
        }
        return out;
    }else{
        return "1";
    }
}
string STARCODE_Encode(string s, int i, int max){
    return STARCODE_BigNumAdd(STARCODE_BigNumMultiply(s, IntToString(max)), IntToString(i));
}
int STARCODE_Decode(string s, int max){
    return StringToInt(STARCODE_BigNumModulo(s, IntToString(max)));
}
string STARCODE_Decode2(string s, int max){
    return STARCODE_BigNumDivive(s, IntToString(max));
}
string STARCODE_chr(int i){
    return StringSub(STARCODE_Alphabet, i+1,i+1);
}
int STARCODE_ord(string i){
    return StringFind(STARCODE_Alphabet, i, c_stringCase)-1;
}
string STARCODE_shiftForward(string s, string k){
    return STARCODE_chr((STARCODE_ord(s)+STARCODE_ord(k)) % STARCODE_AlphabetLength);
}
string STARCODE_shiftBackward(string s, string k){
    int c=STARCODE_ord(s)-STARCODE_ord(k);
    if (c<0){
        return STARCODE_chr((c+STARCODE_AlphabetLength)%STARCODE_AlphabetLength);
    }
    else{
        return STARCODE_chr(c % STARCODE_AlphabetLength);
    }
}
string STARCODE_Encrypt(string s, string key){
    int i=1;
    int ls=StringLength(s);
    int lk=StringLength(key);
    string out="";
    while(i<=ls){
        out+=STARCODE_shiftForward( StringSub(s, i,i), StringSub(key, ((i-1)%lk)+1,((i-1)%lk)+1) );
        i+=1;
    }
    return out;
}
string STARCODE_Decrypt(string s, string key){
    int i=1;
    int ls=StringLength(s);
    int lk=StringLength(key);
    string out="";
    while(i<=ls){
        out+=STARCODE_shiftBackward( StringSub(s, i,i), StringSub(key, ((i-1)%lk)+1,((i-1)%lk)+1) );
        i+=1;
    }
    return out;
}
string STARCODE_Base10ToN(string current, int baseN){
    string n=IntToString(baseN);    
    string remainder="";
    string out="";
    
    while (current!="0"){
        remainder=STARCODE_BigNumModulo(current, n);
        out= STARCODE_chr(StringToInt(remainder)) + out;
        current=STARCODE_BigNumDivive(current, n);
    }
    return out;
}
string STARCODE_BaseNTo10(string current, int baseN){
    string out="0";
    string base=IntToString(baseN);
    int l=StringLength(current);
    int i=1;
    while(i<=l){
        out=STARCODE_BigNumAdd(out, STARCODE_BigNumMultiply(STARCODE_BigNumPower(base, l-i), IntToString(STARCODE_ord(StringSub(current, i,i)))) );
        i+=1;
    }
    return out;
}
string STARCODE_Hash(string toHash, int keyLength){
    int i=StringLength(toHash);
    string out="0";
    while(i>0){
        out=STARCODE_BigNumAdd(out, IntToString(  STARCODE_ord(StringSub(toHash,i,i)) * i  ));
        i-=1;
    }
    
    return STARCODE_fill(STARCODE_Base10ToN(STARCODE_BigNumModulo(out, IntToString( FixedToInt(Pow(STARCODE_AlphabetLength, keyLength)) )), STARCODE_AlphabetLength), keyLength);
}

//--------------------------------------------------------------------------------------------------
// Custom Script: READ ME
//--------------------------------------------------------------------------------------------------
//===========================================================
//================  S T A R C O D E  v1.4 ===================
//===========================================================
//  by s3rius
//
//    
//    SC2Mapster.com
//    http://forums.sc2mapster.com/development/galaxy-scripting-and-trigger-lib/5091-library-starcode-v1-3/
//    Credits to vjeux
//
//
//  DOCUMENTATION:
//
//  Before you start using STARCODE you should know a couple of things:
//
//    1) STARCODE is still somewhat experimental. There could very well be bugs 
//       or glitches left in the system. During my tests I have fixed everything
//       I noticed, but that is no guarantee that it's always work under every 
//       circumstances. The system is rather messy too.
//       I haven't noticed any lags during my tests, but I believe that it could be
//       quite a bit faster with optimized functions.
//       Not my problem, at the moment.
//
//    2) I have tested STARCODE with dozens of integer values and generated codes of
//       up to 100 digits length without problems. After that, however, the system 
//       often hits StarCraft II's execution limit. Since I cannot disable this limit
//       you should try not to make codes longer than 100 digits.
//       You can, however, just create several codes with 100 digits length each.
//
//    3) The generated code length can change, even if you haven't added or removed any
//       integers. 
//       That is because the closer an integer's value is to it's maximum value, the more
//       space it needs in the code.
//       So to get the maximum code length you have to set all stored integer's values to
//       their respective maximum values.
//       Keep this in mind when you are storing your codes in a bank.
//       When the codes' length is already close to the maximum size of the bank, you should
//       check whether the code can possibly exceed the bank size.
//
//    4) There is a public function called Set Encryption Alphabet.
//       You should leave this function alone, unless you have a good reason to use it and know
//       what you are doing.
//       One reason could be to remove some characters from the alphabet so that they
//       won't be used in the code anymore.
//       The default alphabet is:
//
//       "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!$%&/()=?,.-;:_^#+*' @{[]}|>"
//
//       You can add and remove characters as you like. However, you should always keep the first
//       ten characters (all numbers) at it's place, or some functions might return strange
//       results.
//       Also note that I have excluded "<" and "\" from the alphabet.
//       "\" is an escape characters so it's of no use to us.
//       "<" could be potentially dangerous. If you want to display your code and there happens
//       to be a sequence such as "<abc>" in there, StarCraft II will recongize this as a tag
//       and not display it. Thus you would get wrong results. I left ">" in because it won't
//       cause any harm on it's own.
//
//
//  Ok, I think I have mentioned everything. 
//  You can take a look at the Example Usage trigger to see how STARCODE can be used.
//
//  
//
// ~ s3rius
//

void lib1_InitCustomScript () {
}

// Functions
void lib1_gf_StarcodeStartCode () {
    // Implementation
        STARCODE_CurrentCode = "0";
}

void lib1_gf_StarcodeStoreIntegerValue (int lp_value, int lp_maximumValue) {
    // Implementation
    if(lp_value<lp_maximumValue+1){
        STARCODE_CurrentCode=STARCODE_Encode(STARCODE_CurrentCode, lp_value, lp_maximumValue+1);
    }else{
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringToText("Error! Starcode tried to save a value larger than it's maximum!"));
    }
}

void lib1_gf_StarcodeSetCode (string lp_code) {
    // Implementation
    STARCODE_CurrentCode=lp_code;
}

void lib1_gf_StarcodeSetEncryptionAlphabet (string lp_string) {
    // Implementation
    STARCODE_Alphabet=lp_string;
    STARCODE_AlphabetLength=StringLength(STARCODE_Alphabet);
}

string lib1_gf_StarcodeGetCode () {
    // Implementation
    return STARCODE_CurrentCode;
}

int lib1_gf_StarcodeGetIntegerValue (int lp_maximumValue) {
    // Variable Declarations
    int lv_i;

    // Variable Initialization

    // Implementation
    lv_i=STARCODE_Decode(STARCODE_CurrentCode, lp_maximumValue+1);
    STARCODE_CurrentCode=STARCODE_Decode2(STARCODE_CurrentCode, lp_maximumValue+1); //advance in the code
    return lv_i;
}

string lib1_gf_StarcodeEncryptString (string lp_toEncrypt, string lp_key) {
    // Implementation
    return STARCODE_Encrypt(lp_toEncrypt, lp_key);
}

string lib1_gf_StarcodeCompressString (string lp_toCompress) {
    // Implementation
    return STARCODE_Base10ToN(lp_toCompress, STARCODE_AlphabetLength);
}

string lib1_gf_StarcodeHashString (string lp_toHash, int lp_securityLevel) {
    // Implementation
    return STARCODE_Hash(lp_toHash, lp_securityLevel)+lp_toHash;
}

string lib1_gf_StarcodeRemoveHashfromString (string lp_string, int lp_securityLevel) {
    // Implementation
    return StringSub(lp_string,lp_securityLevel+1, StringLength(lp_string));
}

bool lib1_gf_StarcodeValidateString (string lp_toCheck, int lp_securityLevel) {
    // Implementation
    return STARCODE_Hash(StringSub(lp_toCheck,lp_securityLevel+1, StringLength(lp_toCheck)), lp_securityLevel)==StringSub(lp_toCheck,1, lp_securityLevel);
}

string lib1_gf_StarcodeDecryptString (string lp_toDecrypt, string lp_key) {
    // Implementation
    return STARCODE_Decrypt(lp_toDecrypt, lp_key);
}

string lib1_gf_StarcodeDecompressString (string lp_toDecompress) {
    // Implementation
    return STARCODE_BaseNTo10(lp_toDecompress, STARCODE_AlphabetLength);
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool lib1_InitLib_completed = false;

void lib1_InitLib () {
    if (lib1_InitLib_completed) {
        return;
    }

    lib1_InitCustomScript();

    lib1_InitLib_completed = true;
}

//--------------------------------------------------------------------------------------------------
// Library: KRYPTCODE
//--------------------------------------------------------------------------------------------------
// Function Declarations
string lib2_gf_KryptCodeEncryptString (string lp_input, string lp_password);
string lib2_gf_KyptCodeDecryptString (string lp_input, string lp_password);
void lib2_gf_ASCIITest ();
void lib2_gf_AESTest ();
void lib2_gf_AESTest2 ();

// Custom Script
//--------------------------------------------------------------------------------------------------
// Custom Script: ASCIIScript
//--------------------------------------------------------------------------------------------------
//------------------------ascii part----------------------------
//http://en.wikipedia.org/wiki/ascii
const string KRYPTCODE_alphabet_ascii="\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff";
const int KRYPTCODE__alphabetLength=256;
string base64_alphabet= "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
//fill string s to have fixed size
string KRYPTCODE_fill(string s, int i){
    int c=i-StringLength(s);
    int temp;
    string t="";
    while(c>0){
        temp = RandomInt(33,KRYPTCODE__alphabetLength-30);
        t+=StringSub(KRYPTCODE_alphabet_ascii,temp ,temp);
        //t+="A";
        c-=1;
    }
    return t+s;
}
//rm filled String from  KRYPTCODE_fill
string KRYPTCODE_cut(string s,int i){
    return StringSub(s,i+1,StringLength(s));
}
//convert int to byte no error check
string byte_to_char( int i ){
	return StringSub(KRYPTCODE_alphabet_ascii,i+1,i+1);
}
//convert ascii to  byte  no error check
int char_to_byte( string s ){
	int i= StringFind( KRYPTCODE_alphabet_ascii, s , true);
	return i-1;
}
//check if string is valid ascii
bool check_string(string s) {
	int i = 1;
      int a;
	while(i<=StringLength(s)){
		a = StringFind( KRYPTCODE_alphabet_ascii, StringSub(s,i,i) , true);
		if (a<=0){
			return false;
		}
		
		i+=1;
	}
	return true;
}
//end---------------------ascii part----------------------------
string KRYPTCODE_AES_CTR_expandString(string in){
      int length = 0;
	int k = 0;
      length = StringLength(in);
      if ( length % 16 == 0){
            k = (length/16+1)*16-length;
      }else{
            k = (length/16+2)*16-length;
      }
      length = k + length;
	return KRYPTCODE_fill(in, length-1)+StringSub(KRYPTCODE_alphabet_ascii,k,k);
}
string KRYPTCODE_AES_CTR_shrinkString(string input){
      int length = 0;
	int k = 0;
      length = StringLength(input);
      k = char_to_byte(StringSub(input,length,length));
	return KRYPTCODE_cut(StringSub(input,1,length-1),k);
}
string ascii_to_base64(string input){
	string output;
	int chr1;
	int chr2;
	int chr3;
	int enc1;
	int enc2;
	int enc3;
	int enc4;
      int i = 1;
	while (i<= StringLength(input)){
		chr1 = StringFind(KRYPTCODE_alphabet_ascii, StringSub(input,i,i), true)-1;
		i+=1;
		chr2 = StringFind(KRYPTCODE_alphabet_ascii, StringSub(input,i,i), true)-1;
		i+=1;
		chr3 = StringFind(KRYPTCODE_alphabet_ascii, StringSub(input,i,i), true)-1;
		i+=1;
		
		enc1 = chr1/4;
		enc2 = (chr1%4)*16 + chr2/16;
		enc3 = (chr2%16)*4 + chr3/64;
		enc4 = chr3%64;
		if (chr2<0) {
			enc3 = 64;
			enc4 = 64;
		} else if (chr3<0) {
			enc4 = 64;
		}
		output = output + StringSub(base64_alphabet,enc1+1,enc1+1)+ StringSub(base64_alphabet,enc2+1,enc2+1);
		output = output + StringSub(base64_alphabet,enc3+1,enc3+1)+ StringSub(base64_alphabet,enc4+1,enc4+1);
	}
	return output;
}
string base64_to_ascii(string input){
	string output;
	int chr1;
	int chr2;
	int chr3;
	int enc1;
	int enc2;
	int enc3;
	int enc4;
      int i = 1;
	while (i<= StringLength(input)){
		if ( StringFind( base64_alphabet, StringSub(input,i,i) , true)<1){
			return "";
		}
            i+=1;
	}
	i=1;
	while (i<= StringLength(input)){
		enc1  = StringFind( base64_alphabet, StringSub(input,i,i) , true)-1;
		i+=1;
		enc2  = StringFind( base64_alphabet, StringSub(input,i,i) , true)-1;
		i+=1;
		enc3  = StringFind( base64_alphabet, StringSub(input,i,i) , true)-1;
		i+=1;
		enc4  = StringFind( base64_alphabet, StringSub(input,i,i) , true)-1;
		i+=1;
		
		chr1 = enc1*4 +enc2/16;
		chr2 = (enc2%16)*16+enc3/4;
		chr3 = (enc3%4)*64+enc4;
		output = output + StringSub(KRYPTCODE_alphabet_ascii,chr1+1,chr1+1);
 
			if (enc3 != 64) {
				output = output + StringSub(KRYPTCODE_alphabet_ascii,chr2+1,chr2+1);
			}
			if (enc4 != 64) {
				output = output + StringSub(KRYPTCODE_alphabet_ascii,chr3+1,chr3+1);
			}
	}
	return output;
}

//--------------------------------------------------------------------------------------------------
// Custom Script: Global Script
//--------------------------------------------------------------------------------------------------
// Hash Input
byte[1024] HashInputData;
int HashInputSize = 0;
int GetHashInputLittleEndianInt( int position )
{
    int temp;
    int result;
    position *= 4;
    result = HashInputData[position];
    temp = HashInputData[position + 1];
    result |= temp << 8;
    temp = HashInputData[position + 2];
    result |= temp << 16;
    temp = HashInputData[position + 3];
    result |= temp << 24;
    return result;
}
int GetHashInputBigEndianInt( int position )
{
    int temp;
    int result;
    position *= 4;
    temp = HashInputData[position];
    result = temp << 24;
    temp = HashInputData[position + 1];
    result |= temp << 16;
    temp = HashInputData[position + 2];
    result |= temp << 8;
    temp = HashInputData[position + 3];
    result |= temp;
    return result;
}
// ASCII conversion
string asciiTable = "\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff";
byte CharToAsciiCode(string charContainingString, int charPosition)
{
    return StringFind( asciiTable, StringSub( charContainingString, charPosition + 1, charPosition + 1), c_stringCase );
}
//  Hex Conversion
string[16] HexTable;
string GetHexChar( int number )
{
    return HexTable[number];
}
string GetUnsignedLittleEndianHexRepresentation( int unsignedInt )
{
    string representation = "";
    representation += GetHexChar( ( unsignedInt & 0x000000F0 ) >> 4 );
    representation += GetHexChar( ( unsignedInt & 0x0000000F ) );
    representation += GetHexChar( ( unsignedInt & 0x0000F000 ) >> 12 );
    representation += GetHexChar( ( unsignedInt & 0x00000F00) >> 8 );
    representation += GetHexChar( ( unsignedInt & 0x00F00000 ) >> 20 );
    representation += GetHexChar( ( unsignedInt & 0x000F0000) >> 16 );
    if ( unsignedInt >= 0 )
    {
        representation += GetHexChar( unsignedInt >> 28 );
    }
    else
    {
        unsignedInt += 0x7FFFFFFF + 1;
        representation += GetHexChar( 0x8 + ( unsignedInt >> 28 ) );
    }
    representation += GetHexChar( ( unsignedInt & 0x0F000000) >> 24 );
    return representation;
}
string GetUnsignedHexRepresentation( int unsignedInt )
{   
    string representation = "";
    
    if ( unsignedInt >= 0 )
    {
        representation += GetHexChar( unsignedInt >> 28 );
    }
    else
    {
        unsignedInt += 0x7FFFFFFF + 1;
        representation += GetHexChar( 0x8 + ( unsignedInt >> 28 ) );
    }
    representation += GetHexChar( ( unsignedInt & 0x0F000000) >> 24 );
    representation += GetHexChar( ( unsignedInt & 0x00F00000 ) >> 20 );
    representation += GetHexChar( ( unsignedInt & 0x000F0000) >> 16 );
    representation += GetHexChar( ( unsignedInt & 0x0000F000 ) >> 12 );
    representation += GetHexChar( ( unsignedInt & 0x00000F00) >> 8 );
    representation += GetHexChar( ( unsignedInt & 0x000000F0 ) >> 4 );
    representation += GetHexChar( ( unsignedInt & 0x0000000F ) );
    return representation;
}
// Resolve data function
int GetFixedDataAsInt(fixed fixedVar)
{
    int data;
    data= ( FixedToInt(fixedVar) << 12 );
    fixedVar -= data;
    data|= FixedToInt( fixedVar* Pow2(12) );
    return data;
}
//  Operations
int UnsignedRightShift( int input, int shift )  // Right shift pads bit 1's when the value is under zero for signed integers. So this is the work-around.
{
    return input >> shift & ~( -1 << ( 32 - shift  ) );
}
int UnsignedLeftRotate( int input, int rotation )
{
    rotation = ModI( rotation, 32 );
    return ( input << rotation ) | UnsignedRightShift (input,  32 - rotation );
}
int UnsignedRightRotate( int input, int rotation )
{
    rotation = ModI( rotation, 32 );
    return UnsignedRightShift( input, rotation ) | ( input << ( 32 - rotation ) ); 
}
int UnsignedLeftRotate32( int input, int rotation ) // Optimized version for rotation within range 0 =< x =< 32
{
    return ( input << rotation ) | UnsignedRightShift (input,  32 - rotation );
}
int UnsignedRightRotate32( int input, int rotation ) // Optimized version for rotation within range 0 =< x =< 32
{
    return UnsignedRightShift( input, rotation ) | ( input << ( 32 - rotation ) ); 
}

//--------------------------------------------------------------------------------------------------
// Custom Script: SHA256 Script
//--------------------------------------------------------------------------------------------------
int Sha256Ch( int x, int y, int z )
{
    return ( x & y ) ^ ( ~x & z );
}
int Sha256Maj( int x, int y, int z )
{
    return ( x & y ) ^ ( x & z ) ^ ( y & z );
}
int Sha256CapitalSigma0( int x )
{
    return UnsignedRightRotate32( x, 2 ) ^ UnsignedRightRotate32( x, 13 ) ^ UnsignedRightRotate32( x, 22 );
}
int Sha256CapitalSigma1( int x )
{
    return UnsignedRightRotate32( x, 6 ) ^ UnsignedRightRotate32( x, 11 ) ^ UnsignedRightRotate32( x, 25 );
}
int Sha256Sigma0( int x )
{
    return UnsignedRightRotate32( x, 7 ) ^ UnsignedRightRotate32( x, 18 ) ^ UnsignedRightShift( x, 3 );
}
int Sha256Sigma1( int x )
{
    return UnsignedRightRotate32( x, 17 ) ^ UnsignedRightRotate32( x, 19 ) ^ UnsignedRightShift( x, 10 );
}
int Sha256T0( int e, int f, int g, int h, int k, int w )
{
    return h + Sha256CapitalSigma1( e ) + Sha256Ch( e, f, g ) + k + w;
}
int Sha256T1( int a, int b, int c )
{
    return Sha256CapitalSigma0( a ) + Sha256Maj( a, b, c );
}
string GenerateSha256HashCode()
{
    //  Variables
    int h0 = 0x6a09e667;
    int h1 = 0x0b000000 << 4 | 0x0b67ae85;
    int h2 = 0x3c6ef372;
    int h3 = 0x0a000000 << 4 | 0x054ff53a;
    int h4 = 0x510e527f;
    int h5 = 0x09000000 << 4 | 0x0b05688c;
    int h6 = 0x1f83d9ab;
    int h7 = 0x5be0cd19;
    int a; int b; int c; int d; int e; int f; int g; int h; int t0; int t1;
    int[64] w;
    int i = 0; int j = 0; int k = 0;
    int messageNBits;
    int paddingLength;
    //  Prepare message
    messageNBits = HashInputSize * 8;
    HashInputData[HashInputSize] = 0x80;
    HashInputSize += 1;
    paddingLength =  56 - ModI( HashInputSize, 64 );
    if ( paddingLength < 0 )
    {
        paddingLength += 64;
    }
    while ( i < paddingLength )
    {
        HashInputData[HashInputSize] = 0;
        HashInputSize += 1;
        i += 1;
    }
    //Note: You might want to change this when the hash input increases in size.
    HashInputData[HashInputSize] = 0;
    HashInputSize += 1;
    HashInputData[HashInputSize] = 0;
    HashInputSize += 1;
    HashInputData[HashInputSize] = 0;
    HashInputSize += 1;
    HashInputData[HashInputSize] = 0;
    HashInputSize += 1;
    HashInputData[HashInputSize] = 0;
    HashInputSize += 1;
    HashInputData[HashInputSize] = 0;
    HashInputSize += 1;
    HashInputData[HashInputSize] = messageNBits >> 8;
    HashInputSize += 1;
    HashInputData[HashInputSize] = messageNBits;
    HashInputSize += 1;
    //  Loop
    i = 0;
    while ( i < ( HashInputSize - 1 ) )
    {   
        //  Working Variables
        a = h0;
        b = h1;
        c = h2;
        d = h3;
        e = h4;
        f = h5;
        g = h6;
        h = h7;
        //  Preparing Extra Message Schedule
        j = 0;
        while ( j < 16 )
        {
            w[j] = GetHashInputBigEndianInt( k );
            j += 1;
            k += 1;
        }
        while ( j < 64 )
        {
            w[j] =  Sha256Sigma1( w[j - 2] ) +
            w[j - 7] +
            Sha256Sigma0( w[j - 15] ) +
            w[j - 16];
            
            j += 1;
        }
        // 0 to 15
        t0 = Sha256T0( e, f, g, h, 0x428a2f98, w[0] ); t1 = Sha256T1( a, b, c );
        h = t0 + t1; d += t0; i += 1;
        t0 = Sha256T0( d, e, f, g, 0x71374491, w[1] ); t1 = Sha256T1( h, a, b );
        g = t0 + t1; c += t0; i += 1;
        t0 = Sha256T0( c, d, e, f, 0x0b000000 << 4 | 0x05c0fbcf, w[2] ); t1 = Sha256T1( g, h, a );
        f = t0 + t1; b += t0; i += 1;
        t0 = Sha256T0( b, c, d, e, 0x0e000000 << 4 | 0x09b5dba5, w[3] ); t1 = Sha256T1( f, g, h );
        e = t0 + t1; a += t0; i += 1;
        t0 = Sha256T0( a, b, c, d, 0x3956c25b, w[4] ); t1 = Sha256T1( e, f, g );
        d = t0 + t1; h += t0; i += 1;
        t0 = Sha256T0( h, a, b, c, 0x59f111f1, w[5] ); t1 = Sha256T1( d, e, f );
        c = t0 + t1; g += t0; i += 1;
        t0 = Sha256T0( g, h, a, b, 0x09000000 << 4 | 0x023f82a4, w[6] ); t1 = Sha256T1( c, d, e );
        b = t0 + t1; f += t0; i += 1;
        t0 = Sha256T0( f, g, h, a, 0x0a000000 << 4 | 0x0b1c5ed5, w[7] ); t1 = Sha256T1( b, c, d );
        a = t0 + t1; e += t0; i += 1;
        t0 = Sha256T0( e, f, g, h, 0x0d000000 << 4 | 0x0807aa98, w[8] ); t1 = Sha256T1( a, b, c );
        h = t0 + t1; d += t0; i += 1;
        t0 = Sha256T0( d, e, f, g, 0x12835b01, w[9] ); t1 = Sha256T1( h, a, b );
        g = t0 + t1; c += t0; i += 1;
        t0 = Sha256T0( c, d, e, f, 0x243185be, w[10] ); t1 = Sha256T1( g, h, a );
        f = t0 + t1; b += t0; i += 1;
        t0 = Sha256T0( b, c, d, e, 0x550c7dc3, w[11] ); t1 = Sha256T1( f, g, h );
        e = t0 + t1; a += t0; i += 1;
        t0 = Sha256T0( a, b, c, d, 0x72be5d74, w[12] ); t1 = Sha256T1( e, f, g );
        d = t0 + t1; h += t0; i += 1;
        t0 = Sha256T0( h, a, b, c, 0x08000000 << 4 | 0x00deb1fe, w[13] ); t1 = Sha256T1( d, e, f );
        c = t0 + t1; g += t0; i += 1;
        t0 = Sha256T0( g, h, a, b, 0x09000000 << 4 | 0x0bdc06a7, w[14] ); t1 = Sha256T1( c, d, e );
        b = t0 + t1; f += t0; i += 1;
        t0 = Sha256T0( f, g, h, a, 0x0c000000 << 4 | 0x019bf174, w[15] ); t1 = Sha256T1( b, c, d );
        a = t0 + t1; e += t0;
        // 16 to 31
        t0 = Sha256T0( e, f, g, h, 0x0e000000 << 4 | 0x049b69c1, w[16] ); t1 = Sha256T1( a, b, c );
        h = t0 + t1; d += t0;
        t0 = Sha256T0( d, e, f, g, 0x0e000000 << 4 | 0x0fbe4786, w[17] ); t1 = Sha256T1( h, a, b );
        g = t0 + t1; c += t0;
        t0 = Sha256T0( c, d, e, f, 0x0fc19dc6, w[18] ); t1 = Sha256T1( g, h, a );
        f = t0 + t1; b += t0;
        t0 = Sha256T0( b, c, d, e, 0x240ca1cc, w[19] ); t1 = Sha256T1( f, g, h );
        e = t0 + t1; a += t0;
        t0 = Sha256T0( a, b, c, d, 0x2de92c6f, w[20] ); t1 = Sha256T1( e, f, g );
        d = t0 + t1; h += t0;
        t0 = Sha256T0( h, a, b, c, 0x4a7484aa, w[21] ); t1 = Sha256T1( d, e, f );
        c = t0 + t1; g += t0;
        t0 = Sha256T0( g, h, a, b, 0x5cb0a9dc, w[22] ); t1 = Sha256T1( c, d, e );
        b = t0 + t1; f += t0;
        t0 = Sha256T0( f, g, h, a, 0x76f988da, w[23] ); t1 = Sha256T1( b, c, d );
        a = t0 + t1; e += t0;
        t0 = Sha256T0( e, f, g, h, 0x09000000 << 4 | 0x083e5152, w[24] ); t1 = Sha256T1( a, b, c );
        h = t0 + t1; d += t0;
        t0 = Sha256T0( d, e, f, g, 0x0a000000 << 4 | 0x0831c66d, w[25] ); t1 = Sha256T1( h, a, b );
        g = t0 + t1; c += t0;
        t0 = Sha256T0( c, d, e, f, 0x0b000000 << 4 | 0x000327c8, w[26] ); t1 = Sha256T1( g, h, a );
        f = t0 + t1; b += t0;
        t0 = Sha256T0( b, c, d, e, 0x0b000000 << 4 | 0x0f597fc7, w[27] ); t1 = Sha256T1( f, g, h );
        e = t0 + t1; a += t0;
        t0 = Sha256T0( a, b, c, d, 0x0c000000 << 4 | 0x06e00bf3, w[28] ); t1 = Sha256T1( e, f, g );
        d = t0 + t1; h += t0;
        t0 = Sha256T0( h, a, b, c, 0x0d000000 << 4 | 0x05a79147, w[29] ); t1 = Sha256T1( d, e, f );
        c = t0 + t1; g += t0;
        t0 = Sha256T0( g, h, a, b, 0x06ca6351, w[30] ); t1 = Sha256T1( c, d, e );
        b = t0 + t1; f += t0;
        t0 = Sha256T0( f, g, h, a, 0x14292967, w[31] ); t1 = Sha256T1( b, c, d );
        a = t0 + t1; e += t0;
        // 32 to 47
        t0 = Sha256T0( e, f, g, h, 0x27b70a85, w[32] ); t1 = Sha256T1( a, b, c );
        h = t0 + t1; d += t0;
        t0 = Sha256T0( d, e, f, g, 0x2e1b2138, w[33] ); t1 = Sha256T1( h, a, b );
        g = t0 + t1; c += t0;
        t0 = Sha256T0( c, d, e, f, 0x4d2c6dfc, w[34] ); t1 = Sha256T1( g, h, a );
        f = t0 + t1; b += t0;
        t0 = Sha256T0( b, c, d, e, 0x53380d13, w[35] ); t1 = Sha256T1( f, g, h );
        e = t0 + t1; a += t0;
        t0 = Sha256T0( a, b, c, d, 0x650a7354, w[36] ); t1 = Sha256T1( e, f, g );
        d = t0 + t1; h += t0;
        t0 = Sha256T0( h, a, b, c, 0x766a0abb, w[37] ); t1 = Sha256T1( d, e, f );
        c = t0 + t1; g += t0;
        t0 = Sha256T0( g, h, a, b, 0x08000000 << 4 | 0x01c2c92e, w[38] ); t1 = Sha256T1( c, d, e );
        b = t0 + t1; f += t0;
        t0 = Sha256T0( f, g, h, a, 0x09000000 << 4 | 0x02722c85, w[39] ); t1 = Sha256T1( b, c, d );
        a = t0 + t1; e += t0;
        t0 = Sha256T0( e, f, g, h, 0x0a000000 << 4 | 0x02bfe8a1, w[40] ); t1 = Sha256T1( a, b, c );
        h = t0 + t1; d += t0;
        t0 = Sha256T0( d, e, f, g, 0x0a000000 << 4 | 0x081a664b, w[41] ); t1 = Sha256T1( h, a, b );
        g = t0 + t1; c += t0;
        t0 = Sha256T0( c, d, e, f, 0x0c000000 << 4 | 0x024b8b70, w[42] ); t1 = Sha256T1( g, h, a );
        f = t0 + t1; b += t0;
        t0 = Sha256T0( b, c, d, e, 0x0c000000 << 4 | 0x076c51a3, w[43] ); t1 = Sha256T1( f, g, h );
        e = t0 + t1; a += t0;
        t0 = Sha256T0( a, b, c, d, 0x0d000000 << 4 | 0x0192e819, w[44] ); t1 = Sha256T1( e, f, g );
        d = t0 + t1; h += t0;
        t0 = Sha256T0( h, a, b, c, 0x0d000000 << 4 | 0x06990624, w[45] ); t1 = Sha256T1( d, e, f );
        c = t0 + t1; g += t0;
        t0 = Sha256T0( g, h, a, b, 0x0f000000 << 4 | 0x040e3585, w[46] ); t1 = Sha256T1( c, d, e );
        b = t0 + t1; f += t0;
        t0 = Sha256T0( f, g, h, a, 0x106aa070, w[47] ); t1 = Sha256T1( b, c, d );
        a = t0 + t1; e += t0;
        // 48 to 63
        t0 = Sha256T0( e, f, g, h, 0x19a4c116, w[48] ); t1 = Sha256T1( a, b, c );
        h = t0 + t1; d += t0;
        t0 = Sha256T0( d, e, f, g, 0x1e376c08, w[49] ); t1 = Sha256T1( h, a, b );
        g = t0 + t1; c += t0;
        t0 = Sha256T0( c, d, e, f, 0x2748774c, w[50] ); t1 = Sha256T1( g, h, a );
        f = t0 + t1; b += t0;
        t0 = Sha256T0( b, c, d, e, 0x34b0bcb5, w[51] ); t1 = Sha256T1( f, g, h );
        e = t0 + t1; a += t0;
        t0 = Sha256T0( a, b, c, d, 0x391c0cb3, w[52] ); t1 = Sha256T1( e, f, g );
        d = t0 + t1; h += t0;
        t0 = Sha256T0( h, a, b, c, 0x4ed8aa4a, w[53] ); t1 = Sha256T1( d, e, f );
        c = t0 + t1; g += t0;
        t0 = Sha256T0( g, h, a, b, 0x5b9cca4f, w[54] ); t1 = Sha256T1( c, d, e );
        b = t0 + t1; f += t0;
        t0 = Sha256T0( f, g, h, a, 0x682e6ff3, w[55] ); t1 = Sha256T1( b, c, d );
        a = t0 + t1; e += t0;
        t0 = Sha256T0( e, f, g, h, 0x748f82ee, w[56] ); t1 = Sha256T1( a, b, c );
        h = t0 + t1; d += t0;
        t0 = Sha256T0( d, e, f, g, 0x78a5636f, w[57] ); t1 = Sha256T1( h, a, b );
        g = t0 + t1; c += t0;
        t0 = Sha256T0( c, d, e, f, 0x08000000 << 4 | 0x04c87814, w[58] ); t1 = Sha256T1( g, h, a );
        f = t0 + t1; b += t0;
        t0 = Sha256T0( b, c, d, e, 0x08000000 << 4 | 0x0cc70208, w[59] ); t1 = Sha256T1( f, g, h );
        e = t0 + t1; a += t0;
        t0 = Sha256T0( a, b, c, d, 0x09000000 << 4 | 0x00befffa, w[60] ); t1 = Sha256T1( e, f, g );
        d = t0 + t1; h += t0;
        t0 = Sha256T0( h, a, b, c, 0x0a000000 << 4 | 0x04506ceb, w[61] ); t1 = Sha256T1( d, e, f );
        c = t0 + t1; g += t0;
        t0 = Sha256T0( g, h, a, b, 0x0b000000 << 4 | 0x0ef9a3f7, w[62] ); t1 = Sha256T1( c, d, e );
        b = t0 + t1; f += t0;
        t0 = Sha256T0( f, g, h, a, 0x0c000000 << 4 | 0x067178f2, w[63] ); t1 = Sha256T1( b, c, d );
        a = t0 + t1; e += t0;
        h0 += a;
        h1 += b;
        h2 += c;
        h3 += d;
        h4 += e;
        h5 += f;
        h6 += g;
        h7 += h;
        i += 49;
    }
    return  GetUnsignedHexRepresentation(h0) + 
            GetUnsignedHexRepresentation(h1) + 
            GetUnsignedHexRepresentation(h2) + 
            GetUnsignedHexRepresentation(h3) + 
            GetUnsignedHexRepresentation(h4) + 
            GetUnsignedHexRepresentation(h5) + 
            GetUnsignedHexRepresentation(h6) + 
            GetUnsignedHexRepresentation(h7);
}

//--------------------------------------------------------------------------------------------------
// Custom Script: AESScript
//--------------------------------------------------------------------------------------------------
string KRYPTCODE_result="";
const int blockSize = 16;
bool KRYPTCODE_AES_key_setted = false;
int[256] SB;
int[256] SBInv;
int[16] ShiftRowTab;
int[16] ShiftRowTabInv;
int[256] xtime;
int [176] expanded_key ;
int[128] [17] temp_storage;
const int storage_size = 128;
int last_temp_index = -1;
bool validateEncryptedData(string data){
    if (StringLength(data) != 16) {
		return false;
    }
	return true;
}
bool validateKey(string key){
	if (StringLength(key) != 16) {
		return false;
	}
	return true;
}
//allocate a 16byte data block in virtual memory
int KRYPTCODE_AES_allocate() {
	int i = (last_temp_index+1)%storage_size;
      int b;
	while ( i != last_temp_index) {
		if (temp_storage[i][16] == 0){
			temp_storage[i][16] = 1;
			last_temp_index = i;
			return i;
		}
			
		
		i = (i+1)% storage_size;
	}
	return i;
}
//deallocate data block in virtual memory
void KRYPTCODE_AES_deallocate(int state) {
	temp_storage[state][16] = 0;
}
//convert 16byte data block to 16byte virtual memory 
void KRYPTCODE_AES_setOriData(int block, string data)
{
	int i = 0;
	while ( i < 16) {
		temp_storage[block][i] = char_to_byte(StringSub(data,i+1,i+1));
		i+=1;
	}
}
//return 16byte data block from 16byte virtual memory
string KRYPTCODE_AES_getOriData(int block)
{	
	string result = "";
	int i = 0;
	while ( i < 16) {
		result += byte_to_char(temp_storage[block][i]);
		i+=1;
	}
	return result;
}
void KRYPTCODE_AES_subBytes( int state, bool inv) {
      int i;
	if (inv){
		i = 0;
		while (i<16){
			temp_storage[state][i] = SBInv[temp_storage[state][i]];
			i+=1;
		}
	}else{
		i = 0;
		while (i<16){
			temp_storage[state][i] = SB[temp_storage[state][i]];
			i+=1;
		}
	}
}
void KRYPTCODE_AES_addRoundKey(int state, int rkey) {
	int i = 0;
	while (i<16){
		temp_storage[state][i] ^= temp_storage[rkey][i];
		i+=1;
	}
}
void KRYPTCODE_AES_shiftRows( int state, bool inv) {
	byte[16] h;
	int i = 0;
	while (i<16){
			h[i] = temp_storage[state][i];
			i+=1;
	}
	i = 0;
	if (inv){
		while (i<16){
			temp_storage[state][i] = h[ShiftRowTabInv[i]];
			i+=1;
		}
	}else{
		while (i<16){
			temp_storage[state][i] = h[ShiftRowTab[i]];
			i+=1;
		}
	}
}
void KRYPTCODE_AES_mixColumns(int state) {
	int i = 0;
	int s0;
	int s1;
	int s2;
	int s3;
	int h;
	while (i<16){
		s0 = temp_storage[state][i+0]; 
		s1 = temp_storage[state][i+1]; 
		s2 = temp_storage[state][i+2]; 
		s3 = temp_storage[state][i+3]; 
		h = s0 ^ s1 ^ s2 ^ s3;
		temp_storage[state][i + 0] ^= h ^ xtime[s0 ^ s1];
		temp_storage[state][i + 1] ^= h ^ xtime[s1 ^ s2];
		temp_storage[state][i + 2] ^= h ^ xtime[s2 ^ s3];
		temp_storage[state][i + 3] ^= h ^ xtime[s3 ^ s0];
		i+=4;
	}
}
void KRYPTCODE_AES_mixColumnsInv(int state) {
	int i = 0;
	int s0;
	int s1;
	int s2;
	int s3;
	int h;
	int xh;
	int h1;
	int h2;
	while (i<16){
		s0 = temp_storage[state][i+0]; 
		s1 = temp_storage[state][i+1]; 
		s2 = temp_storage[state][i+2]; 
		s3 = temp_storage[state][i+3]; 
		h = s0 ^ s1 ^ s2 ^ s3;
		xh = xtime[h];
		h1 = xtime[xtime[xh ^ s0 ^ s2]] ^ h;
		h2 = xtime[xtime[xh ^ s1 ^ s3]] ^ h;
		temp_storage[state][i + 0] ^= h1 ^ xtime[s0 ^ s1];
		temp_storage[state][i + 1] ^= h2 ^ xtime[s1 ^ s2];
		temp_storage[state][i + 2] ^= h1 ^ xtime[s2 ^ s3];
		temp_storage[state][i + 3] ^= h2 ^ xtime[s3 ^ s0];
		i+=4;
	}
}
//copy 16byte part of the key to virtual memory
void KRYPTCODE_AES_setRkey(int rkey, int start)
{
	int i  = 0;
	while (i<16) {
		temp_storage[rkey][i]=expanded_key[start+i];
		i+=1;
	}
}
void KRYPTCODE_AES_init(){
	//we hate galaxy script 
	int i = 0;
	SB[0] = 99;
	SB[1] = 124;
	SB[2] = 119;
	SB[3] = 123;
	SB[4] = 242;
	SB[5] = 107;
	SB[6] = 111;
	SB[7] = 197;
	SB[8] = 48;
	SB[9] = 1;
	SB[10] = 103;
	SB[11] = 43;
	SB[12] = 254;
	SB[13] = 215;
	SB[14] = 171;
	SB[15] = 118;
	SB[16] = 202;
	SB[17] = 130;
	SB[18] = 201;
	SB[19] = 125;
	SB[20] = 250;
	SB[21] = 89;
	SB[22] = 71;
	SB[23] = 240;
	SB[24] = 173;
	SB[25] = 212;
	SB[26] = 162;
	SB[27] = 175;
	SB[28] = 156;
	SB[29] = 164;
	SB[30] = 114;
	SB[31] = 192;
	SB[32] = 183;
	SB[33] = 253;
	SB[34] = 147;
	SB[35] = 38;
	SB[36] = 54;
	SB[37] = 63;
	SB[38] = 247;
	SB[39] = 204;
	SB[40] = 52;
	SB[41] = 165;
	SB[42] = 229;
	SB[43] = 241;
	SB[44] = 113;
	SB[45] = 216;
	SB[46] = 49;
	SB[47] = 21;
	SB[48] = 4;
	SB[49] = 199;
	SB[50] = 35;
	SB[51] = 195;
	SB[52] = 24;
	SB[53] = 150;
	SB[54] = 5;
	SB[55] = 154;
	SB[56] = 7;
	SB[57] = 18;
	SB[58] = 128;
	SB[59] = 226;
	SB[60] = 235;
	SB[61] = 39;
	SB[62] = 178;
	SB[63] = 117;
	SB[64] = 9;
	SB[65] = 131;
	SB[66] = 44;
	SB[67] = 26;
	SB[68] = 27;
	SB[69] = 110;
	SB[70] = 90;
	SB[71] = 160;
	SB[72] = 82;
	SB[73] = 59;
	SB[74] = 214;
	SB[75] = 179;
	SB[76] = 41;
	SB[77] = 227;
	SB[78] = 47;
	SB[79] = 132;
	SB[80] = 83;
	SB[81] = 209;
	SB[82] = 0;
	SB[83] = 237;
	SB[84] = 32;
	SB[85] = 252;
	SB[86] = 177;
	SB[87] = 91;
	SB[88] = 106;
	SB[89] = 203;
	SB[90] = 190;
	SB[91] = 57;
	SB[92] = 74;
	SB[93] = 76;
	SB[94] = 88;
	SB[95] = 207;
	SB[96] = 208;
	SB[97] = 239;
	SB[98] = 170;
	SB[99] = 251;
	SB[100] = 67;
	SB[101] = 77;
	SB[102] = 51;
	SB[103] = 133;
	SB[104] = 69;
	SB[105] = 249;
	SB[106] = 2;
	SB[107] = 127;
	SB[108] = 80;
	SB[109] = 60;
	SB[110] = 159;
	SB[111] = 168;
	SB[112] = 81;
	SB[113] = 163;
	SB[114] = 64;
	SB[115] = 143;
	SB[116] = 146;
	SB[117] = 157;
	SB[118] = 56;
	SB[119] = 245;
	SB[120] = 188;
	SB[121] = 182;
	SB[122] = 218;
	SB[123] = 33;
	SB[124] = 16;
	SB[125] = 255;
	SB[126] = 243;
	SB[127] = 210;
	SB[128] = 205;
	SB[129] = 12;
	SB[130] = 19;
	SB[131] = 236;
	SB[132] = 95;
	SB[133] = 151;
	SB[134] = 68;
	SB[135] = 23;
	SB[136] = 196;
	SB[137] = 167;
	SB[138] = 126;
	SB[139] = 61;
	SB[140] = 100;
	SB[141] = 93;
	SB[142] = 25;
	SB[143] = 115;
	SB[144] = 96;
	SB[145] = 129;
	SB[146] = 79;
	SB[147] = 220;
	SB[148] = 34;
	SB[149] = 42;
	SB[150] = 144;
	SB[151] = 136;
	SB[152] = 70;
	SB[153] = 238;
	SB[154] = 184;
	SB[155] = 20;
	SB[156] = 222;
	SB[157] = 94;
	SB[158] = 11;
	SB[159] = 219;
	SB[160] = 224;
	SB[161] = 50;
	SB[162] = 58;
	SB[163] = 10;
	SB[164] = 73;
	SB[165] = 6;
	SB[166] = 36;
	SB[167] = 92;
	SB[168] = 194;
	SB[169] = 211;
	SB[170] = 172;
	SB[171] = 98;
	SB[172] = 145;
	SB[173] = 149;
	SB[174] = 228;
	SB[175] = 121;
	SB[176] = 231;
	SB[177] = 200;
	SB[178] = 55;
	SB[179] = 109;
	SB[180] = 141;
	SB[181] = 213;
	SB[182] = 78;
	SB[183] = 169;
	SB[184] = 108;
	SB[185] = 86;
	SB[186] = 244;
	SB[187] = 234;
	SB[188] = 101;
	SB[189] = 122;
	SB[190] = 174;
	SB[191] = 8;
	SB[192] = 186;
	SB[193] = 120;
	SB[194] = 37;
	SB[195] = 46;
	SB[196] = 28;
	SB[197] = 166;
	SB[198] = 180;
	SB[199] = 198;
	SB[200] = 232;
	SB[201] = 221;
	SB[202] = 116;
	SB[203] = 31;
	SB[204] = 75;
	SB[205] = 189;
	SB[206] = 139;
	SB[207] = 138;
	SB[208] = 112;
	SB[209] = 62;
	SB[210] = 181;
	SB[211] = 102;
	SB[212] = 72;
	SB[213] = 3;
	SB[214] = 246;
	SB[215] = 14;
	SB[216] = 97;
	SB[217] = 53;
	SB[218] = 87;
	SB[219] = 185;
	SB[220] = 134;
	SB[221] = 193;
	SB[222] = 29;
	SB[223] = 158;
	SB[224] = 225;
	SB[225] = 248;
	SB[226] = 152;
	SB[227] = 17;
	SB[228] = 105;
	SB[229] = 217;
	SB[230] = 142;
	SB[231] = 148;
	SB[232] = 155;
	SB[233] = 30;
	SB[234] = 135;
	SB[235] = 233;
	SB[236] = 206;
	SB[237] = 85;
	SB[238] = 40;
	SB[239] = 223;
	SB[240] = 140;
	SB[241] = 161;
	SB[242] = 137;
	SB[243] = 13;
	SB[244] = 191;
	SB[245] = 230;
	SB[246] = 66;
	SB[247] = 104;
	SB[248] = 65;
	SB[249] = 153;
	SB[250] = 45;
	SB[251] = 15;
	SB[252] = 176;
	SB[253] = 84;
	SB[254] = 187;
	SB[255] = 22;
	SBInv[0] = 82;
	SBInv[1] = 9;
	SBInv[2] = 106;
	SBInv[3] = 213;
	SBInv[4] = 48;
	SBInv[5] = 54;
	SBInv[6] = 165;
	SBInv[7] = 56;
	SBInv[8] = 191;
	SBInv[9] = 64;
	SBInv[10] = 163;
	SBInv[11] = 158;
	SBInv[12] = 129;
	SBInv[13] = 243;
	SBInv[14] = 215;
	SBInv[15] = 251;
	SBInv[16] = 124;
	SBInv[17] = 227;
	SBInv[18] = 57;
	SBInv[19] = 130;
	SBInv[20] = 155;
	SBInv[21] = 47;
	SBInv[22] = 255;
	SBInv[23] = 135;
	SBInv[24] = 52;
	SBInv[25] = 142;
	SBInv[26] = 67;
	SBInv[27] = 68;
	SBInv[28] = 196;
	SBInv[29] = 222;
	SBInv[30] = 233;
	SBInv[31] = 203;
	SBInv[32] = 84;
	SBInv[33] = 123;
	SBInv[34] = 148;
	SBInv[35] = 50;
	SBInv[36] = 166;
	SBInv[37] = 194;
	SBInv[38] = 35;
	SBInv[39] = 61;
	SBInv[40] = 238;
	SBInv[41] = 76;
	SBInv[42] = 149;
	SBInv[43] = 11;
	SBInv[44] = 66;
	SBInv[45] = 250;
	SBInv[46] = 195;
	SBInv[47] = 78;
	SBInv[48] = 8;
	SBInv[49] = 46;
	SBInv[50] = 161;
	SBInv[51] = 102;
	SBInv[52] = 40;
	SBInv[53] = 217;
	SBInv[54] = 36;
	SBInv[55] = 178;
	SBInv[56] = 118;
	SBInv[57] = 91;
	SBInv[58] = 162;
	SBInv[59] = 73;
	SBInv[60] = 109;
	SBInv[61] = 139;
	SBInv[62] = 209;
	SBInv[63] = 37;
	SBInv[64] = 114;
	SBInv[65] = 248;
	SBInv[66] = 246;
	SBInv[67] = 100;
	SBInv[68] = 134;
	SBInv[69] = 104;
	SBInv[70] = 152;
	SBInv[71] = 22;
	SBInv[72] = 212;
	SBInv[73] = 164;
	SBInv[74] = 92;
	SBInv[75] = 204;
	SBInv[76] = 93;
	SBInv[77] = 101;
	SBInv[78] = 182;
	SBInv[79] = 146;
	SBInv[80] = 108;
	SBInv[81] = 112;
	SBInv[82] = 72;
	SBInv[83] = 80;
	SBInv[84] = 253;
	SBInv[85] = 237;
	SBInv[86] = 185;
	SBInv[87] = 218;
	SBInv[88] = 94;
	SBInv[89] = 21;
	SBInv[90] = 70;
	SBInv[91] = 87;
	SBInv[92] = 167;
	SBInv[93] = 141;
	SBInv[94] = 157;
	SBInv[95] = 132;
	SBInv[96] = 144;
	SBInv[97] = 216;
	SBInv[98] = 171;
	SBInv[99] = 0;
	SBInv[100] = 140;
	SBInv[101] = 188;
	SBInv[102] = 211;
	SBInv[103] = 10;
	SBInv[104] = 247;
	SBInv[105] = 228;
	SBInv[106] = 88;
	SBInv[107] = 5;
	SBInv[108] = 184;
	SBInv[109] = 179;
	SBInv[110] = 69;
	SBInv[111] = 6;
	SBInv[112] = 208;
	SBInv[113] = 44;
	SBInv[114] = 30;
	SBInv[115] = 143;
	SBInv[116] = 202;
	SBInv[117] = 63;
	SBInv[118] = 15;
	SBInv[119] = 2;
	SBInv[120] = 193;
	SBInv[121] = 175;
	SBInv[122] = 189;
	SBInv[123] = 3;
	SBInv[124] = 1;
	SBInv[125] = 19;
	SBInv[126] = 138;
	SBInv[127] = 107;
	SBInv[128] = 58;
	SBInv[129] = 145;
	SBInv[130] = 17;
	SBInv[131] = 65;
	SBInv[132] = 79;
	SBInv[133] = 103;
	SBInv[134] = 220;
	SBInv[135] = 234;
	SBInv[136] = 151;
	SBInv[137] = 242;
	SBInv[138] = 207;
	SBInv[139] = 206;
	SBInv[140] = 240;
	SBInv[141] = 180;
	SBInv[142] = 230;
	SBInv[143] = 115;
	SBInv[144] = 150;
	SBInv[145] = 172;
	SBInv[146] = 116;
	SBInv[147] = 34;
	SBInv[148] = 231;
	SBInv[149] = 173;
	SBInv[150] = 53;
	SBInv[151] = 133;
	SBInv[152] = 226;
	SBInv[153] = 249;
	SBInv[154] = 55;
	SBInv[155] = 232;
	SBInv[156] = 28;
	SBInv[157] = 117;
	SBInv[158] = 223;
	SBInv[159] = 110;
	SBInv[160] = 71;
	SBInv[161] = 241;
	SBInv[162] = 26;
	SBInv[163] = 113;
	SBInv[164] = 29;
	SBInv[165] = 41;
	SBInv[166] = 197;
	SBInv[167] = 137;
	SBInv[168] = 111;
	SBInv[169] = 183;
	SBInv[170] = 98;
	SBInv[171] = 14;
	SBInv[172] = 170;
	SBInv[173] = 24;
	SBInv[174] = 190;
	SBInv[175] = 27;
	SBInv[176] = 252;
	SBInv[177] = 86;
	SBInv[178] = 62;
	SBInv[179] = 75;
	SBInv[180] = 198;
	SBInv[181] = 210;
	SBInv[182] = 121;
	SBInv[183] = 32;
	SBInv[184] = 154;
	SBInv[185] = 219;
	SBInv[186] = 192;
	SBInv[187] = 254;
	SBInv[188] = 120;
	SBInv[189] = 205;
	SBInv[190] = 90;
	SBInv[191] = 244;
	SBInv[192] = 31;
	SBInv[193] = 221;
	SBInv[194] = 168;
	SBInv[195] = 51;
	SBInv[196] = 136;
	SBInv[197] = 7;
	SBInv[198] = 199;
	SBInv[199] = 49;
	SBInv[200] = 177;
	SBInv[201] = 18;
	SBInv[202] = 16;
	SBInv[203] = 89;
	SBInv[204] = 39;
	SBInv[205] = 128;
	SBInv[206] = 236;
	SBInv[207] = 95;
	SBInv[208] = 96;
	SBInv[209] = 81;
	SBInv[210] = 127;
	SBInv[211] = 169;
	SBInv[212] = 25;
	SBInv[213] = 181;
	SBInv[214] = 74;
	SBInv[215] = 13;
	SBInv[216] = 45;
	SBInv[217] = 229;
	SBInv[218] = 122;
	SBInv[219] = 159;
	SBInv[220] = 147;
	SBInv[221] = 201;
	SBInv[222] = 156;
	SBInv[223] = 239;
	SBInv[224] = 160;
	SBInv[225] = 224;
	SBInv[226] = 59;
	SBInv[227] = 77;
	SBInv[228] = 174;
	SBInv[229] = 42;
	SBInv[230] = 245;
	SBInv[231] = 176;
	SBInv[232] = 200;
	SBInv[233] = 235;
	SBInv[234] = 187;
	SBInv[235] = 60;
	SBInv[236] = 131;
	SBInv[237] = 83;
	SBInv[238] = 153;
	SBInv[239] = 97;
	SBInv[240] = 23;
	SBInv[241] = 43;
	SBInv[242] = 4;
	SBInv[243] = 126;
	SBInv[244] = 186;
	SBInv[245] = 119;
	SBInv[246] = 214;
	SBInv[247] = 38;
	SBInv[248] = 225;
	SBInv[249] = 105;
	SBInv[250] = 20;
	SBInv[251] = 99;
	SBInv[252] = 85;
	SBInv[253] = 33;
	SBInv[254] = 12;
	SBInv[255] = 125;
	ShiftRowTab[0] = 0;
	ShiftRowTab[1] = 5;
	ShiftRowTab[2] = 10;
	ShiftRowTab[3] = 15;
	ShiftRowTab[4] = 4;
	ShiftRowTab[5] = 9;
	ShiftRowTab[6] = 14;
	ShiftRowTab[7] = 3;
	ShiftRowTab[8] = 8;
	ShiftRowTab[9] = 13;
	ShiftRowTab[10] = 2;
	ShiftRowTab[11] = 7;
	ShiftRowTab[12] = 12;
	ShiftRowTab[13] = 1;
	ShiftRowTab[14] = 6;
	ShiftRowTab[15] = 11;
      i = 0;
	while (i<storage_size){
		temp_storage[i][16] = 0;
		i+=1;
	}	
	i = 0;
	while (i<16){
		ShiftRowTabInv[ShiftRowTab[i]] = i;
		i+=1;
	}
      i = 0;
	while (i<128){
		xtime[i] = i << 1;
		xtime[128 + i] = (i << 1) ^ 0x0000001b;
		i+=1;
	}
	
	
}
//AES_ExpandKey: expand a cipher key. Depending on the desired encryption
//strength of 128 bits 'key' has to be a ascii string of length
//32, respectively. The key expansion is done "in place", meaning
//that the array 'key' is modified.
bool KRYPTCODE_AES_expandKey(string input){
	int i = 0;
	int k = 0;
	int kl = 16;
	int ks = 16*(10+1); //12
	int rcon = 1;
	int [4] temp;
	if ((StringLength(input) != 16) || (check_string(input) == false )){
		return false;
	}
	//create 128 bit key from input, expanded key will be 176 byte long
	while ( i < 16) {
		expanded_key[i] = char_to_byte(StringSub(input,i+1,i+1));
		i+=1;
	}
	i = kl;
	
	while (i <  ks ) {
		
		temp[0] = expanded_key[i-4];
		temp[1] = expanded_key[i-3];
		temp[2] = expanded_key[i-2];
		temp[3] = expanded_key[i-1];
		
		if (ModI(i , kl) == 0) {
			temp[0] = SB[temp[1]] ^ rcon;
			temp[1] = SB[temp[2]];
			temp[2] = SB[temp[3]];
			temp[3] = SB[temp[0]];
                  rcon <<= 1;
			if (rcon >= 256){
				rcon ^= 0x11b;
			}
		}
		else if ((kl > 24) && (i % kl == 16)){
			temp[0] = SB[temp[0]];
			temp[1] = SB[temp[1]];
			temp[2] = SB[temp[2]];
			temp[3] = SB[temp[3]];
		}
		k=0;
		while(k < 4){
			expanded_key[i + k] = expanded_key[i + k - kl] ^ temp[k];
			k+=1;
		}
		i+=4;
	}
	KRYPTCODE_AES_key_setted = true;
	return true;
}
//AES_Encrypt: encrypt the 16 byte array 'block' with the previously
//expanded global key 'expanded_key'.
string KRYPTCODE_AES_encrypt(string input){
      string result;
	int l = 176;
	int block = KRYPTCODE_AES_allocate();
	int rkey = KRYPTCODE_AES_allocate();
      int i;
	KRYPTCODE_AES_setOriData(block,input);
	KRYPTCODE_AES_setRkey(rkey,0);
	//write rkey and block
	KRYPTCODE_AES_addRoundKey(block, rkey);
	i = 16;
	while( i < l - 16) {
		KRYPTCODE_AES_subBytes(block,false);
		KRYPTCODE_AES_shiftRows(block,false);
		KRYPTCODE_AES_mixColumns(block);
		//change rkey
		KRYPTCODE_AES_setRkey(rkey,i);
		KRYPTCODE_AES_addRoundKey(block, rkey);
		i += 16;
	}
	KRYPTCODE_AES_subBytes(block,false);
	KRYPTCODE_AES_shiftRows(block,false);
	//change rkey
	KRYPTCODE_AES_setRkey(rkey,i);
	KRYPTCODE_AES_addRoundKey(block, rkey);
	result = KRYPTCODE_AES_getOriData(block);
      KRYPTCODE_AES_deallocate(rkey);
	KRYPTCODE_AES_deallocate(block);
	return result;
}
//AES_Decrypt: decrypt the 16 byte array 'block' with the previously
//expanded global key 'expanded_key'.
string KRYPTCODE_AES_decrypt(string input){
      string result;
	int l = 176;
	int block = KRYPTCODE_AES_allocate();
	int rkey = KRYPTCODE_AES_allocate();
	int i = l -32;
	KRYPTCODE_AES_setOriData(block,input);
	KRYPTCODE_AES_setRkey(rkey,l-16);
	KRYPTCODE_AES_addRoundKey(block, rkey );
	KRYPTCODE_AES_shiftRows(block, true);//1=inverse operation
	KRYPTCODE_AES_subBytes(block, true);//1=inverse operation
	while(i >= 16) {
		KRYPTCODE_AES_setRkey(rkey,i);
		KRYPTCODE_AES_addRoundKey(block, rkey);
		KRYPTCODE_AES_mixColumnsInv(block);
		KRYPTCODE_AES_shiftRows(block, true);//1=inverse operation
		KRYPTCODE_AES_subBytes(block, true);//1=inverse operation
		i -= 16;
	}
	KRYPTCODE_AES_setRkey(rkey,0);
	KRYPTCODE_AES_addRoundKey(block, rkey);
	KRYPTCODE_AES_deallocate(rkey);
	result = KRYPTCODE_AES_getOriData(block);
	KRYPTCODE_AES_deallocate(block);
	return result;
	
}
//end---------------------AES Core part--------------------------
//------------------------AES CTR part---------------------------
//http://en.wikipedia.org/wiki/Counter_mode#Counter_.28CTR.29
string KRYPTCODE_AES_CTR_encryptString(string in,string password){
	string input;
      string output;
	int i;
	int k;
      //init
	if (SB[0] != 99){
		KRYPTCODE_AES_init();
	}
	if (validateKey(password))
	{
		KRYPTCODE_AES_expandKey(password);
	} else if (KRYPTCODE_AES_key_setted == false) {
		return "err";
	}
      input = KRYPTCODE_AES_CTR_expandString(in);
      k =  StringLength(input);
      i = 0;
      while (i < k){
            output+= KRYPTCODE_AES_encrypt(StringSub(input,i+1,i+16));
            i+=16;
      }
	return output;
}
string KRYPTCODE_AES_CTR_decryptString(string in,string password){
    string output;
    int i = 0;
    int k;
	if (SB[0] != 99){
		KRYPTCODE_AES_init();
	}
	if (validateKey(password))
	{
		KRYPTCODE_AES_expandKey(password);
	} else if (KRYPTCODE_AES_key_setted == false) {
		return "err";
	} 	
      if (StringLength(in)%16 !=0){
		return "err";
	}
      k =  StringLength(in);
      while (i < k){
            output+= KRYPTCODE_AES_decrypt(StringSub(in,i+1,i+16));
            i+=16;
      }
	return KRYPTCODE_AES_CTR_shrinkString(output);
}

//--------------------------------------------------------------------------------------------------
// Custom Script: AESScriptSHA
//--------------------------------------------------------------------------------------------------
void InitializeHashInput(){
	HashInputSize = 0;
	if ( HexTable[0] == "" )
	{
		HexTable[0] = "0"; HexTable[1] = "1"; HexTable[2] = "2"; HexTable[3] = "3";
		HexTable[4] = "4"; HexTable[5] = "5"; HexTable[6] = "6"; HexTable[7] = "7";
		HexTable[8] = "8"; HexTable[9] = "9"; HexTable[10] = "a"; HexTable[11] = "b";
		HexTable[12] = "c"; HexTable[13] = "d"; HexTable[14] = "e"; HexTable[15] = "f";
	}
}
void AddStringToHashInput(string s){
      int i = 0;
	int l = StringLength(s);
	while ( i < l ){
		HashInputData[HashInputSize] = char_to_byte(StringSub(s,i+1,i+1));
		HashInputSize += 1;
		i+=1;
	}
}
string KRYPTCODE_AES_CTR_encryptStringSha256(string in,string password){
	string input;
      string output;
	string myHash;
	int i = 0;
	int k;
      //init
	if (SB[0] != 99){
		KRYPTCODE_AES_init();
	}
	if (validateKey(password))
	{
		KRYPTCODE_AES_expandKey(password);
	} else if (KRYPTCODE_AES_key_setted == false) {
		return "err";
	}
	  input = KRYPTCODE_AES_CTR_expandString(in);
	  //hash
	  InitializeHashInput();
	  AddStringToHashInput(input);
	  myHash = GenerateSha256HashCode();
	  
	  k =  StringLength(input);
	  while (i < k){
			output+= KRYPTCODE_AES_encrypt(StringSub(input,i+1,i+16));
			i+=16;
      }
	return ascii_to_base64(output+myHash);
}
string KRYPTCODE_AES_CTR_decryptStringSha256(string myinput,string password){
        string in;
        string input;
        string output="";
        int i = 0;
        int k;
	  string myHash;
	  string oldHash;
	  if (SB[0] != 99){
	  	KRYPTCODE_AES_init();
	  }
	  if (validateKey(password))
	  {
	  	KRYPTCODE_AES_expandKey(password);
	  } else if (KRYPTCODE_AES_key_setted == false) {
	  	return "";
	  } 	
	  in = base64_to_ascii(myinput);
        k =  StringLength(in);
	  input = StringSub(in,1,k-64);        
        if (StringLength(input)%16 !=0){
		return "err";
	  }
	  oldHash = StringSub(in,k-63,k);
        while (i < k-64){
            output+= KRYPTCODE_AES_decrypt(StringSub(input,i+1,i+16));
            i+=16;
        }
	  //hash
	  InitializeHashInput();
	  AddStringToHashInput(output);
	  myHash = GenerateSha256HashCode();
	  if (myHash == oldHash){
	  return KRYPTCODE_AES_CTR_shrinkString(output);
	  }else {
	  return "err";
	  }
	  
	
}

void lib2_InitCustomScript () {
}

// Functions
string lib2_gf_KryptCodeEncryptString (string lp_input, string lp_password) {
    // Implementation
    return KRYPTCODE_AES_CTR_encryptStringSha256(lp_input, lp_password);
}

string lib2_gf_KyptCodeDecryptString (string lp_input, string lp_password) {
    // Implementation
    return KRYPTCODE_AES_CTR_decryptStringSha256(lp_input, lp_password);
}

void lib2_gf_ASCIITest () {
    // Variable Declarations
    string lv_input;
    string lv_password;
    string lv_output;

    // Variable Initialization
    lv_input = "";
    lv_password = "";
    lv_output = "";

    // Implementation
    lv_input = "Ich bin-glueckli";
    lv_password = "ICH23EDe3d7890hg";
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/lib_2_E8403EB8"));
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringToText(lv_output));
    lv_output = KRYPTCODE_AES_CTR_expandString(lv_input);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringToText(lv_output));
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, IntToText(StringLength(lv_output)));
    lv_output = KRYPTCODE_AES_CTR_shrinkString(lv_output);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringToText(lv_output));
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, IntToText(StringLength(lv_output)));
}

void lib2_gf_AESTest () {
    // Variable Declarations
    string lv_input;
    string lv_password;
    string lv_output;
    int lv_a;
    int lv_b;

    // Variable Initialization
    lv_input = "";
    lv_password = "";
    lv_output = "";

    // Implementation
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/lib_2_DE501113"));
    lv_a = KRYPTCODE_AES_allocate();
    KRYPTCODE_AES_setOriData(lv_a,"1234567890123456");
    lv_output =KRYPTCODE_AES_getOriData(lv_a);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringToText(lv_output));
    KRYPTCODE_AES_init();
    KRYPTCODE_AES_expandKey("1234567890123456");
    lv_input = "Ich bin-gluecklich";
    lv_password = "ICH23EDe3d7890hg";
    lv_output = lib2_gf_KryptCodeEncryptString(lv_input, lv_password);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/lib_2_C7E453CF"));
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, (StringExternal("Param/Value/lib_2_CC38C5AF") + StringToText(lv_input)));
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, (StringExternal("Param/Value/lib_2_75F912BB") + StringToText(lv_output)));
    lv_output = lib2_gf_KyptCodeDecryptString(lv_output, lv_password);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, (StringExternal("Param/Value/lib_2_EFC4BA49") + StringToText(lv_output)));
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/lib_2_CEBA906B"));
}

void lib2_gf_AESTest2 () {
    // Variable Declarations
    string lv_input;
    string lv_password;
    string lv_output;
    int lv_a;
    int lv_b;

    // Variable Initialization
    lv_input = "";
    lv_password = "";
    lv_output = "";

    // Implementation
    lv_input = "Ich";
    lv_password = "ICH23EDe3d7890hg";
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringExternal("Param/Value/lib_2_C6FF229C"));
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringToText(lv_input));
    lv_output = ascii_to_base64(lv_input);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringToText(lv_output));
    lv_output = base64_to_ascii(lv_output);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringToText(lv_output));
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool lib2_InitLib_completed = false;

void lib2_InitLib () {
    if (lib2_InitLib_completed) {
        return;
    }

    lib2_InitCustomScript();

    lib2_InitLib_completed = true;
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
void InitLibs () {
    libNtve_InitLib();
    libGAx3_InitLib();
    lib1_InitLib();
    lib2_InitLib();
}

//--------------------------------------------------------------------------------------------------
// Global Variables
//--------------------------------------------------------------------------------------------------
playergroup gv_admin;
string[7] gv_handlestring;
int gv_godmodeDamage;
fixed[3] gv_warpCoordinates;
unitgroup gv_eastCity;
unitgroup gv_centralCity;
unitgroup gv_westCity;
unitgroup gv_saiyans;
unitgroup gv_ginyuForce;
unitgroup gv_frieza;
unitgroup gv_androids;
unitgroup gv_cell;
unitgroup gv_buu;
unitgroup gv_dragonBalls;
unitgroup gv_earthDragonBalls;
soundlink[5] gv_introMusicArray;
playergroup gv_Z_Warriors;
unitgroup gv_transformingAura;
unitgroup gv_testunitgroupforcheevos;
point[37] gv_Civillian_Point_Array_East_City;
point[42] gv_Civillian_Point_Array_Central_City;
point[23] gv_Civillian_Point_Array_West_City;
point[11] gv_supremeKaiPointArray;
int gv_muteMusicDialog;
int gv_playPauseMusic;
int[7] gv_hyperBolic;
unitgroup gv_hyperBolicUnits;
unitgroup[7] gv_crystals;
fixed[7] gv_oldRandomNumberVariable;
bool gv_preventMultipleRuns;
fixed gv_randomNumberVariable1;
fixed gv_randomNumberVariable2;
int gv_x;
string gv_y;
string[7] gv_veryEasyWins;
string[7] gv_easyWins;
string[7] gv_normalWins;
string[7] gv_hardWins;
string[7] gv_veryHardWins;
string[7] gv_zWins;
string[7] gv_z2Wins;
string[7] gv_z3Wins;
string[7] gv_godlyWins;
string[7] gv_impossibleWins;
string[7] gv_fantasyWins;
int[7] gv_veryEasyWinsInt;
int[7] gv_easyWinsInt;
int[7] gv_normalWinsInt;
int[7] gv_hardWinsInt;
int[7] gv_veryHardWinsInt;
int[7] gv_zWinsInt;
int[7] gv_z2WinsInt;
int[7] gv_z3WinsInt;
int[7] gv_godlyWinsInt;
int[7] gv_impossibleWinsInt;
int[7] gv_fantasyWinsInt;
int gv_menu;
bool[7] gv_flag1MenuFlag;
bool[7] gv_flag2MenuFlag;
bool[7] gv_flag3MenuFlag;
bool[7] gv_flag4MenuFlag;
bool[7] gv_flag5MenuFlag;
bool[7] gv_flag6MenuFlag;
int[11] gv_uICheckBoxes;
int gv_playersWins;
int[11] gv_helpTextTags;
int[6] gv_playerNames;
timer gv_voteTimer;
int gv_voteTimerWindow;
int gv_mapVoteDialog;
int[12] gv_mapVoteDialogItems;
int[12] gv_mapVotes;
int[8] gv_previousPlayerVote;
int gv_difficultyvariable;
int gv_displayDifficulty;
int gv_displayDifficultybutton;
int[12] gv_dialoglabelcounter;
int[6] gv_customResourceVariable;
int[7] gv_amount;
int gv_powerLevel;
int[7] gv_playerVesp;
int[7] gv_playerMin;
int[7] gv_playerCust;
unitgroup[8] gv_amountofNameks;
int gv_mutemusic;
int gv_unmuteMusic;
int gv_playMusic;
int gv_pauseMusic;
int[2] gv_volume;
int gv_volumeUp;
fixed gv_volumeVariable;
int gv_volumeDown;
timer gv_beggining;
timer gv_saiyanSaga;
timer gv_saiyanSaga2;
timer gv_ginyuSaga;
timer gv_friezaSagaform1;
timer gv_friezaSaga2form2;
timer gv_friezaSaga3form3;
timer gv_friezaSaga4form4;
timer gv_friezaSaga5100power;
timer gv_androidSaga1920gero;
timer gv_androidSaga2161718;
timer gv_cellSagaform1;
timer gv_cellSaga2form2;
timer gv_cellSaga3tournament;
timer gv_superPerfectCellFight;
timer gv_buuSagakillbuuegg;
timer gv_buuSaga2fightfatbuu;
timer gv_buuSaga3fightevilsuperbuu;
timer gv_buuSaga4fightsuperbuugotenkspiccoloabsorbed;
timer gv_buuSaga5fightbuugohanabsorbed;
timer gv_buuSaga6kidbuu;
timer gv_revivalTimerGoku;
timer gv_revivalTimerVegeta;
timer gv_revivalTimerPiccolo;
timer gv_revivalTimerTrunks;
timer gv_revivalTimerGoten;
timer gv_revivalTimerGohan;
int gv_abilitytomovewithtimers;
unitgroup gv_cellGames;
unit[2] gv_cellforRemoval;
unitgroup gv_finalCity;
unitgroup gv_supremeKai;
timer gv_killBuuEgg;
trigger[100] gv_civilianTriggerArray;

void InitGlobals () {
    int init_i;

    gv_admin = PlayerGroupEmpty();
    for (init_i = 0; init_i <= 6; init_i += 1) {
        gv_handlestring[init_i] = "p1";
    }
    gv_godmodeDamage = 1000;
    gv_eastCity = UnitGroupEmpty();
    gv_centralCity = UnitGroupEmpty();
    gv_westCity = UnitGroupEmpty();
    gv_saiyans = UnitGroupEmpty();
    gv_ginyuForce = UnitGroupEmpty();
    gv_frieza = UnitGroupEmpty();
    gv_androids = UnitGroupEmpty();
    gv_cell = UnitGroupEmpty();
    gv_buu = UnitGroupEmpty();
    gv_dragonBalls = UnitGroupEmpty();
    gv_earthDragonBalls = UnitGroupEmpty();
    for (init_i = 0; init_i <= 4; init_i += 1) {
        gv_introMusicArray[init_i] = SoundLink("EditorDefaultSound", -1);
    }
    gv_Z_Warriors = PlayerGroupEmpty();
    gv_transformingAura = UnitGroupEmpty();
    gv_testunitgroupforcheevos = UnitGroupEmpty();
    gv_muteMusicDialog = c_invalidDialogId;
    gv_playPauseMusic = c_invalidDialogId;
    gv_hyperBolicUnits = UnitGroupEmpty();
    for (init_i = 0; init_i <= 6; init_i += 1) {
        gv_crystals[init_i] = UnitGroupEmpty();
    }
    gv_y = "";
    for (init_i = 0; init_i <= 6; init_i += 1) {
        gv_veryEasyWins[init_i] = "";
    }
    for (init_i = 0; init_i <= 6; init_i += 1) {
        gv_easyWins[init_i] = "";
    }
    for (init_i = 0; init_i <= 6; init_i += 1) {
        gv_normalWins[init_i] = "";
    }
    for (init_i = 0; init_i <= 6; init_i += 1) {
        gv_hardWins[init_i] = "";
    }
    for (init_i = 0; init_i <= 6; init_i += 1) {
        gv_veryHardWins[init_i] = "";
    }
    for (init_i = 0; init_i <= 6; init_i += 1) {
        gv_zWins[init_i] = "";
    }
    for (init_i = 0; init_i <= 6; init_i += 1) {
        gv_z2Wins[init_i] = "";
    }
    for (init_i = 0; init_i <= 6; init_i += 1) {
        gv_z3Wins[init_i] = "";
    }
    for (init_i = 0; init_i <= 6; init_i += 1) {
        gv_godlyWins[init_i] = "";
    }
    for (init_i = 0; init_i <= 6; init_i += 1) {
        gv_impossibleWins[init_i] = "";
    }
    for (init_i = 0; init_i <= 6; init_i += 1) {
        gv_fantasyWins[init_i] = "";
    }
    gv_menu = c_invalidDialogId;
    for (init_i = 0; init_i <= 10; init_i += 1) {
        gv_uICheckBoxes[init_i] = c_invalidDialogControlId;
    }
    gv_playersWins = c_invalidDialogId;
    for (init_i = 0; init_i <= 10; init_i += 1) {
        gv_helpTextTags[init_i] = c_textTagNone;
    }
    for (init_i = 0; init_i <= 5; init_i += 1) {
        gv_playerNames[init_i] = c_textTagNone;
    }
    gv_voteTimer = TimerCreate();
    gv_voteTimerWindow = c_timerWindowNone;
    gv_mapVoteDialog = c_invalidDialogId;
    for (init_i = 0; init_i <= 11; init_i += 1) {
        gv_mapVoteDialogItems[init_i] = c_invalidDialogControlId;
    }
    gv_displayDifficulty = c_invalidDialogId;
    gv_displayDifficultybutton = c_invalidDialogControlId;
    for (init_i = 0; init_i <= 11; init_i += 1) {
        gv_dialoglabelcounter[init_i] = c_invalidDialogControlId;
    }
    gv_powerLevel = c_boardNone;
    for (init_i = 0; init_i <= 7; init_i += 1) {
        gv_amountofNameks[init_i] = UnitGroupEmpty();
    }
    gv_mutemusic = c_invalidDialogControlId;
    gv_unmuteMusic = c_invalidDialogControlId;
    gv_playMusic = c_invalidDialogControlId;
    gv_pauseMusic = c_invalidDialogControlId;
    for (init_i = 0; init_i <= 1; init_i += 1) {
        gv_volume[init_i] = c_invalidDialogId;
    }
    gv_volumeUp = c_invalidDialogControlId;
    gv_volumeVariable = 100.0;
    gv_volumeDown = c_invalidDialogControlId;
    gv_beggining = TimerCreate();
    gv_saiyanSaga = TimerCreate();
    gv_saiyanSaga2 = TimerCreate();
    gv_ginyuSaga = TimerCreate();
    gv_friezaSagaform1 = TimerCreate();
    gv_friezaSaga2form2 = TimerCreate();
    gv_friezaSaga3form3 = TimerCreate();
    gv_friezaSaga4form4 = TimerCreate();
    gv_friezaSaga5100power = TimerCreate();
    gv_androidSaga1920gero = TimerCreate();
    gv_androidSaga2161718 = TimerCreate();
    gv_cellSagaform1 = TimerCreate();
    gv_cellSaga2form2 = TimerCreate();
    gv_cellSaga3tournament = TimerCreate();
    gv_superPerfectCellFight = TimerCreate();
    gv_buuSagakillbuuegg = TimerCreate();
    gv_buuSaga2fightfatbuu = TimerCreate();
    gv_buuSaga3fightevilsuperbuu = TimerCreate();
    gv_buuSaga4fightsuperbuugotenkspiccoloabsorbed = TimerCreate();
    gv_buuSaga5fightbuugohanabsorbed = TimerCreate();
    gv_buuSaga6kidbuu = TimerCreate();
    gv_revivalTimerGoku = TimerCreate();
    gv_revivalTimerVegeta = TimerCreate();
    gv_revivalTimerPiccolo = TimerCreate();
    gv_revivalTimerTrunks = TimerCreate();
    gv_revivalTimerGoten = TimerCreate();
    gv_revivalTimerGohan = TimerCreate();
    gv_cellGames = UnitGroupEmpty();
    gv_finalCity = UnitGroupEmpty();
    gv_supremeKai = UnitGroupEmpty();
    gv_killBuuEgg = TimerCreate();
}

//--------------------------------------------------------------------------------------------------
// Trigger Variables
//--------------------------------------------------------------------------------------------------
trigger gt_MakemeAdmin;
trigger gt_GetHandle;
trigger gt_Warpanywhere;
trigger gt_Warpanyonetest;
trigger gt_BootPlayer1;
trigger gt_BootPlayer2;
trigger gt_BootPlayer3;
trigger gt_BootPlayer4;
trigger gt_BootPlayer5;
trigger gt_BootPlayer6;
trigger gt_Debughandlestringvalues;
trigger gt_GodModeOn;
trigger gt_SetGodModeDamage;
trigger gt_GodModeOff;
trigger gt_GiveVeryEasywinstoplayer;
trigger gt_GiveEasywinstoplayer;
trigger gt_GiveNormalwinstoplayer;
trigger gt_GiveHardwinstoplayer;
trigger gt_GiveVeryHardwinstoplayer;
trigger gt_GiveZwinstoplayer;
trigger gt_GiveZ2winstoplayer;
trigger gt_GiveZ3winstoplayer;
trigger gt_GiveGodlywinstoplayer;
trigger gt_GiveImpossiblewinstoplayer;
trigger gt_GiveFantasywinstoplayer;
trigger gt_modifyxup;
trigger gt_modifyxdown;
trigger gt_Checkxvalue;
trigger gt_PreloadtheBank2;
trigger gt_Seebankinfo;
trigger gt_Seebankinfo2;
trigger gt_Seebankinfo3;
trigger gt_Seebankinfo4;
trigger gt_Seebankinfo5;
trigger gt_Seebankinfo6;
trigger gt_Seebankinfo7;
trigger gt_Seebankinfo8;
trigger gt_Seebankinfo9;
trigger gt_Seebankinfo10;
trigger gt_Seebankinfo11;
trigger gt_BankLoadCrystals2;
trigger gt_LoadStartingPowerLevel;
trigger gt_RandomNumberGenerator;
trigger gt_BankSave2;
trigger gt_UIsetup;
trigger gt_PlayerWinsDialogCreation;
trigger gt_ShowhideMenu;
trigger gt_EnableDisableMediacontrols;
trigger gt_EnableDisableHelpTextTags;
trigger gt_EnableDisablePlayerTextTags;
trigger gt_EnableDisableLeaderboard;
trigger gt_EnableDisableShowDifficulty;
trigger gt_EnableDisablePlaymusiconstart;
trigger gt_Showwinswhendifficultyisclicked;
trigger gt_OpeningTextTags;
trigger gt_PlayerTextTags;
trigger gt_ClickonBasic;
trigger gt_ClickonIntermediate;
trigger gt_ClickonAdvanced;
trigger gt_ClickonFusion;
trigger gt_ClickonWeight;
trigger gt_ClickonEnterSaga;
trigger gt_ClickonHTC;
trigger gt_ClickonMystic;
trigger gt_InitiateVote;
trigger gt_ShowDifficulty;
trigger gt_Voting;
trigger gt_VoteTimerEnds;
trigger gt_VeryEasydifficultytrial;
trigger gt_ChangePlayer14healthforVeryEasy;
trigger gt_Easydifficultytrial;
trigger gt_ChangePlayer14healthforEasy;
trigger gt_ChangePlayer15speedforEasy;
trigger gt_Normaldifficultytrial;
trigger gt_ChangePlayer15speedforNormal;
trigger gt_Harddifficultytrial;
trigger gt_ChangePlayer15speedforHard;
trigger gt_VeryHarddifficultytrial;
trigger gt_ChangePlayer15speedforVeryHard;
trigger gt_Zdifficultytrial;
trigger gt_ChangePlayer15speedforZ;
trigger gt_Z2difficultytrial;
trigger gt_ChangePlayer15speedforZ2;
trigger gt_Z3difficultytrial;
trigger gt_ChangePlayer15speedforZ3;
trigger gt_Godly;
trigger gt_ChangePlayer14healthforGodly;
trigger gt_ChangePlayer15healthforGodly;
trigger gt_Impossible;
trigger gt_ChangePlayer14healthforImpossible;
trigger gt_ChangePlayer15healthforImpossible;
trigger gt_Fantasy;
trigger gt_ChangePlayer14healthforFantasy;
trigger gt_ChangePlayer15healthforFantasy;
trigger gt_Unitdies;
trigger gt_DeathTriggerGoku;
trigger gt_DeathTriggerGokuSSJ;
trigger gt_DeathTriggerGokuSSJ2;
trigger gt_DeathTriggerGokuSSJ3;
trigger gt_DeathTriggerGokuSSJ4;
trigger gt_DeathTriggerVegitoGoku;
trigger gt_DeathTriggerVegitoSSJGoku;
trigger gt_DeathTriggerVegeta;
trigger gt_DeathTriggerVegetaSSJ;
trigger gt_DeathTriggerVegetaSSJ2;
trigger gt_DeathTriggerMajinVegeta;
trigger gt_DeathTriggerVegetaSSJ4;
trigger gt_DeathTriggerVegitoVegeta;
trigger gt_DeathTriggerVegitoSSJVegeta;
trigger gt_DeathTriggerPiccolo;
trigger gt_DeathTriggerPiccoloFusedNail;
trigger gt_DeathTriggerPiccoloFusedKami;
trigger gt_DeathTriggerEvilKingPiccolo;
trigger gt_DeathTriggerTrunks;
trigger gt_DeathTriggerTrunksSSJ;
trigger gt_DeathTriggerGotenksTrunks;
trigger gt_DeathTriggerGotenksSSJTrunks;
trigger gt_DeathTriggerGotenksSSJ3Trunks;
trigger gt_DeathTriggerGoten;
trigger gt_DeathTriggerGotenSSJ;
trigger gt_DeathTriggerGotenksGoten;
trigger gt_DeathTriggerGotenksSSJGoten;
trigger gt_DeathTriggerGotenksSSJ3Goten;
trigger gt_DeathTriggerGohan;
trigger gt_DeathTriggerGohanSSJ;
trigger gt_DeathTriggerGohanSSJ2;
trigger gt_DeathTriggerGohanMystic;
trigger gt_Addenergy1;
trigger gt_Addenergy2;
trigger gt_Addenergy3;
trigger gt_Addenergy4;
trigger gt_Addenergy5;
trigger gt_Addenergy6;
trigger gt_Addenergy7;
trigger gt_Addenergy8;
trigger gt_Addenergy9;
trigger gt_EnergyCap;
trigger gt_Minerals;
trigger gt_LevelUpAnnouncementPlayer1;
trigger gt_LevelUpAnnouncementPlayer2;
trigger gt_LevelUpAnnouncementPlayer3;
trigger gt_LevelUpAnnouncementPlayer4;
trigger gt_LevelUpAnnouncementPlayer5;
trigger gt_LevelUpAnnouncementPlayer6;
trigger gt_RevertTriggerGokuSSJ;
trigger gt_RevertTriggerGokuSSJ2;
trigger gt_RevertTriggerGokuSSJ3;
trigger gt_RevertTriggerGokuSSJ4;
trigger gt_RevertTriggerVegitoGoku;
trigger gt_RevertTriggerSuperVegitoGoku;
trigger gt_RevertTriggerVegetaSSJ;
trigger gt_RevertTriggerVegetaSSJ2;
trigger gt_RevertTriggerMajinVegeta;
trigger gt_RevertTriggerVegetaSSJ4;
trigger gt_RevertTriggerVegitoVegeta;
trigger gt_RevertTriggerSuperVegitoVegeta;
trigger gt_RevertTriggerPiccoloFusedNail;
trigger gt_RevertTriggerPiccoloFusedKami;
trigger gt_RevertTriggerEvilKingPiccolo;
trigger gt_RevertTriggerTrunksSSJ;
trigger gt_RevertTriggerGotenksTrunks;
trigger gt_RevertTriggerGotenksSSJTrunks;
trigger gt_RevertTriggerGotenksSSJ3Trunks;
trigger gt_RevertTriggerGotenSSJ;
trigger gt_RevertTriggerGotenksGoten;
trigger gt_RevertTriggerGotenksSSJGoten;
trigger gt_RevertTriggerGotenksSSJ3Goten;
trigger gt_RevertTriggerGohanSSJ;
trigger gt_RevertTriggerGohanSSJ2;
trigger gt_RevertTriggerMysticGohan;
trigger gt_HealGokuTraining;
trigger gt_HealGokuSSJTraining;
trigger gt_HealGokuSSJ2Training;
trigger gt_HealGokuSSJ3Training;
trigger gt_HealGokuSSJ4Training;
trigger gt_HealVegitoGokuTraining;
trigger gt_HealSuperVegitoGokuTraining;
trigger gt_HealVegetaTraining;
trigger gt_HealVegetaSSJTraining;
trigger gt_HealVegetaSSJ2Training;
trigger gt_HealMajinVegetaTraining;
trigger gt_HealVegetaSSJ4Training;
trigger gt_HealVegitoVegetaTraining;
trigger gt_HealSuperVegitoVegetaTraining;
trigger gt_HealPiccoloTraining;
trigger gt_HealPiccoloFusedNailTraining;
trigger gt_HealPiccoloFusedKamiTraining;
trigger gt_HealEvilKingPiccoloTraining;
trigger gt_HealTrunksTraining;
trigger gt_HealTrunksSSJTraining;
trigger gt_HealGotenksTrunksTraining;
trigger gt_HealGotenksSSJTrunksTraining;
trigger gt_HealGotenksSSJ3TrunksTraining;
trigger gt_HealGotenTraining;
trigger gt_HealGotenSSJTraining;
trigger gt_HealGotenksGotenTraining;
trigger gt_HealGotenksSSJGotenTraining;
trigger gt_HealGotenksSSJ3GotenTraining;
trigger gt_HealGohanTraining;
trigger gt_HealGohanSSJTraining;
trigger gt_HealGohanSSJ2Training;
trigger gt_HealMysticGohanTraining;
trigger gt_Healwhendie;
trigger gt_DendeHeal;
trigger gt_DendeHeal2;
trigger gt_DendeHeal3;
trigger gt_DendeHeal4;
trigger gt_DendeHeal5;
trigger gt_DendeHeal6;
trigger gt_MakeDendeImmovable;
trigger gt_UnlockPotentialforGohan;
trigger gt_PlayerKills;
trigger gt_Leaderboardtrial1;
trigger gt_Characterattribute;
trigger gt_changecolorofplayers;
trigger gt_StopVespenefromsplitting;
trigger gt_StopMineralsfromsplitting;
trigger gt_StopCustomResourcefromsplitting;
trigger gt_Preventpushingunits;
trigger gt_Stoptheresourcesfrombeingspent;
trigger gt_Takeawayresourcesofplayerswholeftinload;
trigger gt_Removetradingresources;
trigger gt_RevealMap;
trigger gt_SetForces;
trigger gt_Addcomputertoalliedforce;
trigger gt_SpawnNamek;
trigger gt_SpawnNamek2;
trigger gt_SpawnNamek3;
trigger gt_SpawnNamek4;
trigger gt_SpawnNamek5;
trigger gt_SpawnNamek6;
trigger gt_SpawnNamek7;
trigger gt_Protecttransformationsfromplayerunits;
trigger gt_Setoriginalgokuvalue;
trigger gt_Reverttonormalgoku;
trigger gt_Transformssjgoku;
trigger gt_SubtractGasGokuSSJ;
trigger gt_Transformssj2goku;
trigger gt_SubtractGasGokuSSJ2;
trigger gt_Transformssj3goku;
trigger gt_SubtractGasGokuSSJ3;
trigger gt_Transformssj4goku;
trigger gt_SubtractGasGokuSSJ4;
trigger gt_TransformVegitogoku;
trigger gt_SubtractGasVegitoGoku;
trigger gt_TransformssjVegitogoku;
trigger gt_SubtractGasSuperVegitoGoku;
trigger gt_Setoriginalvegetavalue;
trigger gt_Reverttonormalvegeta;
trigger gt_Transformssjvegeta;
trigger gt_SubtractGasVegetaSSJ;
trigger gt_Transformssj2vegeta;
trigger gt_SubtractGasVegetaSSJ2;
trigger gt_Transformmajinvegeta;
trigger gt_SubtractGasMajinVegeta;
trigger gt_Transformssj4vegeta;
trigger gt_SubtractGasVegetaSSJ4;
trigger gt_TransformVegitovegeta;
trigger gt_SubtractGasVegitoVegeta;
trigger gt_TransformssjVegitovegeta;
trigger gt_SubtractGasSuperVegitoVegeta;
trigger gt_Setoriginalpiccolovalue;
trigger gt_Reverttonormalpiccolo;
trigger gt_TransformFusewithNailpiccolo;
trigger gt_SubtractGasPiccoloFusedNail;
trigger gt_TransformFusewithKamilpiccolo;
trigger gt_SubtractGasPiccolo2FusedKami;
trigger gt_TransformEvilKingpiccolo;
trigger gt_SubtractGasEvilKingPiccolo;
trigger gt_Setoriginaltrunksvalue;
trigger gt_Reverttonormaltrunks;
trigger gt_Transformssjtrunks;
trigger gt_SubtractGasTrunksSSJ;
trigger gt_Transformgotenkstrunks;
trigger gt_SubtractGasGotenksTrunks;
trigger gt_Transformssjgotenkstrunks;
trigger gt_SubtractGasGotenksSSJTrunks;
trigger gt_Transformssj3gotenkstrunks;
trigger gt_SubtractGasGotenksSSJ3Trunks;
trigger gt_Setoriginalgotenvalue;
trigger gt_Reverttonormalgoten;
trigger gt_Transformssjgoten;
trigger gt_SubtractGasGotenSSJ;
trigger gt_Transformgotenksgoten;
trigger gt_SubtractGasGotenksGoten;
trigger gt_Transformssjgotenksgoten;
trigger gt_SubtractGasGotenksSSJGoten;
trigger gt_Transformssj3gotenksgoten;
trigger gt_SubtractGasGotenksSSJ3Goten;
trigger gt_Setoriginalgohanvalue;
trigger gt_Reverttonormalgohan;
trigger gt_Transformssjgohan;
trigger gt_SubtractGasGohanSSJ;
trigger gt_Transformssj2gohan;
trigger gt_SubtractGasGohanSSJ2;
trigger gt_Transformmysticgohan;
trigger gt_SubtractGasMysticGohan;
trigger gt_Fixstuckunits;
trigger gt_Fixmultipleunits;
trigger gt_Intromusic;
trigger gt_Mutebuttonformusic;
trigger gt_VolumeDown;
trigger gt_VolumeUp;
trigger gt_CreatePlayPausebuttonformusic;
trigger gt_MuteMusic;
trigger gt_Volumeupclicked;
trigger gt_Volumedownclicked;
trigger gt_UnmuteMusic;
trigger gt_Playmusic;
trigger gt_PauseMusic;
trigger gt_SpawnEnemyGoku;
trigger gt_SpawnEnemyVegeta;
trigger gt_SpawnEnemyGohan;
trigger gt_SpawnEnemyTrunks;
trigger gt_SpawnEnemyGoten;
trigger gt_SpawnEnemyPiccolo;
trigger gt_SpawnEnemyNamekianWarrior;
trigger gt_SpawnEnemyGokuSSJ;
trigger gt_SpawnEnemyVegetaSSJ;
trigger gt_SpawnEnemyGohanSSJ;
trigger gt_SpawnEnemyTrunksSSJ;
trigger gt_SpawnEnemyGotenSSJ;
trigger gt_SpawnEnemyPiccoloFusedNail;
trigger gt_SpawnEnemyGokuSSJ2;
trigger gt_SpawnEnemyVegetaSSJ2;
trigger gt_SpawnEnemyGohanSSJ2;
trigger gt_SpawnEnemyGotenks;
trigger gt_SpawnEnemyGokuSSJ3;
trigger gt_SpawnEnemyMajinVegeta;
trigger gt_SpawnEnemyVegito;
trigger gt_SpawnEnemyPiccoloFusedKami;
trigger gt_SpawnEnemyGotenksSSJ;
trigger gt_SpawnEnemyEvilKingPiccolo;
trigger gt_SpawnEnemyMysticGohan;
trigger gt_SpawnEnemyGotenksSSJ3;
trigger gt_SpawnEnemySuperVegito;
trigger gt_SpawnEnemyGokuSSJ4;
trigger gt_SpawnEnemyVegetaSSJ4;
trigger gt_MovetoBasicTraining;
trigger gt_MovehomefromBasicTraining;
trigger gt_MovetoIntermediateTraining;
trigger gt_MovehomefromIntermediateTraining;
trigger gt_MovetoExpertTraining;
trigger gt_MovehomefromExpertTraining;
trigger gt_MovetoHyperBolicTimeChamber;
trigger gt_MovetoHyperBolicTimeChamberVegeta;
trigger gt_MovehomefromHyperBolicTimeChamber;
trigger gt_MakeunitsinHyperbolicInvulnerablePlayer15;
trigger gt_MakeunitsinHyperbolicInvulnerablePlayer14;
trigger gt_GetExpinHyperBolicTimeChamber;
trigger gt_GetBonusExpinHyperBolicTimeChamber;
trigger gt_MovetoWeightedTraining;
trigger gt_MovehomefromWeightedTraining;
trigger gt__1TonTraining;
trigger gt__3TonTraining;
trigger gt__5TonTraining;
trigger gt__10TonTraining;
trigger gt_TraveltoMystictraining;
trigger gt_HomefromMystic;
trigger gt_SpawnUnitsinMysticTraining;
trigger gt_MakeithardertokillOldKai;
trigger gt_GetExpinMysticTraining;
trigger gt_MovetoFusionTraining;
trigger gt_MovehomefromFusionTraining;
trigger gt_FusionTrainingMethodTrunksBeacon1;
trigger gt_FusionTrainingMethodTrunksBeacon2;
trigger gt_FusionTrainingMethodGotenBeacon1;
trigger gt_FusionTrainingMethodGotenBeacon2;
trigger gt_AttackDragonBall2;
trigger gt_AttackDragonBall3;
trigger gt_AttackDragonBall4;
trigger gt_AttackDragonBall5;
trigger gt_AttackDragonBall6;
trigger gt_AttackDragonBall7;
trigger gt_AttackEarthDragonBall;
trigger gt_AttackEarthDragonBall2;
trigger gt_AttackEarthDragonBall3;
trigger gt_AttackEarthDragonBall4;
trigger gt_AttackEarthDragonBall5;
trigger gt_AttackEarthDragonBall6;
trigger gt_AttackEarthDragonBall7;
trigger gt_ReturnFromSaiyanSaga;
trigger gt_ReturnFromSaiyanSaga2;
trigger gt_ReturnFromGinyuFriezaSagas;
trigger gt_ReturnFromAndroid19and20;
trigger gt_ReturnFromAndroid17and18;
trigger gt_ReturnFromCellForm1and2;
trigger gt_ReturnFromCellGames;
trigger gt_ReturnfromBabidiShip2;
trigger gt_ReturnFromBuuSaga;
trigger gt_ReturnFromBuuSaga2;
trigger gt_MoveinsideBabidiShip;
trigger gt_MoveinsideBabidiShip2;
trigger gt_MoveinsideBabidiShip3;
trigger gt_MoveinsideBabidiShip4;
trigger gt_TipforForms;
trigger gt_TipforEnergy;
trigger gt_TipforPowerLevel;
trigger gt_TipforDebugFunctions;
trigger gt_TipforPowerCrystals;
trigger gt_TipforMysticHyperbolicFusionWeightedTraining;
trigger gt_Waittimeruntilgamestarts;
trigger gt_SaiyanSagaCountdownTimer;
trigger gt_SaiyanSagaBegin;
trigger gt_SetSaiyanForceGroup;
trigger gt_AllowTraveltoSaiyanSaga;
trigger gt_SaiyanSagaCountdownTimer2;
trigger gt_SaiyanSagaBegin2;
trigger gt_SetSaiyanForceGroup2;
trigger gt_Over9000;
trigger gt_AllowTraveltoSaiyanSaga2;
trigger gt_NappaDies;
trigger gt_GinyuSagaCountdownTimer;
trigger gt_GinyuSagaBegin;
trigger gt_SetGinyuForceGroup;
trigger gt_AllowTraveltoGinyuSaga;
trigger gt_Preventskipdballstalling;
trigger gt_Fixalldballstalling;
trigger gt_FriezaForm1CountdownTimer;
trigger gt_FriezaForm1Begin;
trigger gt_SetFriezaGroup;
trigger gt_AllowTraveltoFriezaSaga;
trigger gt_FriezaForm2CountdownTimer;
trigger gt_FriezaForm2Begin;
trigger gt_SetFriezaForm2Group;
trigger gt_AllowTraveltoFriezaSaga2;
trigger gt_FriezaForm3CountdownTimer;
trigger gt_FriezaForm3Begin;
trigger gt_SetFriezaForm3Group;
trigger gt_AllowTraveltoFriezaSaga3;
trigger gt_FriezaForm4CountdownTimer;
trigger gt_FriezaForm4Begin;
trigger gt_SetFriezaForm4Group;
trigger gt_AllowTraveltoFriezaSaga4;
trigger gt_FriezaFinalFormCountdownTimer;
trigger gt_FriezaFinalFormBegin;
trigger gt_SetFriezaFinalFormGroup;
trigger gt_AllowTraveltoFriezaSaga5;
trigger gt_Androids19and20CountdownTimer;
trigger gt_AndroidsagaBegin2;
trigger gt_SetAndroidGroup;
trigger gt_AllowTraveltoAndroidsaga;
trigger gt_Androids17and18CountdownTimer;
trigger gt_AndroidsagaBegin3;
trigger gt_SetAndroidGroup2;
trigger gt_AllowTraveltoAndroidsaga2;
trigger gt_CellSagacountdownTimer;
trigger gt_CellsagaBegin;
trigger gt_SetCellGroup;
trigger gt_AllowTraveltocellsaga;
trigger gt_CellSagaform2countdownTimer;
trigger gt_CellsagaBegin2;
trigger gt_SetCellGroup2;
trigger gt_AllowTraveltocellsagaform2;
trigger gt_CellGamesCountdownTimer;
trigger gt_CellGamesBegin;
trigger gt_SetPerfectCellGroup;
trigger gt_WarptoCellGames;
trigger gt_Givecontrolback;
trigger gt_Removeplayerswholeft;
trigger gt_StoptransformingbeforeCellGames;
trigger gt_CellAI;
trigger gt_RemoveUnitsfromCellgamesGroupifnotcontrolled;
trigger gt_AddunitstoCellGamesiftheytransform;
trigger gt_Unitdiesduringcellgamesremovethemfromgroup;
trigger gt_SuperPerfectCellCountdownTimer;
trigger gt_SuperPerfectCellBegin;
trigger gt_SetSuperPerfectCellGroup;
trigger gt_BuuSagaCountdownTimer;
trigger gt_BuuSagaBegin;
trigger gt_SetBuuGroup;
trigger gt_AllowTraveltoBuuSaga;
trigger gt_KillEastCityUnits;
trigger gt_KillCentralCityUnits;
trigger gt_KillWestCityUnits;
trigger gt_BuuSagaCountdownTimer2;
trigger gt_BuuSagaBegin2;
trigger gt_SetBuuGroup2;
trigger gt_AllowTraveltoBuuSaga2;
trigger gt_BuuAI;
trigger gt_BuuSagaCountdownTimer3;
trigger gt_BuuSagaBegin3;
trigger gt_SetBuuGroup3;
trigger gt_AllowTraveltoBuuSaga3;
trigger gt_BuuSagaCountdownTimer4;
trigger gt_BuuSagaBegin4;
trigger gt_SetBuuGroup4;
trigger gt_AllowTraveltoBuuSaga4;
trigger gt_CatchBuuifhegoesforChooser;
trigger gt_BuuAI2;
trigger gt_BuuSagaCountdownTimer5;
trigger gt_BuuSagaBegin5;
trigger gt_SetBuuGroup5;
trigger gt_AllowTraveltoBuuSaga5;
trigger gt_BuuSagaCountdownTimer6;
trigger gt_BuuSagaBegin6;
trigger gt_SetBuuGroup6;
trigger gt_AllowTraveltoBuuSaga6;
trigger gt_MakeXelNagavulnerable;
trigger gt_LosetoRaditz;
trigger gt_SetEarthDragonBallsGroup;
trigger gt_EndGamefromEarthDragonBalls;
trigger gt_SetDragonBallsGroup;
trigger gt__1StarBallisTaken;
trigger gt__2StarBallisTaken;
trigger gt__3StarBallisTaken;
trigger gt__4StarBallisTaken;
trigger gt__5StarBallisTaken;
trigger gt__6StarBallisTaken;
trigger gt_EndGamefromDragonBalls;
trigger gt_SetDragonballPercentdamagetaken;
trigger gt_Initiateeastcitygroup;
trigger gt_Endgameforandroids19and20;
trigger gt_InitiateCentralcitygroup;
trigger gt_Endgameforandroids17and18;
trigger gt_Initiatewestcitygroup;
trigger gt_EndgameforCell;
trigger gt_Losingconditiontoperfectcell;
trigger gt_Losingconditiontosuperperfectcell;
trigger gt_Initiatefinalcitygroup;
trigger gt_EndgameforBuuFinalcity;
trigger gt_FatBuuandSuperBuukillSKai;
trigger gt_Losingconditionifeggisntkilledintime;
trigger gt_InitializeSupremeKaipointarray;
trigger gt_MoveidleSupremeKai;
trigger gt_SupremeKaiAI;
trigger gt_SupremeKaiAI2;
trigger gt_SupremeKaiAI3;
trigger gt_SupremeKaiAI4;
trigger gt_SupremeKaiAI5;
trigger gt_SupremeKaiAI6;
trigger gt_SupremeKaiAI7;
trigger gt_SupremeKaiAI8;
trigger gt_SupremeKaiAI9;
trigger gt_SupremeKaiAI10;
trigger gt_SupremeKaiAI11;
trigger gt_InitializeAllCivilianAITriggerArray;
trigger gt_InitializeCivillian_Point_Array_East_City;
trigger gt_MoveidleCivsEastCity;
trigger gt_CivillianAI;
trigger gt_CivillianAI2;
trigger gt_CivillianAI3;
trigger gt_CivillianAI4;
trigger gt_CivillianAI5;
trigger gt_CivillianAI6;
trigger gt_CivillianAI7;
trigger gt_CivillianAI8;
trigger gt_CivillianAI9;
trigger gt_CivillianAI10;
trigger gt_CivillianAI11;
trigger gt_CivillianAI12;
trigger gt_CivillianAI13;
trigger gt_CivillianAI14;
trigger gt_CivillianAI15;
trigger gt_CivillianAI16;
trigger gt_CivillianAI17;
trigger gt_CivillianAI18;
trigger gt_CivillianAI19;
trigger gt_CivillianAI20;
trigger gt_CivillianAI21;
trigger gt_CivillianAI22;
trigger gt_CivillianAI23;
trigger gt_CivillianAI24;
trigger gt_CivillianAI25;
trigger gt_CivillianAI26;
trigger gt_CivillianAI27;
trigger gt_CivillianAI28;
trigger gt_CivillianAI29;
trigger gt_CivillianAI30;
trigger gt_CivillianAI31;
trigger gt_CivillianAI32;
trigger gt_CivillianAI33;
trigger gt_CivillianAI34;
trigger gt_CivillianAI35;
trigger gt_CivillianAI36;
trigger gt_KillEastCityTriggers;
trigger gt_InitializeCivillian_Point_Array_Central_City;
trigger gt_MoveidleCivsCentralCity;
trigger gt_CivillianAI37;
trigger gt_CivillianAI38;
trigger gt_CivillianAI39;
trigger gt_CivillianAI40;
trigger gt_CivillianAI41;
trigger gt_CivillianAI42;
trigger gt_CivillianAI43;
trigger gt_CivillianAI44;
trigger gt_CivillianAI45;
trigger gt_CivillianAI46;
trigger gt_CivillianAI47;
trigger gt_CivillianAI48;
trigger gt_CivillianAI49;
trigger gt_CivillianAI50;
trigger gt_CivillianAI51;
trigger gt_CivillianAI52;
trigger gt_CivillianAI53;
trigger gt_CivillianAI54;
trigger gt_CivillianAI55;
trigger gt_CivillianAI56;
trigger gt_CivillianAI57;
trigger gt_CivillianAI58;
trigger gt_CivillianAI59;
trigger gt_CivillianAI60;
trigger gt_CivillianAI61;
trigger gt_CivillianAI62;
trigger gt_CivillianAI63;
trigger gt_CivillianAI64;
trigger gt_CivillianAI65;
trigger gt_CivillianAI66;
trigger gt_CivillianAI67;
trigger gt_CivillianAI68;
trigger gt_CivillianAI69;
trigger gt_CivillianAI70;
trigger gt_CivillianAI71;
trigger gt_CivillianAI72;
trigger gt_CivillianAI73;
trigger gt_CivillianAI74;
trigger gt_CivillianAI75;
trigger gt_CivillianAI76;
trigger gt_CivillianAI77;
trigger gt_KillCentralCityTriggers;
trigger gt_InitializeCivillian_Point_Array_West_City;
trigger gt_MoveidleCivsWestCity;
trigger gt_CivillianAI78;
trigger gt_CivillianAI79;
trigger gt_CivillianAI80;
trigger gt_CivillianAI81;
trigger gt_CivillianAI82;
trigger gt_CivillianAI83;
trigger gt_CivillianAI84;
trigger gt_CivillianAI85;
trigger gt_CivillianAI86;
trigger gt_CivillianAI87;
trigger gt_CivillianAI88;
trigger gt_CivillianAI89;
trigger gt_CivillianAI90;
trigger gt_CivillianAI91;
trigger gt_CivillianAI92;
trigger gt_CivillianAI93;
trigger gt_CivillianAI94;
trigger gt_CivillianAI95;
trigger gt_CivillianAI96;
trigger gt_CivillianAI97;
trigger gt_CivillianAI98;
trigger gt_CivillianAI99;
trigger gt_KillWestCityTriggers;
trigger gt_CurrentWinCondition;
trigger gt_Removeunitwhenplayerleaves;
trigger gt_MovewarpedLeaverUnit;
trigger gt_MeleeInitialization;
trigger gt_CreateAchievementVeryEasy;
trigger gt_CreateAchievementEasy;
trigger gt_CreateAchievementNormal;
trigger gt_CreateAchievementHard;
trigger gt_CreateAchievementVeryHard;
trigger gt_CreateAchievementZ;
trigger gt_CreateAchievementZ2;
trigger gt_CreateAchievementZ3;

//--------------------------------------------------------------------------------------------------
// Trigger: Make me Admin
//--------------------------------------------------------------------------------------------------
bool gt_MakemeAdmin_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    PlayerGroupLoopBegin(PlayerGroupActive());
    for ( ; !PlayerGroupLoopDone() ; PlayerGroupLoopStep() ) {
        if ((PlayerHandle(PlayerGroupLoopCurrent()) == "1-S2-1-2744595")) {
            PlayerGroupAdd(gv_admin, PlayerGroupLoopCurrent());
        }
        else {
        }
    }
    PlayerGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MakemeAdmin_Init () {
    gt_MakemeAdmin = TriggerCreate("gt_MakemeAdmin_Func");
    TriggerAddEventMapInit(gt_MakemeAdmin);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Get Handle
//--------------------------------------------------------------------------------------------------
bool gt_GetHandle_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == PlayerGroupPlayer(gv_admin, 1)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        gv_handlestring[IntLoopCurrent()] = PlayerHandle(IntLoopCurrent());
        Wait(0.1, c_timeGame);
    }
    IntLoopEnd();
    PlayerGroupLoopBegin(PlayerGroupActive());
    for ( ; !PlayerGroupLoopDone() ; PlayerGroupLoopStep() ) {
        UIDisplayMessage(gv_admin, c_messageAreaChat, PlayerName(PlayerGroupLoopCurrent()));
        UIDisplayMessage(gv_admin, c_messageAreaChat, StringToText(PlayerHandle(PlayerGroupLoopCurrent())));
        Wait(1.0, c_timeGame);
    }
    PlayerGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_GetHandle_Init () {
    gt_GetHandle = TriggerCreate("gt_GetHandle_Func");
    TriggerAddEventChatMessage(gt_GetHandle, c_playerAny, "-handles", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Warp anywhere
//--------------------------------------------------------------------------------------------------
bool gt_Warpanywhere_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == PlayerGroupPlayer(gv_admin, 1)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_warpCoordinates[0] = EventMouseClickedPosXWorld();
    gv_warpCoordinates[1] = EventMouseClickedPosYWorld();
    gv_warpCoordinates[2] = EventMouseClickedPosZWorld();
    if ((UnitGetOwner(RegionGetAttachUnit(RegionFromId(84))) == EventPlayer())) {
        UnitSetPosition(RegionGetAttachUnit(RegionFromId(84)), libNtve_gf_PointFromXYZ(gv_warpCoordinates[0], gv_warpCoordinates[1], gv_warpCoordinates[2]), false);
        UnitIssueOrder(RegionGetAttachUnit(RegionFromId(84)), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    }
    else {
    }
    if ((UnitGetOwner(RegionGetAttachUnit(RegionFromId(85))) == EventPlayer())) {
        UnitSetPosition(RegionGetAttachUnit(RegionFromId(85)), libNtve_gf_PointFromXYZ(gv_warpCoordinates[0], gv_warpCoordinates[1], gv_warpCoordinates[2]), false);
        UnitIssueOrder(RegionGetAttachUnit(RegionFromId(85)), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    }
    else {
    }
    if ((UnitGetOwner(RegionGetAttachUnit(RegionFromId(86))) == EventPlayer())) {
        UnitSetPosition(RegionGetAttachUnit(RegionFromId(86)), libNtve_gf_PointFromXYZ(gv_warpCoordinates[0], gv_warpCoordinates[1], gv_warpCoordinates[2]), false);
        UnitIssueOrder(RegionGetAttachUnit(RegionFromId(86)), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    }
    else {
    }
    if ((UnitGetOwner(RegionGetAttachUnit(RegionFromId(87))) == EventPlayer())) {
        UnitSetPosition(RegionGetAttachUnit(RegionFromId(87)), libNtve_gf_PointFromXYZ(gv_warpCoordinates[0], gv_warpCoordinates[1], gv_warpCoordinates[2]), false);
        UnitIssueOrder(RegionGetAttachUnit(RegionFromId(87)), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    }
    else {
    }
    if ((UnitGetOwner(RegionGetAttachUnit(RegionFromId(88))) == EventPlayer())) {
        UnitSetPosition(RegionGetAttachUnit(RegionFromId(88)), libNtve_gf_PointFromXYZ(gv_warpCoordinates[0], gv_warpCoordinates[1], gv_warpCoordinates[2]), false);
        UnitIssueOrder(RegionGetAttachUnit(RegionFromId(88)), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    }
    else {
    }
    if ((UnitGetOwner(RegionGetAttachUnit(RegionFromId(89))) == EventPlayer())) {
        UnitSetPosition(RegionGetAttachUnit(RegionFromId(89)), libNtve_gf_PointFromXYZ(gv_warpCoordinates[0], gv_warpCoordinates[1], gv_warpCoordinates[2]), false);
        UnitIssueOrder(RegionGetAttachUnit(RegionFromId(89)), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Warpanywhere_Init () {
    gt_Warpanywhere = TriggerCreate("gt_Warpanywhere_Func");
    TriggerAddEventMouseClicked(gt_Warpanywhere, PlayerGroupPlayer(gv_admin, 1), c_mouseButtonXButton2, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Warp anyone test
//--------------------------------------------------------------------------------------------------
bool gt_Warpanyonetest_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == PlayerGroupPlayer(gv_admin, 1)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_warpCoordinates[0] = EventMouseClickedPosXWorld();
    gv_warpCoordinates[1] = EventMouseClickedPosYWorld();
    gv_warpCoordinates[2] = EventMouseClickedPosZWorld();
    if ((UnitIsSelected(RegionGetAttachUnit(RegionFromId(84)), EventPlayer()) == true)) {
        UnitSetPosition(RegionGetAttachUnit(RegionFromId(84)), libNtve_gf_PointFromXYZ(gv_warpCoordinates[0], gv_warpCoordinates[1], gv_warpCoordinates[2]), false);
        UnitIssueOrder(RegionGetAttachUnit(RegionFromId(84)), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    }
    else {
    }
    if ((UnitIsSelected(RegionGetAttachUnit(RegionFromId(85)), EventPlayer()) == true)) {
        UnitSetPosition(RegionGetAttachUnit(RegionFromId(85)), libNtve_gf_PointFromXYZ(gv_warpCoordinates[0], gv_warpCoordinates[1], gv_warpCoordinates[2]), false);
        UnitIssueOrder(RegionGetAttachUnit(RegionFromId(85)), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    }
    else {
    }
    if ((UnitIsSelected(RegionGetAttachUnit(RegionFromId(86)), EventPlayer()) == true)) {
        UnitSetPosition(RegionGetAttachUnit(RegionFromId(86)), libNtve_gf_PointFromXYZ(gv_warpCoordinates[0], gv_warpCoordinates[1], gv_warpCoordinates[2]), false);
        UnitIssueOrder(RegionGetAttachUnit(RegionFromId(86)), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    }
    else {
    }
    if ((UnitIsSelected(RegionGetAttachUnit(RegionFromId(87)), EventPlayer()) == true)) {
        UnitSetPosition(RegionGetAttachUnit(RegionFromId(87)), libNtve_gf_PointFromXYZ(gv_warpCoordinates[0], gv_warpCoordinates[1], gv_warpCoordinates[2]), false);
        UnitIssueOrder(RegionGetAttachUnit(RegionFromId(87)), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    }
    else {
    }
    if ((UnitIsSelected(RegionGetAttachUnit(RegionFromId(88)), EventPlayer()) == true)) {
        UnitSetPosition(RegionGetAttachUnit(RegionFromId(88)), libNtve_gf_PointFromXYZ(gv_warpCoordinates[0], gv_warpCoordinates[1], gv_warpCoordinates[2]), false);
        UnitIssueOrder(RegionGetAttachUnit(RegionFromId(88)), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    }
    else {
    }
    if ((UnitIsSelected(RegionGetAttachUnit(RegionFromId(89)), EventPlayer()) == true)) {
        UnitSetPosition(RegionGetAttachUnit(RegionFromId(89)), libNtve_gf_PointFromXYZ(gv_warpCoordinates[0], gv_warpCoordinates[1], gv_warpCoordinates[2]), false);
        UnitIssueOrder(RegionGetAttachUnit(RegionFromId(89)), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Warpanyonetest_Init () {
    gt_Warpanyonetest = TriggerCreate("gt_Warpanyonetest_Func");
    TriggerAddEventMouseClicked(gt_Warpanyonetest, PlayerGroupPlayer(gv_admin, 1), c_mouseButtonXButton1, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boot Player 1
//--------------------------------------------------------------------------------------------------
bool gt_BootPlayer1_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == PlayerGroupPlayer(gv_admin, 1)))) {
            return false;
        }

        if (!((EventChatMessage(false) == gv_handlestring[1]))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    GameOver(1, c_gameOverDefeat, false, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BootPlayer1_Init () {
    gt_BootPlayer1 = TriggerCreate("gt_BootPlayer1_Func");
    TriggerAddEventChatMessage(gt_BootPlayer1, c_playerAny, EventChatMessage(false), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boot Player  2
//--------------------------------------------------------------------------------------------------
bool gt_BootPlayer2_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == PlayerGroupPlayer(gv_admin, 1)))) {
            return false;
        }

        if (!((EventChatMessage(false) == gv_handlestring[2]))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    GameOver(2, c_gameOverDefeat, false, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BootPlayer2_Init () {
    gt_BootPlayer2 = TriggerCreate("gt_BootPlayer2_Func");
    TriggerAddEventChatMessage(gt_BootPlayer2, c_playerAny, EventChatMessage(false), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boot Player  3
//--------------------------------------------------------------------------------------------------
bool gt_BootPlayer3_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == PlayerGroupPlayer(gv_admin, 1)))) {
            return false;
        }

        if (!((EventChatMessage(false) == gv_handlestring[3]))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    GameOver(3, c_gameOverDefeat, false, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BootPlayer3_Init () {
    gt_BootPlayer3 = TriggerCreate("gt_BootPlayer3_Func");
    TriggerAddEventChatMessage(gt_BootPlayer3, c_playerAny, EventChatMessage(false), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boot Player  4
//--------------------------------------------------------------------------------------------------
bool gt_BootPlayer4_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == PlayerGroupPlayer(gv_admin, 1)))) {
            return false;
        }

        if (!((EventChatMessage(false) == gv_handlestring[4]))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    GameOver(4, c_gameOverDefeat, false, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BootPlayer4_Init () {
    gt_BootPlayer4 = TriggerCreate("gt_BootPlayer4_Func");
    TriggerAddEventChatMessage(gt_BootPlayer4, c_playerAny, EventChatMessage(false), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boot Player  5
//--------------------------------------------------------------------------------------------------
bool gt_BootPlayer5_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == PlayerGroupPlayer(gv_admin, 1)))) {
            return false;
        }

        if (!((EventChatMessage(false) == gv_handlestring[5]))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    GameOver(5, c_gameOverDefeat, false, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BootPlayer5_Init () {
    gt_BootPlayer5 = TriggerCreate("gt_BootPlayer5_Func");
    TriggerAddEventChatMessage(gt_BootPlayer5, c_playerAny, EventChatMessage(false), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boot Player  6
//--------------------------------------------------------------------------------------------------
bool gt_BootPlayer6_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == PlayerGroupPlayer(gv_admin, 1)))) {
            return false;
        }

        if (!((EventChatMessage(false) == gv_handlestring[6]))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    GameOver(6, c_gameOverDefeat, false, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BootPlayer6_Init () {
    gt_BootPlayer6 = TriggerCreate("gt_BootPlayer6_Func");
    TriggerAddEventChatMessage(gt_BootPlayer6, c_playerAny, EventChatMessage(false), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Debug handle string values
//--------------------------------------------------------------------------------------------------
bool gt_Debughandlestringvalues_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == PlayerGroupPlayer(gv_admin, 1)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        UIDisplayMessage(gv_admin, c_messageAreaSubtitle, StringToText(StringWord(gv_handlestring[IntLoopCurrent()], 1)));
        Wait(1.0, c_timeGame);
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Debughandlestringvalues_Init () {
    gt_Debughandlestringvalues = TriggerCreate("gt_Debughandlestringvalues_Func");
    TriggerAddEventChatMessage(gt_Debughandlestringvalues, c_playerAny, "-debug", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: God Mode On
//--------------------------------------------------------------------------------------------------
bool gt_GodModeOn_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == PlayerGroupPlayer(gv_admin, 1)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PlayerModifyPropertyInt(EventPlayer(), c_playerPropDamageTakenPercent, c_playerPropOperSetTo, 0);
    PlayerModifyPropertyInt(EventPlayer(), c_playerPropDamageDealtPercent, c_playerPropOperSetTo, gv_godmodeDamage);
    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, StringExternal("Param/Value/EFF0C259"));
    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(gt_GodModeOff, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_GodModeOn_Init () {
    gt_GodModeOn = TriggerCreate("gt_GodModeOn_Func");
    TriggerAddEventKeyPressed(gt_GodModeOn, c_playerAny, c_keyNumPadMinus, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set God Mode Damage
//--------------------------------------------------------------------------------------------------
bool gt_SetGodModeDamage_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == PlayerGroupPlayer(gv_admin, 1)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_godmodeDamage = StringToInt(GAx3_StringSpilt(EventChatMessage(false), 2, " "));
    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, (StringExternal("Param/Value/4C3C95A4") + (IntToText(gv_godmodeDamage) + StringExternal("Param/Value/0E3D87AC"))));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SetGodModeDamage_Init () {
    gt_SetGodModeDamage = TriggerCreate("gt_SetGodModeDamage_Func");
    TriggerAddEventChatMessage(gt_SetGodModeDamage, c_playerAny, "-a ", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: God Mode Off
//--------------------------------------------------------------------------------------------------
bool gt_GodModeOff_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == PlayerGroupPlayer(gv_admin, 1)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PlayerModifyPropertyInt(EventPlayer(), c_playerPropDamageTakenPercent, c_playerPropOperSetTo, 100);
    PlayerModifyPropertyInt(EventPlayer(), c_playerPropDamageDealtPercent, c_playerPropOperSetTo, 100);
    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaChat, StringExternal("Param/Value/53DF3003"));
    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(gt_GodModeOn, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_GodModeOff_Init () {
    gt_GodModeOff = TriggerCreate("gt_GodModeOff_Func");
    TriggerEnable(gt_GodModeOff, false);
    TriggerAddEventKeyPressed(gt_GodModeOff, c_playerAny, c_keyNumPadMinus, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Give Very Easy wins to player
//--------------------------------------------------------------------------------------------------
bool gt_GiveVeryEasywinstoplayer_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == PlayerGroupPlayer(gv_admin, 1)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    BankLoad("DBZAllSagas", gv_x);
    gv_veryEasyWinsInt[gv_x] += 1;
    gv_veryEasyWins[gv_x] = IntToString(gv_veryEasyWinsInt[gv_x]);
    gv_veryEasyWins[gv_x] = lib2_gf_KryptCodeEncryptString(gv_veryEasyWins[gv_x], "tBf4G#CUvf_6C4tp");
    BankValueSetFromString(BankLastCreated(), "Wins", "Very Easy", gv_veryEasyWins[gv_x]);
    BankSave(BankLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_GiveVeryEasywinstoplayer_Init () {
    gt_GiveVeryEasywinstoplayer = TriggerCreate("gt_GiveVeryEasywinstoplayer_Func");
    TriggerAddEventChatMessage(gt_GiveVeryEasywinstoplayer, c_playerAny, "-give", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Give Easy wins to player
//--------------------------------------------------------------------------------------------------
bool gt_GiveEasywinstoplayer_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == PlayerGroupPlayer(gv_admin, 1)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    BankLoad("DBZAllSagas", gv_x);
    gv_easyWinsInt[gv_x] += 1;
    gv_easyWins[gv_x] = IntToString(gv_easyWinsInt[gv_x]);
    gv_easyWins[gv_x] = lib2_gf_KryptCodeEncryptString(gv_easyWins[gv_x], "48lXKHbNrdYsG8ov");
    BankValueSetFromString(BankLastCreated(), "Wins", "Easy", gv_easyWins[gv_x]);
    BankSave(BankLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_GiveEasywinstoplayer_Init () {
    gt_GiveEasywinstoplayer = TriggerCreate("gt_GiveEasywinstoplayer_Func");
    TriggerAddEventChatMessage(gt_GiveEasywinstoplayer, c_playerAny, "-give1", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Give Normal wins to player
//--------------------------------------------------------------------------------------------------
bool gt_GiveNormalwinstoplayer_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == PlayerGroupPlayer(gv_admin, 1)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    BankLoad("DBZAllSagas", gv_x);
    gv_normalWinsInt[gv_x] += 1;
    gv_normalWins[gv_x] = IntToString(gv_normalWinsInt[gv_x]);
    gv_normalWins[gv_x] = lib2_gf_KryptCodeEncryptString(gv_normalWins[gv_x], "oIl%DebD53ocewyR");
    BankValueSetFromString(BankLastCreated(), "Wins", "Normal", gv_normalWins[gv_x]);
    BankSave(BankLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_GiveNormalwinstoplayer_Init () {
    gt_GiveNormalwinstoplayer = TriggerCreate("gt_GiveNormalwinstoplayer_Func");
    TriggerAddEventChatMessage(gt_GiveNormalwinstoplayer, c_playerAny, "-give2", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Give Hard wins to player
//--------------------------------------------------------------------------------------------------
bool gt_GiveHardwinstoplayer_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == PlayerGroupPlayer(gv_admin, 1)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    BankLoad("DBZAllSagas", gv_x);
    gv_hardWinsInt[gv_x] += 1;
    gv_hardWins[gv_x] = IntToString(gv_hardWinsInt[gv_x]);
    gv_hardWins[gv_x] = lib2_gf_KryptCodeEncryptString(gv_hardWins[gv_x], "3IKTiRlEDkBLAtj$");
    BankValueSetFromString(BankLastCreated(), "Wins", "Hard", gv_hardWins[gv_x]);
    BankSave(BankLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_GiveHardwinstoplayer_Init () {
    gt_GiveHardwinstoplayer = TriggerCreate("gt_GiveHardwinstoplayer_Func");
    TriggerAddEventChatMessage(gt_GiveHardwinstoplayer, c_playerAny, "-give3", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Give Very Hard wins to player
//--------------------------------------------------------------------------------------------------
bool gt_GiveVeryHardwinstoplayer_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == PlayerGroupPlayer(gv_admin, 1)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    BankLoad("DBZAllSagas", gv_x);
    gv_veryHardWinsInt[gv_x] += 1;
    gv_veryHardWins[gv_x] = IntToString(gv_veryHardWinsInt[gv_x]);
    gv_veryHardWins[gv_x] = lib2_gf_KryptCodeEncryptString(gv_veryHardWins[gv_x], "$$ppY$8d-acknqIV");
    BankValueSetFromString(BankLastCreated(), "Wins", "Very Hard", gv_veryHardWins[gv_x]);
    BankSave(BankLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_GiveVeryHardwinstoplayer_Init () {
    gt_GiveVeryHardwinstoplayer = TriggerCreate("gt_GiveVeryHardwinstoplayer_Func");
    TriggerAddEventChatMessage(gt_GiveVeryHardwinstoplayer, c_playerAny, "-give4", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Give Z wins to player
//--------------------------------------------------------------------------------------------------
bool gt_GiveZwinstoplayer_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == PlayerGroupPlayer(gv_admin, 1)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    BankLoad("DBZAllSagas", gv_x);
    gv_zWinsInt[gv_x] += 1;
    gv_zWins[gv_x] = IntToString(gv_zWinsInt[gv_x]);
    gv_zWins[gv_x] = lib2_gf_KryptCodeEncryptString(gv_zWins[gv_x], "yM-4gaGSl2_%IfrY");
    BankValueSetFromString(BankLastCreated(), "Wins", "Z", gv_zWins[gv_x]);
    BankSave(BankLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_GiveZwinstoplayer_Init () {
    gt_GiveZwinstoplayer = TriggerCreate("gt_GiveZwinstoplayer_Func");
    TriggerAddEventChatMessage(gt_GiveZwinstoplayer, c_playerAny, "-give5", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Give Z 2 wins to player
//--------------------------------------------------------------------------------------------------
bool gt_GiveZ2winstoplayer_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == PlayerGroupPlayer(gv_admin, 1)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    BankLoad("DBZAllSagas", gv_x);
    gv_z2WinsInt[gv_x] += 1;
    gv_z2Wins[gv_x] = IntToString(gv_z2WinsInt[gv_x]);
    gv_z2Wins[gv_x] = lib2_gf_KryptCodeEncryptString(gv_z2Wins[gv_x], "PfURtdWTEEh_lMOn");
    BankValueSetFromString(BankLastCreated(), "Wins", "Z 2", gv_z2Wins[gv_x]);
    BankSave(BankLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_GiveZ2winstoplayer_Init () {
    gt_GiveZ2winstoplayer = TriggerCreate("gt_GiveZ2winstoplayer_Func");
    TriggerAddEventChatMessage(gt_GiveZ2winstoplayer, c_playerAny, "-give6", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Give Z 3 wins to player
//--------------------------------------------------------------------------------------------------
bool gt_GiveZ3winstoplayer_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == PlayerGroupPlayer(gv_admin, 1)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    BankLoad("DBZAllSagas", gv_x);
    gv_z3WinsInt[gv_x] += 1;
    gv_z3Wins[gv_x] = IntToString(gv_z3WinsInt[gv_x]);
    gv_z3Wins[gv_x] = lib2_gf_KryptCodeEncryptString(gv_z3Wins[gv_x], "Cl%cFUbS1KvwcVhu");
    BankValueSetFromString(BankLastCreated(), "Wins", "Z 3", gv_z3Wins[gv_x]);
    BankSave(BankLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_GiveZ3winstoplayer_Init () {
    gt_GiveZ3winstoplayer = TriggerCreate("gt_GiveZ3winstoplayer_Func");
    TriggerAddEventChatMessage(gt_GiveZ3winstoplayer, c_playerAny, "-give7", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Give Godly wins to player
//--------------------------------------------------------------------------------------------------
bool gt_GiveGodlywinstoplayer_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == PlayerGroupPlayer(gv_admin, 1)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    BankLoad("DBZAllSagas", gv_x);
    gv_godlyWinsInt[gv_x] += 1;
    gv_godlyWins[gv_x] = IntToString(gv_godlyWinsInt[gv_x]);
    gv_godlyWins[gv_x] = lib2_gf_KryptCodeEncryptString(gv_godlyWins[gv_x], "R#_qBOIFprxO#gvP");
    BankValueSetFromString(BankLastCreated(), "Wins", "Godly", gv_godlyWins[gv_x]);
    BankSave(BankLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_GiveGodlywinstoplayer_Init () {
    gt_GiveGodlywinstoplayer = TriggerCreate("gt_GiveGodlywinstoplayer_Func");
    TriggerAddEventChatMessage(gt_GiveGodlywinstoplayer, c_playerAny, "-give8", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Give Impossible wins to player
//--------------------------------------------------------------------------------------------------
bool gt_GiveImpossiblewinstoplayer_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == PlayerGroupPlayer(gv_admin, 1)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    BankLoad("DBZAllSagas", gv_x);
    gv_impossibleWinsInt[gv_x] += 1;
    gv_impossibleWins[gv_x] = IntToString(gv_impossibleWinsInt[gv_x]);
    gv_impossibleWins[gv_x] = lib2_gf_KryptCodeEncryptString(gv_impossibleWins[gv_x], "Vl6xakW_Mgzd#Sq0");
    BankValueSetFromString(BankLastCreated(), "Wins", "Impossible", gv_impossibleWins[gv_x]);
    BankSave(BankLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_GiveImpossiblewinstoplayer_Init () {
    gt_GiveImpossiblewinstoplayer = TriggerCreate("gt_GiveImpossiblewinstoplayer_Func");
    TriggerAddEventChatMessage(gt_GiveImpossiblewinstoplayer, c_playerAny, "-give9", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Give Fantasy wins to player
//--------------------------------------------------------------------------------------------------
bool gt_GiveFantasywinstoplayer_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == PlayerGroupPlayer(gv_admin, 1)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    BankLoad("DBZAllSagas", gv_x);
    gv_fantasyWinsInt[gv_x] += 1;
    gv_fantasyWins[gv_x] = IntToString(gv_fantasyWinsInt[gv_x]);
    gv_fantasyWins[gv_x] = lib2_gf_KryptCodeEncryptString(gv_fantasyWins[gv_x], "5-TNYGPiEbisoSzh");
    BankValueSetFromString(BankLastCreated(), "Wins", "Fantasy", gv_fantasyWins[gv_x]);
    BankSave(BankLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_GiveFantasywinstoplayer_Init () {
    gt_GiveFantasywinstoplayer = TriggerCreate("gt_GiveFantasywinstoplayer_Func");
    TriggerAddEventChatMessage(gt_GiveFantasywinstoplayer, c_playerAny, "-give10", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: modify x up
//--------------------------------------------------------------------------------------------------
bool gt_modifyxup_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == PlayerGroupPlayer(gv_admin, 1)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_x += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_modifyxup_Init () {
    gt_modifyxup = TriggerCreate("gt_modifyxup_Func");
    TriggerAddEventChatMessage(gt_modifyxup, c_playerAny, "+x", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: modify x down
//--------------------------------------------------------------------------------------------------
bool gt_modifyxdown_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == PlayerGroupPlayer(gv_admin, 1)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_x -= 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_modifyxdown_Init () {
    gt_modifyxdown = TriggerCreate("gt_modifyxdown_Func");
    TriggerAddEventChatMessage(gt_modifyxdown, c_playerAny, "-x", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Check x value
//--------------------------------------------------------------------------------------------------
bool gt_Checkxvalue_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == PlayerGroupPlayer(gv_admin, 1)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/26DE285C") + IntToText(gv_x)));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Checkxvalue_Init () {
    gt_Checkxvalue = TriggerCreate("gt_Checkxvalue_Func");
    TriggerAddEventChatMessage(gt_Checkxvalue, c_playerAny, "x", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Preload the Bank 2
//--------------------------------------------------------------------------------------------------
bool gt_PreloadtheBank2_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        BankLoad("DBZAllSagas", IntLoopCurrent());
        if ((BankKeyExists(BankLastCreated(), "Wins", "Very Easy") == false)) {
            gv_veryEasyWinsInt[IntLoopCurrent()] = 0;
            gv_veryEasyWins[IntLoopCurrent()] = IntToString(gv_veryEasyWinsInt[IntLoopCurrent()]);
            BankValueSetFromString(BankLastCreated(), "Wins", "Very Easy", gv_veryEasyWins[IntLoopCurrent()]);
            BankSave(BankLastCreated());
        }
        else {
            gv_veryEasyWins[IntLoopCurrent()] = BankValueGetAsString(BankLastCreated(), "Wins", "Very Easy");
            gv_veryEasyWins[IntLoopCurrent()] = lib2_gf_KyptCodeDecryptString(gv_veryEasyWins[IntLoopCurrent()], "tBf4G#CUvf_6C4tp");
            gv_veryEasyWinsInt[IntLoopCurrent()] = StringToInt(gv_veryEasyWins[IntLoopCurrent()]);
        }
        if ((BankKeyExists(BankLastCreated(), "Wins", "Easy") == false)) {
            gv_easyWinsInt[IntLoopCurrent()] = 0;
            gv_easyWins[IntLoopCurrent()] = IntToString(gv_easyWinsInt[IntLoopCurrent()]);
            BankValueSetFromString(BankLastCreated(), "Wins", "Easy", gv_easyWins[IntLoopCurrent()]);
            BankSave(BankLastCreated());
        }
        else {
            gv_easyWins[IntLoopCurrent()] = BankValueGetAsString(BankLastCreated(), "Wins", "Easy");
            gv_easyWins[IntLoopCurrent()] = lib2_gf_KyptCodeDecryptString(gv_easyWins[IntLoopCurrent()], "48lXKHbNrdYsG8ov");
            gv_easyWinsInt[IntLoopCurrent()] = StringToInt(gv_easyWins[IntLoopCurrent()]);
        }
        if ((BankKeyExists(BankLastCreated(), "Wins", "Normal") == false)) {
            gv_normalWinsInt[IntLoopCurrent()] = 0;
            gv_normalWins[IntLoopCurrent()] = IntToString(gv_normalWinsInt[IntLoopCurrent()]);
            BankValueSetFromString(BankLastCreated(), "Wins", "Normal", gv_normalWins[IntLoopCurrent()]);
            BankSave(BankLastCreated());
        }
        else {
            gv_normalWins[IntLoopCurrent()] = BankValueGetAsString(BankLastCreated(), "Wins", "Normal");
            gv_normalWins[IntLoopCurrent()] = lib2_gf_KyptCodeDecryptString(gv_normalWins[IntLoopCurrent()], "oIl%DebD53ocewyR");
            gv_normalWinsInt[IntLoopCurrent()] = StringToInt(gv_normalWins[IntLoopCurrent()]);
        }
        if ((BankKeyExists(BankLastCreated(), "Wins", "Hard") == false)) {
            gv_hardWinsInt[IntLoopCurrent()] = 0;
            gv_hardWins[IntLoopCurrent()] = IntToString(gv_hardWinsInt[IntLoopCurrent()]);
            BankValueSetFromString(BankLastCreated(), "Wins", "Hard", gv_hardWins[IntLoopCurrent()]);
            BankSave(BankLastCreated());
        }
        else {
            gv_hardWins[IntLoopCurrent()] = BankValueGetAsString(BankLastCreated(), "Wins", "Hard");
            gv_hardWins[IntLoopCurrent()] = lib2_gf_KyptCodeDecryptString(gv_hardWins[IntLoopCurrent()], "3IKTiRlEDkBLAtj$");
            gv_hardWinsInt[IntLoopCurrent()] = StringToInt(gv_hardWins[IntLoopCurrent()]);
        }
        if ((BankKeyExists(BankLastCreated(), "Wins", "Very Hard") == false)) {
            gv_veryHardWinsInt[IntLoopCurrent()] = 0;
            gv_veryHardWins[IntLoopCurrent()] = IntToString(gv_veryHardWinsInt[IntLoopCurrent()]);
            BankValueSetFromString(BankLastCreated(), "Wins", "Very Hard", gv_veryHardWins[IntLoopCurrent()]);
            BankSave(BankLastCreated());
        }
        else {
            gv_veryHardWins[IntLoopCurrent()] = BankValueGetAsString(BankLastCreated(), "Wins", "Very Hard");
            gv_veryHardWins[IntLoopCurrent()] = lib2_gf_KyptCodeDecryptString(gv_veryHardWins[IntLoopCurrent()], "$$ppY$8d-acknqIV");
            gv_veryHardWinsInt[IntLoopCurrent()] = StringToInt(gv_veryHardWins[IntLoopCurrent()]);
        }
        if ((BankKeyExists(BankLastCreated(), "Wins", "Z") == false)) {
            gv_zWinsInt[IntLoopCurrent()] = 0;
            gv_zWins[IntLoopCurrent()] = IntToString(gv_zWinsInt[IntLoopCurrent()]);
            BankValueSetFromString(BankLastCreated(), "Wins", "Z", gv_zWins[IntLoopCurrent()]);
            BankSave(BankLastCreated());
        }
        else {
            gv_zWins[IntLoopCurrent()] = BankValueGetAsString(BankLastCreated(), "Wins", "Z");
            gv_zWins[IntLoopCurrent()] = lib2_gf_KyptCodeDecryptString(gv_zWins[IntLoopCurrent()], "yM-4gaGSl2_%IfrY");
            gv_zWinsInt[IntLoopCurrent()] = StringToInt(gv_zWins[IntLoopCurrent()]);
        }
        if ((BankKeyExists(BankLastCreated(), "Wins", "Z 2") == false)) {
            gv_z2WinsInt[IntLoopCurrent()] = 0;
            gv_z2Wins[IntLoopCurrent()] = IntToString(gv_z2WinsInt[IntLoopCurrent()]);
            BankValueSetFromString(BankLastCreated(), "Wins", "Z 2", gv_z2Wins[IntLoopCurrent()]);
            BankSave(BankLastCreated());
        }
        else {
            gv_z2Wins[IntLoopCurrent()] = BankValueGetAsString(BankLastCreated(), "Wins", "Z 2");
            gv_z2Wins[IntLoopCurrent()] = lib2_gf_KyptCodeDecryptString(gv_z2Wins[IntLoopCurrent()], "PfURtdWTEEh_lMOn");
            gv_z2WinsInt[IntLoopCurrent()] = StringToInt(gv_z2Wins[IntLoopCurrent()]);
        }
        if ((BankKeyExists(BankLastCreated(), "Wins", "Z 3") == false)) {
            gv_z3WinsInt[IntLoopCurrent()] = 0;
            gv_z3Wins[IntLoopCurrent()] = IntToString(gv_z3WinsInt[IntLoopCurrent()]);
            BankValueSetFromString(BankLastCreated(), "Wins", "Z 3", gv_z3Wins[IntLoopCurrent()]);
            BankSave(BankLastCreated());
        }
        else {
            gv_z3Wins[IntLoopCurrent()] = BankValueGetAsString(BankLastCreated(), "Wins", "Z 3");
            gv_z3Wins[IntLoopCurrent()] = lib2_gf_KyptCodeDecryptString(gv_z3Wins[IntLoopCurrent()], "Cl%cFUbS1KvwcVhu");
            gv_z3WinsInt[IntLoopCurrent()] = StringToInt(gv_z3Wins[IntLoopCurrent()]);
        }
        if ((BankKeyExists(BankLastCreated(), "Wins", "Godly") == false)) {
            gv_godlyWinsInt[IntLoopCurrent()] = 0;
            gv_godlyWins[IntLoopCurrent()] = IntToString(gv_godlyWinsInt[IntLoopCurrent()]);
            BankValueSetFromString(BankLastCreated(), "Wins", "Godly", gv_godlyWins[IntLoopCurrent()]);
            BankSave(BankLastCreated());
        }
        else {
            gv_godlyWins[IntLoopCurrent()] = BankValueGetAsString(BankLastCreated(), "Wins", "Godly");
            gv_godlyWins[IntLoopCurrent()] = lib2_gf_KyptCodeDecryptString(gv_godlyWins[IntLoopCurrent()], "R#_qBOIFprxO#gvP");
            gv_godlyWinsInt[IntLoopCurrent()] = StringToInt(gv_godlyWins[IntLoopCurrent()]);
        }
        if ((BankKeyExists(BankLastCreated(), "Wins", "Impossible") == false)) {
            gv_impossibleWinsInt[IntLoopCurrent()] = 0;
            gv_impossibleWins[IntLoopCurrent()] = IntToString(gv_impossibleWinsInt[IntLoopCurrent()]);
            BankValueSetFromString(BankLastCreated(), "Wins", "Impossible", gv_impossibleWins[IntLoopCurrent()]);
            BankSave(BankLastCreated());
        }
        else {
            gv_impossibleWins[IntLoopCurrent()] = BankValueGetAsString(BankLastCreated(), "Wins", "Impossible");
            gv_impossibleWins[IntLoopCurrent()] = lib2_gf_KyptCodeDecryptString(gv_impossibleWins[IntLoopCurrent()], "Vl6xakW_Mgzd#Sq0");
            gv_impossibleWinsInt[IntLoopCurrent()] = StringToInt(gv_impossibleWins[IntLoopCurrent()]);
        }
        if ((BankKeyExists(BankLastCreated(), "Wins", "Fantasy") == false)) {
            gv_fantasyWinsInt[IntLoopCurrent()] = 0;
            gv_fantasyWins[IntLoopCurrent()] = IntToString(gv_fantasyWinsInt[IntLoopCurrent()]);
            BankValueSetFromString(BankLastCreated(), "Wins", "Fantasy", gv_fantasyWins[IntLoopCurrent()]);
            BankSave(BankLastCreated());
        }
        else {
            gv_fantasyWins[IntLoopCurrent()] = BankValueGetAsString(BankLastCreated(), "Wins", "Fantasy");
            gv_fantasyWins[IntLoopCurrent()] = lib2_gf_KyptCodeDecryptString(gv_fantasyWins[IntLoopCurrent()], "5-TNYGPiEbisoSzh");
            gv_fantasyWinsInt[IntLoopCurrent()] = StringToInt(gv_fantasyWins[IntLoopCurrent()]);
        }
        if ((BankKeyExists(BankLastCreated(), "Menu", "Flag 1") == false)) {
            gv_flag1MenuFlag[IntLoopCurrent()] = true;
            BankValueSetFromFlag(BankLastCreated(), "Menu", "Flag 1", true);
            BankSave(BankLastCreated());
        }
        else {
            gv_flag1MenuFlag[IntLoopCurrent()] = BankValueGetAsFlag(BankLastCreated(), "Menu", "Flag 1");
        }
        if ((BankKeyExists(BankLastCreated(), "Menu", "Flag 2") == false)) {
            gv_flag2MenuFlag[IntLoopCurrent()] = true;
            BankValueSetFromFlag(BankLastCreated(), "Menu", "Flag 2", true);
            BankSave(BankLastCreated());
        }
        else {
            gv_flag2MenuFlag[IntLoopCurrent()] = BankValueGetAsFlag(BankLastCreated(), "Menu", "Flag 2");
        }
        if ((BankKeyExists(BankLastCreated(), "Menu", "Flag 3") == false)) {
            gv_flag3MenuFlag[IntLoopCurrent()] = true;
            BankValueSetFromFlag(BankLastCreated(), "Menu", "Flag 3", true);
            BankSave(BankLastCreated());
        }
        else {
            gv_flag3MenuFlag[IntLoopCurrent()] = BankValueGetAsFlag(BankLastCreated(), "Menu", "Flag 3");
        }
        if ((BankKeyExists(BankLastCreated(), "Menu", "Flag 4") == false)) {
            gv_flag4MenuFlag[IntLoopCurrent()] = true;
            BankValueSetFromFlag(BankLastCreated(), "Menu", "Flag 4", true);
            BankSave(BankLastCreated());
        }
        else {
            gv_flag4MenuFlag[IntLoopCurrent()] = BankValueGetAsFlag(BankLastCreated(), "Menu", "Flag 4");
        }
        if ((BankKeyExists(BankLastCreated(), "Menu", "Flag 5") == false)) {
            gv_flag5MenuFlag[IntLoopCurrent()] = true;
            BankValueSetFromFlag(BankLastCreated(), "Menu", "Flag 5", true);
            BankSave(BankLastCreated());
        }
        else {
            gv_flag5MenuFlag[IntLoopCurrent()] = BankValueGetAsFlag(BankLastCreated(), "Menu", "Flag 5");
        }
        if ((BankKeyExists(BankLastCreated(), "Menu", "Flag 6") == false)) {
            gv_flag6MenuFlag[IntLoopCurrent()] = true;
            BankValueSetFromFlag(BankLastCreated(), "Menu", "Flag 6", true);
            BankSave(BankLastCreated());
        }
        else {
            gv_flag6MenuFlag[IntLoopCurrent()] = BankValueGetAsFlag(BankLastCreated(), "Menu", "Flag 6");
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_PreloadtheBank2_Init () {
    gt_PreloadtheBank2 = TriggerCreate("gt_PreloadtheBank2_Func");
    TriggerAddEventMapInit(gt_PreloadtheBank2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: See bank info
//--------------------------------------------------------------------------------------------------
bool gt_Seebankinfo_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/08EA9478") + IntToText(gv_veryEasyWinsInt[EventPlayer()])));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Seebankinfo_Init () {
    gt_Seebankinfo = TriggerCreate("gt_Seebankinfo_Func");
    TriggerAddEventChatMessage(gt_Seebankinfo, c_playerAny, "-see", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: See bank info 2
//--------------------------------------------------------------------------------------------------
bool gt_Seebankinfo2_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/6F97E120") + IntToText(gv_easyWinsInt[EventPlayer()])));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Seebankinfo2_Init () {
    gt_Seebankinfo2 = TriggerCreate("gt_Seebankinfo2_Func");
    TriggerAddEventChatMessage(gt_Seebankinfo2, c_playerAny, "-see1", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: See bank info 3
//--------------------------------------------------------------------------------------------------
bool gt_Seebankinfo3_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/9B67064C") + IntToText(gv_normalWinsInt[EventPlayer()])));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Seebankinfo3_Init () {
    gt_Seebankinfo3 = TriggerCreate("gt_Seebankinfo3_Func");
    TriggerAddEventChatMessage(gt_Seebankinfo3, c_playerAny, "-see2", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: See bank info 4
//--------------------------------------------------------------------------------------------------
bool gt_Seebankinfo4_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/BB62B4F0") + IntToText(gv_hardWinsInt[EventPlayer()])));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Seebankinfo4_Init () {
    gt_Seebankinfo4 = TriggerCreate("gt_Seebankinfo4_Func");
    TriggerAddEventChatMessage(gt_Seebankinfo4, c_playerAny, "-see3", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: See bank info 5
//--------------------------------------------------------------------------------------------------
bool gt_Seebankinfo5_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/A7845586") + IntToText(gv_veryHardWinsInt[EventPlayer()])));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Seebankinfo5_Init () {
    gt_Seebankinfo5 = TriggerCreate("gt_Seebankinfo5_Func");
    TriggerAddEventChatMessage(gt_Seebankinfo5, c_playerAny, "-see4", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: See bank info 6
//--------------------------------------------------------------------------------------------------
bool gt_Seebankinfo6_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/0778C330") + IntToText(gv_zWinsInt[EventPlayer()])));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Seebankinfo6_Init () {
    gt_Seebankinfo6 = TriggerCreate("gt_Seebankinfo6_Func");
    TriggerAddEventChatMessage(gt_Seebankinfo6, c_playerAny, "-see5", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: See bank info 7
//--------------------------------------------------------------------------------------------------
bool gt_Seebankinfo7_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/A6218821") + IntToText(gv_z2WinsInt[EventPlayer()])));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Seebankinfo7_Init () {
    gt_Seebankinfo7 = TriggerCreate("gt_Seebankinfo7_Func");
    TriggerAddEventChatMessage(gt_Seebankinfo7, c_playerAny, "-see6", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: See bank info 8
//--------------------------------------------------------------------------------------------------
bool gt_Seebankinfo8_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/B1F5534C") + IntToText(gv_z3WinsInt[EventPlayer()])));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Seebankinfo8_Init () {
    gt_Seebankinfo8 = TriggerCreate("gt_Seebankinfo8_Func");
    TriggerAddEventChatMessage(gt_Seebankinfo8, c_playerAny, "-see7", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: See bank info 9
//--------------------------------------------------------------------------------------------------
bool gt_Seebankinfo9_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/5E6E9C7E") + IntToText(gv_godlyWinsInt[EventPlayer()])));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Seebankinfo9_Init () {
    gt_Seebankinfo9 = TriggerCreate("gt_Seebankinfo9_Func");
    TriggerAddEventChatMessage(gt_Seebankinfo9, c_playerAny, "-see8", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: See bank info 10
//--------------------------------------------------------------------------------------------------
bool gt_Seebankinfo10_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/34992198") + IntToText(gv_impossibleWinsInt[EventPlayer()])));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Seebankinfo10_Init () {
    gt_Seebankinfo10 = TriggerCreate("gt_Seebankinfo10_Func");
    TriggerAddEventChatMessage(gt_Seebankinfo10, c_playerAny, "-see9", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: See bank info 11
//--------------------------------------------------------------------------------------------------
bool gt_Seebankinfo11_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/A9AE14FC") + IntToText(gv_fantasyWinsInt[EventPlayer()])));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Seebankinfo11_Init () {
    gt_Seebankinfo11 = TriggerCreate("gt_Seebankinfo11_Func");
    TriggerAddEventChatMessage(gt_Seebankinfo11, c_playerAny, "-see10", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bank Load Crystals 2
//--------------------------------------------------------------------------------------------------
bool gt_BankLoadCrystals2_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        BankLoad("DBZAllSagas", IntLoopCurrent());
        while ((gv_fantasyWinsInt[IntLoopCurrent()] >= 1) && ((UnitGroupCount(gv_crystals[IntLoopCurrent()], c_unitCountAlive) >= 0) && (UnitGroupCount(gv_crystals[IntLoopCurrent()], c_unitCountAlive) <= 10))) {
            UnitCreate(1, "Pylon", 0, IntLoopCurrent(), RegionRandomPoint(RegionFromId(97)), 270.0);
            UnitGroupAdd(gv_crystals[IntLoopCurrent()], UnitLastCreated());
            Wait(0.25, c_timeGame);
        }
        while ((gv_impossibleWinsInt[IntLoopCurrent()] >= 1) && ((UnitGroupCount(gv_crystals[IntLoopCurrent()], c_unitCountAlive) >= 0) && (UnitGroupCount(gv_crystals[IntLoopCurrent()], c_unitCountAlive) <= 9))) {
            UnitCreate(1, "Pylon", 0, IntLoopCurrent(), RegionRandomPoint(RegionFromId(97)), 270.0);
            UnitGroupAdd(gv_crystals[IntLoopCurrent()], UnitLastCreated());
            Wait(0.25, c_timeGame);
        }
        while ((gv_godlyWinsInt[IntLoopCurrent()] >= 1) && ((UnitGroupCount(gv_crystals[IntLoopCurrent()], c_unitCountAlive) >= 0) && (UnitGroupCount(gv_crystals[IntLoopCurrent()], c_unitCountAlive) <= 8))) {
            UnitCreate(1, "Pylon", 0, IntLoopCurrent(), RegionRandomPoint(RegionFromId(97)), 270.0);
            UnitGroupAdd(gv_crystals[IntLoopCurrent()], UnitLastCreated());
            Wait(0.25, c_timeGame);
        }
        while ((gv_z3WinsInt[IntLoopCurrent()] >= 1) && ((UnitGroupCount(gv_crystals[IntLoopCurrent()], c_unitCountAlive) >= 0) && (UnitGroupCount(gv_crystals[IntLoopCurrent()], c_unitCountAlive) <= 7))) {
            UnitCreate(1, "Pylon", 0, IntLoopCurrent(), RegionRandomPoint(RegionFromId(97)), 270.0);
            UnitGroupAdd(gv_crystals[IntLoopCurrent()], UnitLastCreated());
            Wait(0.25, c_timeGame);
        }
        while ((gv_z2WinsInt[IntLoopCurrent()] >= 1) && ((UnitGroupCount(gv_crystals[IntLoopCurrent()], c_unitCountAlive) >= 0) && (UnitGroupCount(gv_crystals[IntLoopCurrent()], c_unitCountAlive) <= 6))) {
            UnitCreate(1, "Pylon", 0, IntLoopCurrent(), RegionRandomPoint(RegionFromId(97)), 270.0);
            UnitGroupAdd(gv_crystals[IntLoopCurrent()], UnitLastCreated());
            Wait(0.25, c_timeGame);
        }
        while ((gv_zWinsInt[IntLoopCurrent()] >= 1) && ((UnitGroupCount(gv_crystals[IntLoopCurrent()], c_unitCountAlive) >= 0) && (UnitGroupCount(gv_crystals[IntLoopCurrent()], c_unitCountAlive) <= 5))) {
            UnitCreate(1, "Pylon", 0, IntLoopCurrent(), RegionRandomPoint(RegionFromId(97)), 270.0);
            UnitGroupAdd(gv_crystals[IntLoopCurrent()], UnitLastCreated());
            Wait(0.25, c_timeGame);
        }
        while ((gv_veryHardWinsInt[IntLoopCurrent()] >= 1) && ((UnitGroupCount(gv_crystals[IntLoopCurrent()], c_unitCountAlive) >= 0) && (UnitGroupCount(gv_crystals[IntLoopCurrent()], c_unitCountAlive) <= 4))) {
            UnitCreate(1, "Pylon", 0, IntLoopCurrent(), RegionRandomPoint(RegionFromId(97)), 270.0);
            UnitGroupAdd(gv_crystals[IntLoopCurrent()], UnitLastCreated());
            Wait(0.25, c_timeGame);
        }
        while ((gv_hardWinsInt[IntLoopCurrent()] >= 1) && ((UnitGroupCount(gv_crystals[IntLoopCurrent()], c_unitCountAlive) >= 0) && (UnitGroupCount(gv_crystals[IntLoopCurrent()], c_unitCountAlive) <= 3))) {
            UnitCreate(1, "Pylon", 0, IntLoopCurrent(), RegionRandomPoint(RegionFromId(97)), 270.0);
            UnitGroupAdd(gv_crystals[IntLoopCurrent()], UnitLastCreated());
            Wait(0.25, c_timeGame);
        }
        while ((gv_normalWinsInt[IntLoopCurrent()] >= 1) && ((UnitGroupCount(gv_crystals[IntLoopCurrent()], c_unitCountAlive) >= 0) && (UnitGroupCount(gv_crystals[IntLoopCurrent()], c_unitCountAlive) <= 2))) {
            UnitCreate(1, "Pylon", 0, IntLoopCurrent(), RegionRandomPoint(RegionFromId(97)), 270.0);
            UnitGroupAdd(gv_crystals[IntLoopCurrent()], UnitLastCreated());
            Wait(0.25, c_timeGame);
        }
        while ((gv_easyWinsInt[IntLoopCurrent()] >= 1) && ((UnitGroupCount(gv_crystals[IntLoopCurrent()], c_unitCountAlive) >= 0) && (UnitGroupCount(gv_crystals[IntLoopCurrent()], c_unitCountAlive) <= 1))) {
            UnitCreate(1, "Pylon", 0, IntLoopCurrent(), RegionRandomPoint(RegionFromId(97)), 270.0);
            UnitGroupAdd(gv_crystals[IntLoopCurrent()], UnitLastCreated());
            Wait(0.25, c_timeGame);
        }
        while ((gv_veryEasyWinsInt[IntLoopCurrent()] >= 1) && ((UnitGroupCount(gv_crystals[IntLoopCurrent()], c_unitCountAlive) >= 0) && (UnitGroupCount(gv_crystals[IntLoopCurrent()], c_unitCountAlive) <= 0))) {
            UnitCreate(1, "Pylon", 0, IntLoopCurrent(), RegionRandomPoint(RegionFromId(97)), 270.0);
            UnitGroupAdd(gv_crystals[IntLoopCurrent()], UnitLastCreated());
            Wait(0.25, c_timeGame);
        }
    }
    IntLoopEnd();
    TriggerExecute(gt_LoadStartingPowerLevel, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BankLoadCrystals2_Init () {
    gt_BankLoadCrystals2 = TriggerCreate("gt_BankLoadCrystals2_Func");
    TriggerAddEventTimeElapsed(gt_BankLoadCrystals2, 5.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Load Starting Power Level
//--------------------------------------------------------------------------------------------------
bool gt_LoadStartingPowerLevel_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropVespene, c_playerPropOperSetTo, (UnitGroupCount(gv_crystals[IntLoopCurrent()], c_unitCountAlive) * 300));
        BoardItemSetText(gv_powerLevel, 2, IntLoopCurrent(), IntToText(PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene)));
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_LoadStartingPowerLevel_Init () {
    gt_LoadStartingPowerLevel = TriggerCreate("gt_LoadStartingPowerLevel_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Random Number Generator
//--------------------------------------------------------------------------------------------------
bool gt_RandomNumberGenerator_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_random;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    gv_randomNumberVariable1 = RandomFixed(0.0, 10.0);
    gv_randomNumberVariable2 = RandomFixed(0.0, 10.0);
    lv_random = RandomInt(0, 39);
    while (true) {
        if ((lv_random == 0)) {
            gv_randomNumberVariable1 += RandomFixed(0.0, 524287.0);
        }
        else {
        }
        if ((lv_random == 1)) {
            gv_randomNumberVariable1 /= RandomFixed(1.0, 2500.0);
        }
        else {
        }
        if ((lv_random == 2)) {
            gv_randomNumberVariable1 *= RandomFixed(0.0, 2500.0);
        }
        else {
        }
        if ((lv_random == 3)) {
            gv_randomNumberVariable1 -= RandomFixed(0.0, 524287.0);
        }
        else {
        }
        if ((lv_random == 4)) {
            gv_randomNumberVariable1 += Log2(gv_randomNumberVariable1);
        }
        else {
        }
        if ((lv_random == 5)) {
            gv_randomNumberVariable1 /= Log2(gv_randomNumberVariable1);
        }
        else {
        }
        if ((lv_random == 6)) {
            gv_randomNumberVariable1 *= Log2(gv_randomNumberVariable1);
        }
        else {
        }
        if ((lv_random == 7)) {
            gv_randomNumberVariable1 -= Log2(gv_randomNumberVariable1);
        }
        else {
        }
        if ((lv_random == 8)) {
            gv_randomNumberVariable1 += ModF(gv_randomNumberVariable1, RandomFixed(0.0, 524287.0));
        }
        else {
        }
        if ((lv_random == 9)) {
            gv_randomNumberVariable1 /= ModF(gv_randomNumberVariable1, RandomFixed(0.0, 1200.0));
        }
        else {
        }
        if ((lv_random == 10)) {
            gv_randomNumberVariable1 *= ModF(gv_randomNumberVariable1, RandomFixed(0.0, 1800.0));
        }
        else {
        }
        if ((lv_random == 11)) {
            gv_randomNumberVariable1 -= ModF(gv_randomNumberVariable1, RandomFixed(0.0, 524287.0));
        }
        else {
        }
        if ((lv_random == 12)) {
            gv_randomNumberVariable1 += Pow(gv_randomNumberVariable1, RandomFixed(0.0, 10.0));
        }
        else {
        }
        if ((lv_random == 13)) {
            gv_randomNumberVariable1 /= Pow(gv_randomNumberVariable1, RandomFixed(0.0, 10.0));
        }
        else {
        }
        if ((lv_random == 14)) {
            gv_randomNumberVariable1 *= Pow(gv_randomNumberVariable1, RandomFixed(0.0, 10.0));
        }
        else {
        }
        if ((lv_random == 15)) {
            gv_randomNumberVariable1 -= Pow(gv_randomNumberVariable1, RandomFixed(0.0, 10.0));
        }
        else {
        }
        if ((lv_random == 16)) {
            gv_randomNumberVariable1 += libNtve_gf_RandomPercent();
        }
        else {
        }
        if ((lv_random == 17)) {
            gv_randomNumberVariable1 /= libNtve_gf_RandomPercent();
        }
        else {
        }
        if ((lv_random == 18)) {
            gv_randomNumberVariable1 *= libNtve_gf_RandomPercent();
        }
        else {
        }
        if ((lv_random == 19)) {
            gv_randomNumberVariable1 -= libNtve_gf_RandomPercent();
        }
        else {
        }
        if ((lv_random == 20)) {
            gv_randomNumberVariable1 += SquareRoot(gv_randomNumberVariable1);
        }
        else {
        }
        if ((lv_random == 21)) {
            gv_randomNumberVariable1 /= SquareRoot(gv_randomNumberVariable1);
        }
        else {
        }
        if ((lv_random == 22)) {
            gv_randomNumberVariable1 *= SquareRoot(gv_randomNumberVariable1);
        }
        else {
        }
        if ((lv_random == 23)) {
            gv_randomNumberVariable1 -= SquareRoot(gv_randomNumberVariable1);
        }
        else {
        }
        if ((lv_random == 24)) {
            gv_randomNumberVariable1 += Log2(gv_randomNumberVariable2);
        }
        else {
        }
        if ((lv_random == 25)) {
            gv_randomNumberVariable1 /= Log2(gv_randomNumberVariable2);
        }
        else {
        }
        if ((lv_random == 26)) {
            gv_randomNumberVariable1 *= Log2(gv_randomNumberVariable2);
        }
        else {
        }
        if ((lv_random == 27)) {
            gv_randomNumberVariable1 -= Log2(gv_randomNumberVariable2);
        }
        else {
        }
        if ((lv_random == 28)) {
            gv_randomNumberVariable1 += ModF(gv_randomNumberVariable2, RandomFixed(0.0, 524287.0));
        }
        else {
        }
        if ((lv_random == 29)) {
            gv_randomNumberVariable1 /= ModF(gv_randomNumberVariable2, RandomFixed(0.0, 1400.0));
        }
        else {
        }
        if ((lv_random == 30)) {
            gv_randomNumberVariable1 *= ModF(gv_randomNumberVariable2, RandomFixed(0.0, 1900.0));
        }
        else {
        }
        if ((lv_random == 31)) {
            gv_randomNumberVariable1 -= ModF(gv_randomNumberVariable2, RandomFixed(0.0, 524287.0));
        }
        else {
        }
        if ((lv_random == 32)) {
            gv_randomNumberVariable1 += Pow(gv_randomNumberVariable2, RandomFixed(0.0, 10.0));
        }
        else {
        }
        if ((lv_random == 33)) {
            gv_randomNumberVariable1 /= Pow(gv_randomNumberVariable2, RandomFixed(0.0, 10.0));
        }
        else {
        }
        if ((lv_random == 34)) {
            gv_randomNumberVariable1 *= Pow(gv_randomNumberVariable2, RandomFixed(0.0, 10.0));
        }
        else {
        }
        if ((lv_random == 35)) {
            gv_randomNumberVariable1 -= Pow(gv_randomNumberVariable2, RandomFixed(0.0, 10.0));
        }
        else {
        }
        if ((lv_random == 36)) {
            gv_randomNumberVariable1 += SquareRoot(gv_randomNumberVariable2);
        }
        else {
        }
        if ((lv_random == 37)) {
            gv_randomNumberVariable1 /= SquareRoot(gv_randomNumberVariable2);
        }
        else {
        }
        if ((lv_random == 38)) {
            gv_randomNumberVariable1 *= SquareRoot(gv_randomNumberVariable2);
        }
        else {
        }
        if ((lv_random == 39)) {
            gv_randomNumberVariable1 -= SquareRoot(gv_randomNumberVariable2);
        }
        else {
        }
        PlayerGroupLoopBegin(PlayerGroupActive());
        for ( ; !PlayerGroupLoopDone() ; PlayerGroupLoopStep() ) {
            BankLoad("DBZAllSagas", PlayerGroupLoopCurrent());
            gv_oldRandomNumberVariable[PlayerGroupLoopCurrent()] = BankValueGetAsFixed(BankLastCreated(), "Number", "Number");
        }
        PlayerGroupLoopEnd();
        PlayerGroupLoopBegin(PlayerGroupActive());
        for ( ; !PlayerGroupLoopDone() ; PlayerGroupLoopStep() ) {
            BankLoad("DBZAllSagas", PlayerGroupLoopCurrent());
            BankValueSetFromFixed(BankLastCreated(), "Number", "Number", gv_randomNumberVariable1);
            BankSave(BankLastCreated());
        }
        PlayerGroupLoopEnd();
        break;
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RandomNumberGenerator_Init () {
    gt_RandomNumberGenerator = TriggerCreate("gt_RandomNumberGenerator_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Bank Save 2
//--------------------------------------------------------------------------------------------------
bool gt_BankSave2_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 15))) {
            return false;
        }

        if (!((libNtve_gf_UnitGroupIsDead(gv_buu) == true))) {
            return false;
        }

        if (!((gv_abilitytomovewithtimers == 21))) {
            return false;
        }

        if (!((gv_preventMultipleRuns == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_preventMultipleRuns = true;
    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        BankLoad("DBZAllSagas", IntLoopCurrent());
        if ((gv_difficultyvariable == 10)) {
            gv_fantasyWinsInt[IntLoopCurrent()] += 1;
            gv_fantasyWins[IntLoopCurrent()] = IntToString(gv_fantasyWinsInt[IntLoopCurrent()]);
            gv_fantasyWins[IntLoopCurrent()] = lib2_gf_KryptCodeEncryptString(gv_fantasyWins[IntLoopCurrent()], "5-TNYGPiEbisoSzh");
            BankValueSetFromString(BankLastCreated(), "Wins", "Fantasy", gv_fantasyWins[IntLoopCurrent()]);
            BankSave(BankLastCreated());
        }
        else {
        }
        if ((gv_difficultyvariable == 9)) {
            gv_impossibleWinsInt[IntLoopCurrent()] += 1;
            gv_impossibleWins[IntLoopCurrent()] = IntToString(gv_impossibleWinsInt[IntLoopCurrent()]);
            gv_impossibleWins[IntLoopCurrent()] = lib2_gf_KryptCodeEncryptString(gv_impossibleWins[IntLoopCurrent()], "Vl6xakW_Mgzd#Sq0");
            BankValueSetFromString(BankLastCreated(), "Wins", "Impossible", gv_impossibleWins[IntLoopCurrent()]);
            BankSave(BankLastCreated());
        }
        else {
        }
        if ((gv_difficultyvariable == 8)) {
            gv_godlyWinsInt[IntLoopCurrent()] += 1;
            gv_godlyWins[IntLoopCurrent()] = IntToString(gv_godlyWinsInt[IntLoopCurrent()]);
            gv_godlyWins[IntLoopCurrent()] = lib2_gf_KryptCodeEncryptString(gv_godlyWins[IntLoopCurrent()], "R#_qBOIFprxO#gvP");
            BankValueSetFromString(BankLastCreated(), "Wins", "Godly", gv_godlyWins[IntLoopCurrent()]);
            BankSave(BankLastCreated());
        }
        else {
        }
        if ((gv_difficultyvariable == 7)) {
            gv_z3WinsInt[IntLoopCurrent()] += 1;
            gv_z3Wins[IntLoopCurrent()] = IntToString(gv_z3WinsInt[IntLoopCurrent()]);
            gv_z3Wins[IntLoopCurrent()] = lib2_gf_KryptCodeEncryptString(gv_z3Wins[IntLoopCurrent()], "Cl%cFUbS1KvwcVhu");
            BankValueSetFromString(BankLastCreated(), "Wins", "Z 3", gv_z3Wins[IntLoopCurrent()]);
            BankSave(BankLastCreated());
        }
        else {
        }
        if ((gv_difficultyvariable == 6)) {
            gv_z2WinsInt[IntLoopCurrent()] += 1;
            gv_z2Wins[IntLoopCurrent()] = IntToString(gv_z2WinsInt[IntLoopCurrent()]);
            gv_z2Wins[IntLoopCurrent()] = lib2_gf_KryptCodeEncryptString(gv_z2Wins[IntLoopCurrent()], "PfURtdWTEEh_lMOn");
            BankValueSetFromString(BankLastCreated(), "Wins", "Z 2", gv_z2Wins[IntLoopCurrent()]);
            BankSave(BankLastCreated());
        }
        else {
        }
        if ((gv_difficultyvariable == 5)) {
            gv_zWinsInt[IntLoopCurrent()] += 1;
            gv_zWins[IntLoopCurrent()] = IntToString(gv_zWinsInt[IntLoopCurrent()]);
            gv_zWins[IntLoopCurrent()] = lib2_gf_KryptCodeEncryptString(gv_zWins[IntLoopCurrent()], "yM-4gaGSl2_%IfrY");
            BankValueSetFromString(BankLastCreated(), "Wins", "Z", gv_zWins[IntLoopCurrent()]);
            BankSave(BankLastCreated());
        }
        else {
        }
        if ((gv_difficultyvariable == 4)) {
            gv_veryHardWinsInt[IntLoopCurrent()] += 1;
            gv_veryHardWins[IntLoopCurrent()] = IntToString(gv_veryHardWinsInt[IntLoopCurrent()]);
            gv_veryHardWins[IntLoopCurrent()] = lib2_gf_KryptCodeEncryptString(gv_veryHardWins[IntLoopCurrent()], "$$ppY$8d-acknqIV");
            BankValueSetFromString(BankLastCreated(), "Wins", "Very Hard", gv_veryHardWins[IntLoopCurrent()]);
            BankSave(BankLastCreated());
        }
        else {
        }
        if ((gv_difficultyvariable == 3)) {
            gv_hardWinsInt[IntLoopCurrent()] += 1;
            gv_hardWins[IntLoopCurrent()] = IntToString(gv_hardWinsInt[IntLoopCurrent()]);
            gv_hardWins[IntLoopCurrent()] = lib2_gf_KryptCodeEncryptString(gv_hardWins[IntLoopCurrent()], "3IKTiRlEDkBLAtj$");
            BankValueSetFromString(BankLastCreated(), "Wins", "Hard", gv_hardWins[IntLoopCurrent()]);
            BankSave(BankLastCreated());
        }
        else {
        }
        if ((gv_difficultyvariable == 2)) {
            gv_normalWinsInt[IntLoopCurrent()] += 1;
            gv_normalWins[IntLoopCurrent()] = IntToString(gv_normalWinsInt[IntLoopCurrent()]);
            gv_normalWins[IntLoopCurrent()] = lib2_gf_KryptCodeEncryptString(gv_normalWins[IntLoopCurrent()], "oIl%DebD53ocewyR");
            BankValueSetFromString(BankLastCreated(), "Wins", "Normal", gv_normalWins[IntLoopCurrent()]);
            BankSave(BankLastCreated());
        }
        else {
        }
        if ((gv_difficultyvariable == 1)) {
            gv_easyWinsInt[IntLoopCurrent()] += 1;
            gv_easyWins[IntLoopCurrent()] = IntToString(gv_easyWinsInt[IntLoopCurrent()]);
            gv_easyWins[IntLoopCurrent()] = lib2_gf_KryptCodeEncryptString(gv_easyWins[IntLoopCurrent()], "48lXKHbNrdYsG8ov");
            BankValueSetFromString(BankLastCreated(), "Wins", "Easy", gv_easyWins[IntLoopCurrent()]);
            BankSave(BankLastCreated());
        }
        else {
        }
        if ((gv_difficultyvariable == 0)) {
            gv_veryEasyWinsInt[IntLoopCurrent()] += 1;
            gv_veryEasyWins[IntLoopCurrent()] = IntToString(gv_veryEasyWinsInt[IntLoopCurrent()]);
            gv_veryEasyWins[IntLoopCurrent()] = lib2_gf_KryptCodeEncryptString(gv_veryEasyWins[IntLoopCurrent()], "tBf4G#CUvf_6C4tp");
            BankValueSetFromString(BankLastCreated(), "Wins", "Very Easy", gv_veryEasyWins[IntLoopCurrent()]);
            BankSave(BankLastCreated());
        }
        else {
        }
        BankOptionSet(BankLastCreated(), c_bankOptionSignature, true);
    }
    IntLoopEnd();
    TriggerExecute(gt_CurrentWinCondition, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BankSave2_Init () {
    gt_BankSave2 = TriggerCreate("gt_BankSave2_Func");
    TriggerAddEventUnitDied(gt_BankSave2, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UI set up
//--------------------------------------------------------------------------------------------------
bool gt_UIsetup_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    DialogCreate(500, 350, c_anchorTopLeft, 100, 200, true);
    PlayerGroupLoopBegin(PlayerGroupActive());
    for ( ; !PlayerGroupLoopDone() ; PlayerGroupLoopStep() ) {
        if ((gv_flag1MenuFlag[PlayerGroupLoopCurrent()] == true)) {
            libNtve_gf_CreateDialogItemCheckBox(DialogLastCreated(), 15, 15, c_anchorTopLeft, 50, 50, StringExternal("Param/Value/034C2F90"), true);
            gv_uICheckBoxes[0] = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 400, 50, c_anchorTopLeft, 100, 50, StringExternal("Param/Value/14ED64FD"), ColorWithAlpha(0,0,0,0), false, 2.0);
        }
        else {
            libNtve_gf_CreateDialogItemCheckBox(DialogLastCreated(), 15, 15, c_anchorTopLeft, 50, 50, StringExternal("Param/Value/EDA2C357"), false);
            gv_uICheckBoxes[0] = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 400, 50, c_anchorTopLeft, 100, 50, StringExternal("Param/Value/1F2CCE42"), ColorWithAlpha(0,0,0,0), false, 2.0);
        }
        if ((gv_flag2MenuFlag[PlayerGroupLoopCurrent()] == true)) {
            libNtve_gf_CreateDialogItemCheckBox(DialogLastCreated(), 15, 15, c_anchorTopLeft, 50, 100, StringExternal("Param/Value/B161FC54"), true);
            gv_uICheckBoxes[1] = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 400, 50, c_anchorTopLeft, 100, 100, StringExternal("Param/Value/B9326AFE"), ColorWithAlpha(0,0,0,0), false, 2.0);
        }
        else {
            libNtve_gf_CreateDialogItemCheckBox(DialogLastCreated(), 15, 15, c_anchorTopLeft, 50, 100, StringExternal("Param/Value/901EFFC7"), false);
            gv_uICheckBoxes[1] = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 400, 50, c_anchorTopLeft, 100, 100, StringExternal("Param/Value/D90CC223"), ColorWithAlpha(0,0,0,0), false, 2.0);
        }
        if ((gv_flag3MenuFlag[PlayerGroupLoopCurrent()] == true)) {
            libNtve_gf_CreateDialogItemCheckBox(DialogLastCreated(), 15, 15, c_anchorTopLeft, 50, 150, StringExternal("Param/Value/E5A142EE"), true);
            gv_uICheckBoxes[2] = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 400, 50, c_anchorTopLeft, 100, 150, StringExternal("Param/Value/F63A0355"), ColorWithAlpha(0,0,0,0), false, 2.0);
        }
        else {
            libNtve_gf_CreateDialogItemCheckBox(DialogLastCreated(), 15, 15, c_anchorTopLeft, 50, 150, StringExternal("Param/Value/5C082CF8"), false);
            gv_uICheckBoxes[2] = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 400, 50, c_anchorTopLeft, 100, 150, StringExternal("Param/Value/382E6DED"), ColorWithAlpha(0,0,0,0), false, 2.0);
        }
        if ((gv_flag4MenuFlag[PlayerGroupLoopCurrent()] == true)) {
            libNtve_gf_CreateDialogItemCheckBox(DialogLastCreated(), 15, 15, c_anchorTopLeft, 50, 200, StringExternal("Param/Value/08F8B557"), true);
            gv_uICheckBoxes[3] = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 400, 50, c_anchorTopLeft, 100, 200, StringExternal("Param/Value/A6215202"), ColorWithAlpha(0,0,0,0), false, 2.0);
        }
        else {
            libNtve_gf_CreateDialogItemCheckBox(DialogLastCreated(), 15, 15, c_anchorTopLeft, 50, 200, StringExternal("Param/Value/0F0EE755"), false);
            gv_uICheckBoxes[3] = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 400, 50, c_anchorTopLeft, 100, 200, StringExternal("Param/Value/8A118D0B"), ColorWithAlpha(0,0,0,0), false, 2.0);
        }
        if ((gv_flag5MenuFlag[PlayerGroupLoopCurrent()] == true)) {
            libNtve_gf_CreateDialogItemCheckBox(DialogLastCreated(), 15, 15, c_anchorTopLeft, 50, 250, StringExternal("Param/Value/7B4EB0B0"), true);
            gv_uICheckBoxes[4] = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 400, 50, c_anchorTopLeft, 100, 250, StringExternal("Param/Value/17A4BB4A"), ColorWithAlpha(0,0,0,0), false, 2.0);
        }
        else {
            libNtve_gf_CreateDialogItemCheckBox(DialogLastCreated(), 15, 15, c_anchorTopLeft, 50, 250, StringExternal("Param/Value/C0D3AA59"), false);
            gv_uICheckBoxes[4] = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 400, 50, c_anchorTopLeft, 100, 250, StringExternal("Param/Value/427F53A5"), ColorWithAlpha(0,0,0,0), false, 2.0);
        }
        if ((gv_flag6MenuFlag[PlayerGroupLoopCurrent()] == true)) {
            libNtve_gf_CreateDialogItemCheckBox(DialogLastCreated(), 15, 15, c_anchorTopLeft, 50, 300, StringExternal("Param/Value/310040A8"), true);
            gv_uICheckBoxes[5] = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 400, 50, c_anchorTopLeft, 100, 300, StringExternal("Param/Value/0E4D6D31"), ColorWithAlpha(0,0,0,0), false, 2.0);
        }
        else {
            libNtve_gf_CreateDialogItemCheckBox(DialogLastCreated(), 15, 15, c_anchorTopLeft, 50, 300, StringExternal("Param/Value/29CEA8F8"), false);
            gv_uICheckBoxes[5] = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 400, 50, c_anchorTopLeft, 100, 300, StringExternal("Param/Value/091EEB73"), ColorWithAlpha(0,0,0,0), false, 2.0);
        }
    }
    PlayerGroupLoopEnd();
    gv_menu = DialogLastCreated();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UIsetup_Init () {
    gt_UIsetup = TriggerCreate("gt_UIsetup_Func");
    TriggerAddEventMapInit(gt_UIsetup);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Player Wins Dialog Creation
//--------------------------------------------------------------------------------------------------
bool gt_PlayerWinsDialogCreation_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    DialogCreate(1400, 400, c_anchorBottomLeft, 0, 0, true);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 200, 50, c_anchorTopLeft, 50, 100, PlayerName(1), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 200, 50, c_anchorTopLeft, 50, 150, PlayerName(2), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 200, 50, c_anchorTopLeft, 50, 200, PlayerName(3), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 200, 50, c_anchorTopLeft, 50, 250, PlayerName(4), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 200, 50, c_anchorTopLeft, 50, 300, PlayerName(5), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 200, 50, c_anchorTopLeft, 50, 350, PlayerName(6), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 125, 50, c_anchorTopLeft, 225, 50, StringExternal("Param/Value/3A5836CD"), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 350, 50, StringExternal("Param/Value/3B5F1C0C"), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 450, 50, StringExternal("Param/Value/B3C6C894"), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 550, 50, StringExternal("Param/Value/8A6F32AA"), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 125, 50, c_anchorTopLeft, 625, 50, StringExternal("Param/Value/E97B52CC"), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 750, 50, StringExternal("Param/Value/DC7B35F0"), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 850, 50, StringExternal("Param/Value/EC04EFA9"), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 950, 50, StringExternal("Param/Value/175C7775"), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 1050, 50, StringExternal("Param/Value/800A6293"), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 125, 50, c_anchorTopLeft, 1125, 50, StringExternal("Param/Value/2B1E2721"), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 1250, 50, StringExternal("Param/Value/F463CCF9"), ColorWithAlpha(0,0,0,0), false, 2.0);
    if ((PlayerStatus(1) == c_playerStatusActive)) {
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 250, 100, IntToText(gv_veryEasyWinsInt[1]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 350, 100, IntToText(gv_easyWinsInt[1]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 450, 100, IntToText(gv_normalWinsInt[1]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 550, 100, IntToText(gv_hardWinsInt[1]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 650, 100, IntToText(gv_veryHardWinsInt[1]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 750, 100, IntToText(gv_zWinsInt[1]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 850, 100, IntToText(gv_z2WinsInt[1]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 950, 100, IntToText(gv_z3WinsInt[1]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 1050, 100, IntToText(gv_godlyWinsInt[1]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 1150, 100, IntToText(gv_impossibleWinsInt[1]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 1250, 100, IntToText(gv_fantasyWinsInt[1]), ColorWithAlpha(0,0,0,0), false, 2.0);
    }
    else {
    }
    if ((PlayerStatus(2) == c_playerStatusActive)) {
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 250, 150, IntToText(gv_veryEasyWinsInt[2]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 350, 150, IntToText(gv_easyWinsInt[2]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 450, 150, IntToText(gv_normalWinsInt[2]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 550, 150, IntToText(gv_hardWinsInt[2]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 650, 150, IntToText(gv_veryHardWinsInt[2]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 750, 150, IntToText(gv_zWinsInt[2]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 850, 150, IntToText(gv_z2WinsInt[2]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 950, 150, IntToText(gv_z3WinsInt[2]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 1050, 150, IntToText(gv_godlyWinsInt[2]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 1150, 150, IntToText(gv_impossibleWinsInt[2]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 1250, 150, IntToText(gv_fantasyWinsInt[2]), ColorWithAlpha(0,0,0,0), false, 2.0);
    }
    else {
    }
    if ((PlayerStatus(3) == c_playerStatusActive)) {
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 250, 200, IntToText(gv_veryEasyWinsInt[3]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 350, 200, IntToText(gv_easyWinsInt[3]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 450, 200, IntToText(gv_normalWinsInt[3]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 550, 200, IntToText(gv_hardWinsInt[3]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 650, 200, IntToText(gv_veryHardWinsInt[3]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 750, 200, IntToText(gv_zWinsInt[3]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 850, 200, IntToText(gv_z2WinsInt[3]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 950, 200, IntToText(gv_z3WinsInt[3]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 1050, 200, IntToText(gv_godlyWinsInt[3]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 1150, 200, IntToText(gv_impossibleWinsInt[3]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 1250, 200, IntToText(gv_fantasyWinsInt[3]), ColorWithAlpha(0,0,0,0), false, 2.0);
    }
    else {
    }
    if ((PlayerStatus(4) == c_playerStatusActive)) {
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 250, 250, IntToText(gv_veryEasyWinsInt[4]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 350, 250, IntToText(gv_easyWinsInt[4]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 450, 250, IntToText(gv_normalWinsInt[4]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 550, 250, IntToText(gv_hardWinsInt[4]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 650, 250, IntToText(gv_veryHardWinsInt[4]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 750, 250, IntToText(gv_zWinsInt[4]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 850, 250, IntToText(gv_z2WinsInt[4]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 950, 250, IntToText(gv_z3WinsInt[4]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 1050, 250, IntToText(gv_godlyWinsInt[4]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 1150, 250, IntToText(gv_impossibleWinsInt[4]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 1250, 250, IntToText(gv_fantasyWinsInt[4]), ColorWithAlpha(0,0,0,0), false, 2.0);
    }
    else {
    }
    if ((PlayerStatus(5) == c_playerStatusActive)) {
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 250, 300, IntToText(gv_veryEasyWinsInt[5]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 350, 300, IntToText(gv_easyWinsInt[5]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 450, 300, IntToText(gv_normalWinsInt[5]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 550, 300, IntToText(gv_hardWinsInt[5]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 650, 300, IntToText(gv_veryHardWinsInt[5]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 750, 300, IntToText(gv_zWinsInt[5]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 850, 300, IntToText(gv_z2WinsInt[5]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 950, 300, IntToText(gv_z3WinsInt[5]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 1050, 300, IntToText(gv_godlyWinsInt[5]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 1150, 300, IntToText(gv_impossibleWinsInt[5]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 1250, 300, IntToText(gv_fantasyWinsInt[5]), ColorWithAlpha(0,0,0,0), false, 2.0);
    }
    else {
    }
    if ((PlayerStatus(6) == c_playerStatusActive)) {
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 250, 350, IntToText(gv_veryEasyWinsInt[6]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 350, 350, IntToText(gv_easyWinsInt[6]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 450, 350, IntToText(gv_normalWinsInt[6]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 550, 350, IntToText(gv_hardWinsInt[6]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 650, 350, IntToText(gv_veryHardWinsInt[6]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 750, 350, IntToText(gv_zWinsInt[6]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 850, 350, IntToText(gv_z2WinsInt[6]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 950, 350, IntToText(gv_z3WinsInt[6]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 1050, 350, IntToText(gv_godlyWinsInt[6]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 1150, 350, IntToText(gv_impossibleWinsInt[6]), ColorWithAlpha(0,0,0,0), false, 2.0);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 50, c_anchorTopLeft, 1250, 350, IntToText(gv_fantasyWinsInt[6]), ColorWithAlpha(0,0,0,0), false, 2.0);
    }
    else {
    }
    gv_playersWins = DialogLastCreated();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_PlayerWinsDialogCreation_Init () {
    gt_PlayerWinsDialogCreation = TriggerCreate("gt_PlayerWinsDialogCreation_Func");
    TriggerAddEventTimeElapsed(gt_PlayerWinsDialogCreation, 10.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Show/hide Menu
//--------------------------------------------------------------------------------------------------
bool gt_ShowhideMenu_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    if ((DialogIsVisible(gv_menu, EventPlayer()) == true)) {
        DialogSetVisible(gv_menu, PlayerGroupSingle(EventPlayer()), false);
    }
    else {
        DialogSetVisible(gv_menu, PlayerGroupSingle(EventPlayer()), true);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ShowhideMenu_Init () {
    gt_ShowhideMenu = TriggerCreate("gt_ShowhideMenu_Func");
    TriggerAddEventChatMessage(gt_ShowhideMenu, c_playerAny, "-menu", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Enable/Disable Media controls
//--------------------------------------------------------------------------------------------------
bool gt_EnableDisableMediacontrols_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == gv_uICheckBoxes[0]))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    BankLoad("DBZAllSagas", EventPlayer());
    if ((DialogIsVisible(gv_volume[0], EventPlayer()) == true)) {
        DialogSetVisible(gv_volume[0], PlayerGroupSingle(EventPlayer()), false);
        DialogSetVisible(gv_volume[1], PlayerGroupSingle(EventPlayer()), false);
        DialogSetVisible(gv_playPauseMusic, PlayerGroupSingle(EventPlayer()), false);
        DialogSetVisible(gv_muteMusicDialog, PlayerGroupSingle(EventPlayer()), false);
        gv_flag1MenuFlag[EventPlayer()] = false;
        BankValueSetFromFlag(BankLastCreated(), "Menu", "Flag 1", gv_flag1MenuFlag[EventPlayer()]);
        BankSave(BankLastCreated());
    }
    else {
        DialogSetVisible(gv_volume[0], PlayerGroupSingle(EventPlayer()), true);
        DialogSetVisible(gv_volume[1], PlayerGroupSingle(EventPlayer()), true);
        DialogSetVisible(gv_playPauseMusic, PlayerGroupSingle(EventPlayer()), true);
        DialogSetVisible(gv_muteMusicDialog, PlayerGroupSingle(EventPlayer()), true);
        gv_flag1MenuFlag[EventPlayer()] = true;
        BankValueSetFromFlag(BankLastCreated(), "Menu", "Flag 1", gv_flag1MenuFlag[EventPlayer()]);
        BankSave(BankLastCreated());
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_EnableDisableMediacontrols_Init () {
    gt_EnableDisableMediacontrols = TriggerCreate("gt_EnableDisableMediacontrols_Func");
    TriggerAddEventDialogControl(gt_EnableDisableMediacontrols, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeChecked);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Enable/Disable Help Text Tags
//--------------------------------------------------------------------------------------------------
bool gt_EnableDisableHelpTextTags_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_int;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == gv_uICheckBoxes[1]))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    BankLoad("DBZAllSagas", EventPlayer());
    if ((TextTagVisible(gv_helpTextTags[0], EventPlayer()) == true)) {
        TextTagShow(gv_helpTextTags[0], PlayerGroupSingle(EventPlayer()), false);
        TextTagShow(gv_helpTextTags[1], PlayerGroupSingle(EventPlayer()), false);
        TextTagShow(gv_helpTextTags[2], PlayerGroupSingle(EventPlayer()), false);
        TextTagShow(gv_helpTextTags[3], PlayerGroupSingle(EventPlayer()), false);
        TextTagShow(gv_helpTextTags[4], PlayerGroupSingle(EventPlayer()), false);
        TextTagShow(gv_helpTextTags[5], PlayerGroupSingle(EventPlayer()), false);
        TextTagShow(gv_helpTextTags[6], PlayerGroupSingle(EventPlayer()), false);
        TextTagShow(gv_helpTextTags[7], PlayerGroupSingle(EventPlayer()), false);
        gv_flag2MenuFlag[EventPlayer()] = false;
        BankValueSetFromFlag(BankLastCreated(), "Menu", "Flag 2", gv_flag2MenuFlag[EventPlayer()]);
        BankSave(BankLastCreated());
    }
    else {
        TextTagShow(gv_helpTextTags[0], PlayerGroupSingle(EventPlayer()), true);
        TextTagShow(gv_helpTextTags[1], PlayerGroupSingle(EventPlayer()), true);
        TextTagShow(gv_helpTextTags[2], PlayerGroupSingle(EventPlayer()), true);
        TextTagShow(gv_helpTextTags[3], PlayerGroupSingle(EventPlayer()), true);
        TextTagShow(gv_helpTextTags[4], PlayerGroupSingle(EventPlayer()), true);
        TextTagShow(gv_helpTextTags[5], PlayerGroupSingle(EventPlayer()), true);
        TextTagShow(gv_helpTextTags[6], PlayerGroupSingle(EventPlayer()), true);
        TextTagShow(gv_helpTextTags[7], PlayerGroupSingle(EventPlayer()), true);
        gv_flag2MenuFlag[EventPlayer()] = true;
        BankValueSetFromFlag(BankLastCreated(), "Menu", "Flag 2", gv_flag2MenuFlag[EventPlayer()]);
        BankSave(BankLastCreated());
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_EnableDisableHelpTextTags_Init () {
    gt_EnableDisableHelpTextTags = TriggerCreate("gt_EnableDisableHelpTextTags_Func");
    TriggerAddEventDialogControl(gt_EnableDisableHelpTextTags, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeChecked);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Enable/Disable Player Text Tags
//--------------------------------------------------------------------------------------------------
bool gt_EnableDisablePlayerTextTags_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_int;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == gv_uICheckBoxes[2]))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    BankLoad("DBZAllSagas", EventPlayer());
    if ((TextTagVisible(gv_playerNames[0], EventPlayer()) == true)) {
        TextTagShow(gv_playerNames[0], PlayerGroupSingle(EventPlayer()), false);
        TextTagShow(gv_playerNames[1], PlayerGroupSingle(EventPlayer()), false);
        TextTagShow(gv_playerNames[2], PlayerGroupSingle(EventPlayer()), false);
        TextTagShow(gv_playerNames[3], PlayerGroupSingle(EventPlayer()), false);
        TextTagShow(gv_playerNames[4], PlayerGroupSingle(EventPlayer()), false);
        TextTagShow(gv_playerNames[5], PlayerGroupSingle(EventPlayer()), false);
        gv_flag3MenuFlag[EventPlayer()] = false;
        BankValueSetFromFlag(BankLastCreated(), "Menu", "Flag 3", gv_flag3MenuFlag[EventPlayer()]);
        BankSave(BankLastCreated());
    }
    else {
        TextTagShow(gv_playerNames[0], PlayerGroupSingle(EventPlayer()), true);
        TextTagShow(gv_playerNames[1], PlayerGroupSingle(EventPlayer()), true);
        TextTagShow(gv_playerNames[2], PlayerGroupSingle(EventPlayer()), true);
        TextTagShow(gv_playerNames[3], PlayerGroupSingle(EventPlayer()), true);
        TextTagShow(gv_playerNames[4], PlayerGroupSingle(EventPlayer()), true);
        TextTagShow(gv_playerNames[5], PlayerGroupSingle(EventPlayer()), true);
        gv_flag3MenuFlag[EventPlayer()] = true;
        BankValueSetFromFlag(BankLastCreated(), "Menu", "Flag 3", gv_flag3MenuFlag[EventPlayer()]);
        BankSave(BankLastCreated());
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_EnableDisablePlayerTextTags_Init () {
    gt_EnableDisablePlayerTextTags = TriggerCreate("gt_EnableDisablePlayerTextTags_Func");
    TriggerAddEventDialogControl(gt_EnableDisablePlayerTextTags, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeChecked);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Enable/Disable Leaderboard
//--------------------------------------------------------------------------------------------------
bool gt_EnableDisableLeaderboard_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == gv_uICheckBoxes[3]))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    BankLoad("DBZAllSagas", EventPlayer());
    if ((libNtve_gf_DialogItemIsChecked(EventDialogControl(), EventPlayer()) == false)) {
        BoardMinimizeSetState(gv_powerLevel, PlayerGroupSingle(EventPlayer()), true);
        gv_flag4MenuFlag[EventPlayer()] = false;
        BankValueSetFromFlag(BankLastCreated(), "Menu", "Flag 4", gv_flag4MenuFlag[EventPlayer()]);
        BankSave(BankLastCreated());
    }
    else {
        BoardMinimizeSetState(gv_powerLevel, PlayerGroupSingle(EventPlayer()), false);
        gv_flag4MenuFlag[EventPlayer()] = true;
        BankValueSetFromFlag(BankLastCreated(), "Menu", "Flag 4", gv_flag4MenuFlag[EventPlayer()]);
        BankSave(BankLastCreated());
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_EnableDisableLeaderboard_Init () {
    gt_EnableDisableLeaderboard = TriggerCreate("gt_EnableDisableLeaderboard_Func");
    TriggerAddEventDialogControl(gt_EnableDisableLeaderboard, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeChecked);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Enable/Disable Show Difficulty
//--------------------------------------------------------------------------------------------------
bool gt_EnableDisableShowDifficulty_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == gv_uICheckBoxes[4]))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    BankLoad("DBZAllSagas", EventPlayer());
    if ((libNtve_gf_DialogItemIsChecked(EventDialogControl(), EventPlayer()) == false)) {
        gv_flag5MenuFlag[EventPlayer()] = false;
        BankValueSetFromFlag(BankLastCreated(), "Menu", "Flag 5", gv_flag5MenuFlag[EventPlayer()]);
        BankSave(BankLastCreated());
    }
    else {
        gv_flag5MenuFlag[EventPlayer()] = true;
        BankValueSetFromFlag(BankLastCreated(), "Menu", "Flag 5", gv_flag5MenuFlag[EventPlayer()]);
        BankSave(BankLastCreated());
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_EnableDisableShowDifficulty_Init () {
    gt_EnableDisableShowDifficulty = TriggerCreate("gt_EnableDisableShowDifficulty_Func");
    TriggerAddEventDialogControl(gt_EnableDisableShowDifficulty, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeChecked);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Enable/Disable Play music on start
//--------------------------------------------------------------------------------------------------
bool gt_EnableDisablePlaymusiconstart_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == gv_uICheckBoxes[5]))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    BankLoad("DBZAllSagas", EventPlayer());
    if ((libNtve_gf_DialogItemIsChecked(EventDialogControl(), EventPlayer()) == false)) {
        gv_flag6MenuFlag[EventPlayer()] = false;
        BankValueSetFromFlag(BankLastCreated(), "Menu", "Flag 6", gv_flag6MenuFlag[EventPlayer()]);
        BankSave(BankLastCreated());
    }
    else {
        gv_flag6MenuFlag[EventPlayer()] = true;
        BankValueSetFromFlag(BankLastCreated(), "Menu", "Flag 6", gv_flag6MenuFlag[EventPlayer()]);
        BankSave(BankLastCreated());
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_EnableDisablePlaymusiconstart_Init () {
    gt_EnableDisablePlaymusiconstart = TriggerCreate("gt_EnableDisablePlaymusiconstart_Func");
    TriggerAddEventDialogControl(gt_EnableDisablePlaymusiconstart, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeChecked);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Show wins when difficulty is clicked
//--------------------------------------------------------------------------------------------------
bool gt_Showwinswhendifficultyisclicked_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == gv_displayDifficultybutton))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if (((libNtve_gf_DialogItemIsChecked(gv_uICheckBoxes[4], EventPlayer()) == true) && (DialogIsVisible(gv_playersWins, EventPlayer()) == false))) {
        DialogSetVisible(gv_playersWins, PlayerGroupSingle(EventPlayer()), true);
    }
    else {
        if ((DialogIsVisible(gv_playersWins, EventPlayer()) == true)) {
            DialogSetVisible(gv_playersWins, PlayerGroupSingle(EventPlayer()), false);
        }
        else {
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Showwinswhendifficultyisclicked_Init () {
    gt_Showwinswhendifficultyisclicked = TriggerCreate("gt_Showwinswhendifficultyisclicked_Func");
    TriggerAddEventDialogControl(gt_Showwinswhendifficultyisclicked, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Opening Text Tags
//--------------------------------------------------------------------------------------------------
bool gt_OpeningTextTags_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    PlayerGroupLoopBegin(PlayerGroupActive());
    for ( ; !PlayerGroupLoopDone() ; PlayerGroupLoopStep() ) {
        if ((gv_flag2MenuFlag[PlayerGroupLoopCurrent()] == true)) {
            TextTagCreate(StringExternal("Param/Value/08BE4585"), 24, UnitGetPosition(UnitFromId(205)), 5.0, true, false, PlayerGroupSingle(PlayerGroupLoopCurrent()));
            gv_helpTextTags[0] = TextTagLastCreated();
            TextTagCreate(StringExternal("Param/Value/9C4AB447"), 24, UnitGetPosition(UnitFromId(204)), 5.0, true, false, PlayerGroupSingle(PlayerGroupLoopCurrent()));
            gv_helpTextTags[1] = TextTagLastCreated();
            TextTagCreate(StringExternal("Param/Value/129EC8D7"), 24, UnitGetPosition(UnitFromId(24)), 5.0, true, false, PlayerGroupSingle(PlayerGroupLoopCurrent()));
            gv_helpTextTags[2] = TextTagLastCreated();
            TextTagCreate(StringExternal("Param/Value/519E3CA5"), 24, UnitGetPosition(UnitFromId(206)), 5.0, true, false, PlayerGroupSingle(PlayerGroupLoopCurrent()));
            gv_helpTextTags[3] = TextTagLastCreated();
            TextTagCreate(StringExternal("Param/Value/9516CD58"), 24, UnitGetPosition(UnitFromId(207)), 5.0, true, false, PlayerGroupSingle(PlayerGroupLoopCurrent()));
            gv_helpTextTags[4] = TextTagLastCreated();
            TextTagCreate(StringExternal("Param/Value/BAF778EA"), 24, UnitGetPosition(UnitFromId(216)), 1.0, true, false, PlayerGroupSingle(PlayerGroupLoopCurrent()));
            gv_helpTextTags[5] = TextTagLastCreated();
            TextTagCreate(StringExternal("Param/Value/84EB5270"), 24, UnitGetPosition(UnitFromId(22)), 1.0, true, false, PlayerGroupSingle(PlayerGroupLoopCurrent()));
            gv_helpTextTags[6] = TextTagLastCreated();
            TextTagCreate(StringExternal("Param/Value/FD7D1D90"), 24, UnitGetPosition(UnitFromId(649)), 1.0, true, false, PlayerGroupSingle(PlayerGroupLoopCurrent()));
            gv_helpTextTags[7] = TextTagLastCreated();
        }
        else {
            TextTagCreate(StringExternal("Param/Value/AA9666F4"), 24, UnitGetPosition(UnitFromId(205)), 5.0, true, false, PlayerGroupSingle(PlayerGroupLoopCurrent()));
            gv_helpTextTags[0] = TextTagLastCreated();
            TextTagShow(TextTagLastCreated(), PlayerGroupSingle(PlayerGroupLoopCurrent()), false);
            TextTagCreate(StringExternal("Param/Value/586313DF"), 24, UnitGetPosition(UnitFromId(204)), 5.0, true, false, PlayerGroupSingle(PlayerGroupLoopCurrent()));
            gv_helpTextTags[1] = TextTagLastCreated();
            TextTagShow(TextTagLastCreated(), PlayerGroupSingle(PlayerGroupLoopCurrent()), false);
            TextTagCreate(StringExternal("Param/Value/6A59B816"), 24, UnitGetPosition(UnitFromId(24)), 5.0, true, false, PlayerGroupSingle(PlayerGroupLoopCurrent()));
            gv_helpTextTags[2] = TextTagLastCreated();
            TextTagShow(TextTagLastCreated(), PlayerGroupSingle(PlayerGroupLoopCurrent()), false);
            TextTagCreate(StringExternal("Param/Value/DACA31DC"), 24, UnitGetPosition(UnitFromId(206)), 5.0, true, false, PlayerGroupSingle(PlayerGroupLoopCurrent()));
            gv_helpTextTags[3] = TextTagLastCreated();
            TextTagShow(TextTagLastCreated(), PlayerGroupSingle(PlayerGroupLoopCurrent()), false);
            TextTagCreate(StringExternal("Param/Value/2A198D4A"), 24, UnitGetPosition(UnitFromId(207)), 5.0, true, false, PlayerGroupSingle(PlayerGroupLoopCurrent()));
            gv_helpTextTags[4] = TextTagLastCreated();
            TextTagShow(TextTagLastCreated(), PlayerGroupSingle(PlayerGroupLoopCurrent()), false);
            TextTagCreate(StringExternal("Param/Value/A785A276"), 24, UnitGetPosition(UnitFromId(216)), 1.0, true, false, PlayerGroupSingle(PlayerGroupLoopCurrent()));
            gv_helpTextTags[5] = TextTagLastCreated();
            TextTagShow(TextTagLastCreated(), PlayerGroupSingle(PlayerGroupLoopCurrent()), false);
            TextTagCreate(StringExternal("Param/Value/340DE439"), 24, UnitGetPosition(UnitFromId(22)), 1.0, true, false, PlayerGroupSingle(PlayerGroupLoopCurrent()));
            gv_helpTextTags[6] = TextTagLastCreated();
            TextTagShow(TextTagLastCreated(), PlayerGroupSingle(PlayerGroupLoopCurrent()), false);
            TextTagCreate(StringExternal("Param/Value/6F991F9D"), 24, UnitGetPosition(UnitFromId(649)), 1.0, true, false, PlayerGroupSingle(PlayerGroupLoopCurrent()));
            gv_helpTextTags[7] = TextTagLastCreated();
            TextTagShow(TextTagLastCreated(), PlayerGroupSingle(PlayerGroupLoopCurrent()), false);
        }
    }
    PlayerGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_OpeningTextTags_Init () {
    gt_OpeningTextTags = TriggerCreate("gt_OpeningTextTags_Func");
    TriggerAddEventTimeElapsed(gt_OpeningTextTags, 0.5, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Player Text Tags
//--------------------------------------------------------------------------------------------------
bool gt_PlayerTextTags_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    PlayerGroupLoopBegin(PlayerGroupActive());
    for ( ; !PlayerGroupLoopDone() ; PlayerGroupLoopStep() ) {
        if ((gv_flag3MenuFlag[PlayerGroupLoopCurrent()] == true)) {
            if ((UnitGetOwner(UnitFromId(229)) != 0)) {
                TextTagCreate((((StringExternal("Param/Value/1BD318CC") + PlayerName(UnitGetOwner(UnitFromId(229)))) + StringExternal("Param/Value/5A3AFF21")) + StringExternal("Param/Value/0C4BAB6F")), 24, UnitGetPosition(EventUnit()), -1.0, true, false, PlayerGroupSingle(PlayerGroupLoopCurrent()));
                TextTagSetColor(TextTagLastCreated(), c_textTagColorText, Color(100.00, 0.00, 0.00));
                TextTagAttachToUnit(TextTagLastCreated(), UnitFromId(104), -1.0);
                gv_playerNames[0] = TextTagLastCreated();
            }
            else {
            }
            if ((UnitGetOwner(UnitFromId(230)) != 0)) {
                TextTagCreate((((StringExternal("Param/Value/49BC174F") + PlayerName(UnitGetOwner(UnitFromId(230)))) + StringExternal("Param/Value/ACBD4D87")) + StringExternal("Param/Value/476CD9F6")), 24, UnitGetPosition(EventUnit()), -1.0, true, false, PlayerGroupSingle(PlayerGroupLoopCurrent()));
                TextTagSetColor(TextTagLastCreated(), c_textTagColorText, Color(0.00, 0.00, 100.00));
                TextTagAttachToUnit(TextTagLastCreated(), UnitFromId(105), -1.0);
                gv_playerNames[1] = TextTagLastCreated();
            }
            else {
            }
            if ((UnitGetOwner(UnitFromId(231)) != 0)) {
                TextTagCreate((((StringExternal("Param/Value/E7558B46") + PlayerName(UnitGetOwner(UnitFromId(231)))) + StringExternal("Param/Value/3FAD31C6")) + StringExternal("Param/Value/3EE1F89D")), 24, UnitGetPosition(EventUnit()), -1.0, true, false, PlayerGroupSingle(PlayerGroupLoopCurrent()));
                TextTagSetColor(TextTagLastCreated(), c_textTagColorText, Color(0.00, 25.10, 0.00));
                TextTagAttachToUnit(TextTagLastCreated(), UnitFromId(106), -1.0);
                gv_playerNames[2] = TextTagLastCreated();
            }
            else {
            }
            if ((UnitGetOwner(UnitFromId(232)) != 0)) {
                TextTagCreate((((StringExternal("Param/Value/0F971770") + PlayerName(UnitGetOwner(UnitFromId(232)))) + StringExternal("Param/Value/147AC2F8")) + StringExternal("Param/Value/CCF6CE96")), 24, UnitGetPosition(EventUnit()), -1.0, true, false, PlayerGroupSingle(PlayerGroupLoopCurrent()));
                TextTagSetColor(TextTagLastCreated(), c_textTagColorText, Color(25.10, 0.00, 50.20));
                TextTagAttachToUnit(TextTagLastCreated(), UnitFromId(107), -1.0);
                gv_playerNames[3] = TextTagLastCreated();
            }
            else {
            }
            if ((UnitGetOwner(UnitFromId(233)) != 0)) {
                TextTagCreate((((StringExternal("Param/Value/7C624CA9") + PlayerName(UnitGetOwner(UnitFromId(233)))) + StringExternal("Param/Value/E053958C")) + StringExternal("Param/Value/59524F41")), 24, UnitGetPosition(EventUnit()), -1.0, true, false, PlayerGroupSingle(PlayerGroupLoopCurrent()));
                TextTagSetColor(TextTagLastCreated(), c_textTagColorText, Color(100.00, 50.20, 0.00));
                TextTagAttachToUnit(TextTagLastCreated(), UnitFromId(108), -1.0);
                gv_playerNames[4] = TextTagLastCreated();
            }
            else {
            }
            if ((UnitGetOwner(UnitFromId(234)) != 0)) {
                TextTagCreate((((StringExternal("Param/Value/B7AEC55B") + PlayerName(UnitGetOwner(UnitFromId(234)))) + StringExternal("Param/Value/EF36010F")) + StringExternal("Param/Value/381455A0")), 24, UnitGetPosition(EventUnit()), -1.0, true, false, PlayerGroupSingle(PlayerGroupLoopCurrent()));
                TextTagSetColor(TextTagLastCreated(), c_textTagColorText, Color(50.20, 25.10, 0.00));
                TextTagAttachToUnit(TextTagLastCreated(), UnitFromId(109), -1.0);
                gv_playerNames[5] = TextTagLastCreated();
            }
            else {
            }
        }
        else {
            if ((UnitGetOwner(UnitFromId(229)) != 0)) {
                TextTagCreate((((StringExternal("Param/Value/6465A600") + PlayerName(UnitGetOwner(UnitFromId(229)))) + StringExternal("Param/Value/AF8509E2")) + StringExternal("Param/Value/D31FBF24")), 24, UnitGetPosition(EventUnit()), -1.0, true, false, PlayerGroupSingle(PlayerGroupLoopCurrent()));
                TextTagSetColor(TextTagLastCreated(), c_textTagColorText, Color(100.00, 0.00, 0.00));
                TextTagAttachToUnit(TextTagLastCreated(), UnitFromId(104), -1.0);
                gv_playerNames[0] = TextTagLastCreated();
                TextTagShow(TextTagLastCreated(), PlayerGroupSingle(PlayerGroupLoopCurrent()), false);
            }
            else {
            }
            if ((UnitGetOwner(UnitFromId(230)) != 0)) {
                TextTagCreate((((StringExternal("Param/Value/6FED1C0D") + PlayerName(UnitGetOwner(UnitFromId(230)))) + StringExternal("Param/Value/A5AB1C42")) + StringExternal("Param/Value/81F8D801")), 24, UnitGetPosition(EventUnit()), -1.0, true, false, PlayerGroupSingle(PlayerGroupLoopCurrent()));
                TextTagSetColor(TextTagLastCreated(), c_textTagColorText, Color(0.00, 0.00, 100.00));
                TextTagAttachToUnit(TextTagLastCreated(), UnitFromId(105), -1.0);
                gv_playerNames[1] = TextTagLastCreated();
                TextTagShow(TextTagLastCreated(), PlayerGroupSingle(PlayerGroupLoopCurrent()), false);
            }
            else {
            }
            if ((UnitGetOwner(UnitFromId(231)) != 0)) {
                TextTagCreate((((StringExternal("Param/Value/BFD77A48") + PlayerName(UnitGetOwner(UnitFromId(231)))) + StringExternal("Param/Value/5E1AC925")) + StringExternal("Param/Value/CF591C27")), 24, UnitGetPosition(EventUnit()), -1.0, true, false, PlayerGroupSingle(PlayerGroupLoopCurrent()));
                TextTagSetColor(TextTagLastCreated(), c_textTagColorText, Color(0.00, 25.10, 0.00));
                TextTagAttachToUnit(TextTagLastCreated(), UnitFromId(106), -1.0);
                gv_playerNames[2] = TextTagLastCreated();
                TextTagShow(TextTagLastCreated(), PlayerGroupSingle(PlayerGroupLoopCurrent()), false);
            }
            else {
            }
            if ((UnitGetOwner(UnitFromId(232)) != 0)) {
                TextTagCreate((((StringExternal("Param/Value/3BA1F88D") + PlayerName(UnitGetOwner(UnitFromId(232)))) + StringExternal("Param/Value/AF2FC97B")) + StringExternal("Param/Value/1B6607EE")), 24, UnitGetPosition(EventUnit()), -1.0, true, false, PlayerGroupSingle(PlayerGroupLoopCurrent()));
                TextTagSetColor(TextTagLastCreated(), c_textTagColorText, Color(25.10, 0.00, 50.20));
                TextTagAttachToUnit(TextTagLastCreated(), UnitFromId(107), -1.0);
                gv_playerNames[3] = TextTagLastCreated();
                TextTagShow(TextTagLastCreated(), PlayerGroupSingle(PlayerGroupLoopCurrent()), false);
            }
            else {
            }
            if ((UnitGetOwner(UnitFromId(233)) != 0)) {
                TextTagCreate((((StringExternal("Param/Value/A8FC7B9F") + PlayerName(UnitGetOwner(UnitFromId(233)))) + StringExternal("Param/Value/02321182")) + StringExternal("Param/Value/EC2E96DE")), 24, UnitGetPosition(EventUnit()), -1.0, true, false, PlayerGroupSingle(PlayerGroupLoopCurrent()));
                TextTagSetColor(TextTagLastCreated(), c_textTagColorText, Color(100.00, 50.20, 0.00));
                TextTagAttachToUnit(TextTagLastCreated(), UnitFromId(108), -1.0);
                gv_playerNames[4] = TextTagLastCreated();
                TextTagShow(TextTagLastCreated(), PlayerGroupSingle(PlayerGroupLoopCurrent()), false);
            }
            else {
            }
            if ((UnitGetOwner(UnitFromId(234)) != 0)) {
                TextTagCreate((((StringExternal("Param/Value/AF079048") + PlayerName(UnitGetOwner(UnitFromId(234)))) + StringExternal("Param/Value/F50DFC96")) + StringExternal("Param/Value/C0810329")), 24, UnitGetPosition(EventUnit()), -1.0, true, false, PlayerGroupSingle(PlayerGroupLoopCurrent()));
                TextTagSetColor(TextTagLastCreated(), c_textTagColorText, Color(50.20, 25.10, 0.00));
                TextTagAttachToUnit(TextTagLastCreated(), UnitFromId(109), -1.0);
                gv_playerNames[5] = TextTagLastCreated();
                TextTagShow(TextTagLastCreated(), PlayerGroupSingle(PlayerGroupLoopCurrent()), false);
            }
            else {
            }
        }
    }
    PlayerGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_PlayerTextTags_Init () {
    gt_PlayerTextTags = TriggerCreate("gt_PlayerTextTags_Func");
    TriggerAddEventTimeElapsed(gt_PlayerTextTags, 0.5, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Click on Basic
//--------------------------------------------------------------------------------------------------
bool gt_ClickonBasic_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventUnit() == UnitFromId(205)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaDirective, StringExternal("Param/Value/E8DD42AB"));
    Wait(15.0, c_timeGame);
    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaDirective, StringExternal("Param/Value/BDFEBCA0"));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ClickonBasic_Init () {
    gt_ClickonBasic = TriggerCreate("gt_ClickonBasic_Func");
    TriggerAddEventUnitSelected(gt_ClickonBasic, null, c_playerAny, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Click on Intermediate
//--------------------------------------------------------------------------------------------------
bool gt_ClickonIntermediate_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventUnit() == UnitFromId(204)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaDirective, StringExternal("Param/Value/ED679EE8"));
    Wait(15.0, c_timeGame);
    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaDirective, StringExternal("Param/Value/8B132579"));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ClickonIntermediate_Init () {
    gt_ClickonIntermediate = TriggerCreate("gt_ClickonIntermediate_Func");
    TriggerAddEventUnitSelected(gt_ClickonIntermediate, null, c_playerAny, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Click on Advanced
//--------------------------------------------------------------------------------------------------
bool gt_ClickonAdvanced_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventUnit() == UnitFromId(24)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaDirective, StringExternal("Param/Value/3ADF2078"));
    Wait(15.0, c_timeGame);
    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaDirective, StringExternal("Param/Value/8BB5CB10"));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ClickonAdvanced_Init () {
    gt_ClickonAdvanced = TriggerCreate("gt_ClickonAdvanced_Func");
    TriggerAddEventUnitSelected(gt_ClickonAdvanced, null, c_playerAny, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Click on Fusion
//--------------------------------------------------------------------------------------------------
bool gt_ClickonFusion_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventUnit() == UnitFromId(206)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaDirective, StringExternal("Param/Value/B6100BAD"));
    Wait(15.0, c_timeGame);
    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaDirective, StringExternal("Param/Value/4DFAD36E"));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ClickonFusion_Init () {
    gt_ClickonFusion = TriggerCreate("gt_ClickonFusion_Func");
    TriggerAddEventUnitSelected(gt_ClickonFusion, null, c_playerAny, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Click on Weight
//--------------------------------------------------------------------------------------------------
bool gt_ClickonWeight_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventUnit() == UnitFromId(207)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaDirective, StringExternal("Param/Value/9C5D8821"));
    Wait(15.0, c_timeGame);
    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaDirective, StringExternal("Param/Value/8AE6677C"));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ClickonWeight_Init () {
    gt_ClickonWeight = TriggerCreate("gt_ClickonWeight_Func");
    TriggerAddEventUnitSelected(gt_ClickonWeight, null, c_playerAny, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Click on Enter Saga
//--------------------------------------------------------------------------------------------------
bool gt_ClickonEnterSaga_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventUnit() == UnitFromId(216)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaDirective, StringExternal("Param/Value/E24EC589"));
    Wait(15.0, c_timeGame);
    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaDirective, StringExternal("Param/Value/7DC90250"));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ClickonEnterSaga_Init () {
    gt_ClickonEnterSaga = TriggerCreate("gt_ClickonEnterSaga_Func");
    TriggerAddEventUnitSelected(gt_ClickonEnterSaga, null, c_playerAny, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Click on HTC
//--------------------------------------------------------------------------------------------------
bool gt_ClickonHTC_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventUnit() == UnitFromId(22)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaDirective, StringExternal("Param/Value/9B6B1066"));
    Wait(15.0, c_timeGame);
    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaDirective, StringExternal("Param/Value/52DFCE1F"));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ClickonHTC_Init () {
    gt_ClickonHTC = TriggerCreate("gt_ClickonHTC_Func");
    TriggerAddEventUnitSelected(gt_ClickonHTC, null, c_playerAny, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Click on Mystic
//--------------------------------------------------------------------------------------------------
bool gt_ClickonMystic_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventUnit() == UnitFromId(649)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaDirective, StringExternal("Param/Value/024B4AF4"));
    Wait(15.0, c_timeGame);
    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaDirective, StringExternal("Param/Value/B4D5E6B2"));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ClickonMystic_Init () {
    gt_ClickonMystic = TriggerCreate("gt_ClickonMystic_Func");
    TriggerAddEventUnitSelected(gt_ClickonMystic, null, c_playerAny, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Initiate Vote
//--------------------------------------------------------------------------------------------------
bool gt_InitiateVote_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    TimerStart(gv_voteTimer, 25.0, false, c_timeReal);
    gv_voteTimer = TimerLastStarted();
    TimerWindowCreate(TimerLastStarted(), StringExternal("Param/Value/70485E9F"), true, false);
    gv_voteTimerWindow = TimerWindowLastCreated();
    TimerWindowShow(TimerWindowLastCreated(), PlayerGroupAll(), true);
    DialogCreate(700, 350, c_anchorCenter, 0, 0, true);
    gv_mapVoteDialog = DialogLastCreated();
    DialogSetTitle(DialogLastCreated(), StringExternal("Param/Value/6978A35D"));
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 150, 50, c_anchorTopLeft, 75, 115, StringExternal("Param/Value/AD94BF2B"), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), StringExternal("Param/Value/A5A7DF8F"), PlayerGroupAll());
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 150, 50, c_anchorTopLeft, 225, 115, StringExternal("Param/Value/AB545366"), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), StringExternal("Param/Value/F2C07D2B"), PlayerGroupAll());
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 150, 50, c_anchorTopLeft, 375, 115, StringExternal("Param/Value/DA73C84F"), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), StringExternal("Param/Value/5E4F1FF4"), PlayerGroupAll());
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 150, 50, c_anchorTopLeft, 525, 115, StringExternal("Param/Value/AD42FFB0"), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), StringExternal("Param/Value/0C120AE1"), PlayerGroupAll());
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 150, 50, c_anchorTopLeft, 50, 150, StringExternal("Param/Value/1D2AAD8B"), StringExternal("Param/Value/B1D482EB"), "");
    gv_mapVoteDialogItems[0] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 150, 50, c_anchorTopLeft, 50, 200, StringExternal("Param/Value/42E3F7BD"), StringExternal("Param/Value/4E0D3EF0"), "");
    gv_mapVoteDialogItems[1] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 150, 50, c_anchorTopLeft, 200, 150, StringExternal("Param/Value/1A42CCF9"), StringExternal("Param/Value/271EE049"), "");
    gv_mapVoteDialogItems[2] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 150, 50, c_anchorTopLeft, 200, 200, StringExternal("Param/Value/E71A3AB8"), StringExternal("Param/Value/9804A6D1"), "");
    gv_mapVoteDialogItems[3] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 150, 50, c_anchorTopLeft, 200, 250, StringExternal("Param/Value/CE2582F6"), StringExternal("Param/Value/B0AAD0DB"), "");
    gv_mapVoteDialogItems[4] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 150, 50, c_anchorTopLeft, 350, 150, StringExternal("Param/Value/576034ED"), StringExternal("Param/Value/ADE343D0"), "");
    gv_mapVoteDialogItems[5] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 150, 50, c_anchorTopLeft, 350, 200, StringExternal("Param/Value/CCF68B6A"), StringExternal("Param/Value/6792F096"), "");
    gv_mapVoteDialogItems[6] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 150, 50, c_anchorTopLeft, 350, 250, StringExternal("Param/Value/B4767480"), StringExternal("Param/Value/CD52356F"), "");
    gv_mapVoteDialogItems[7] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 150, 50, c_anchorTopLeft, 500, 150, StringExternal("Param/Value/49E68FE0"), StringExternal("Param/Value/7BD5B4B7"), "");
    gv_mapVoteDialogItems[8] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 150, 50, c_anchorTopLeft, 500, 200, StringExternal("Param/Value/17DC4974"), StringExternal("Param/Value/3DCCBE78"), "");
    gv_mapVoteDialogItems[9] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 150, 50, c_anchorTopLeft, 500, 250, StringExternal("Param/Value/117EEFD8"), StringExternal("Param/Value/407A3CD5"), "");
    gv_mapVoteDialogItems[10] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    DialogSetVisible(DialogLastCreated(), PlayerGroupAll(), true);
    PlayerGroupLoopBegin(PlayerGroupActive());
    for ( ; !PlayerGroupLoopDone() ; PlayerGroupLoopStep() ) {
        while ((DialogControlIsVisible(gv_mapVoteDialogItems[1], PlayerGroupLoopCurrent()) == false) && (gv_veryEasyWinsInt[PlayerGroupLoopCurrent()] >= 1)) {
            DialogControlSetVisible(gv_mapVoteDialogItems[1], PlayerGroupSingle(PlayerGroupLoopCurrent()), true);
        }
        while ((DialogControlIsVisible(gv_mapVoteDialogItems[2], PlayerGroupLoopCurrent()) == false) && (gv_easyWinsInt[PlayerGroupLoopCurrent()] >= 1)) {
            DialogControlSetVisible(gv_mapVoteDialogItems[2], PlayerGroupSingle(PlayerGroupLoopCurrent()), true);
        }
        while ((DialogControlIsVisible(gv_mapVoteDialogItems[3], PlayerGroupLoopCurrent()) == false) && (gv_normalWinsInt[PlayerGroupLoopCurrent()] >= 1)) {
            DialogControlSetVisible(gv_mapVoteDialogItems[3], PlayerGroupSingle(PlayerGroupLoopCurrent()), true);
        }
        while ((DialogControlIsVisible(gv_mapVoteDialogItems[4], PlayerGroupLoopCurrent()) == false) && (gv_hardWinsInt[PlayerGroupLoopCurrent()] >= 1)) {
            DialogControlSetVisible(gv_mapVoteDialogItems[4], PlayerGroupSingle(PlayerGroupLoopCurrent()), true);
        }
        while ((DialogControlIsVisible(gv_mapVoteDialogItems[5], PlayerGroupLoopCurrent()) == false) && (gv_veryHardWinsInt[PlayerGroupLoopCurrent()] >= 1)) {
            DialogControlSetVisible(gv_mapVoteDialogItems[5], PlayerGroupSingle(PlayerGroupLoopCurrent()), true);
        }
        while ((DialogControlIsVisible(gv_mapVoteDialogItems[6], PlayerGroupLoopCurrent()) == false) && (gv_zWinsInt[PlayerGroupLoopCurrent()] >= 1)) {
            DialogControlSetVisible(gv_mapVoteDialogItems[6], PlayerGroupSingle(PlayerGroupLoopCurrent()), true);
        }
        while ((DialogControlIsVisible(gv_mapVoteDialogItems[7], PlayerGroupLoopCurrent()) == false) && (gv_z2WinsInt[PlayerGroupLoopCurrent()] >= 1)) {
            DialogControlSetVisible(gv_mapVoteDialogItems[7], PlayerGroupSingle(PlayerGroupLoopCurrent()), true);
        }
        while ((DialogControlIsVisible(gv_mapVoteDialogItems[8], PlayerGroupLoopCurrent()) == false) && (gv_z3WinsInt[PlayerGroupLoopCurrent()] >= 1)) {
            DialogControlSetVisible(gv_mapVoteDialogItems[8], PlayerGroupSingle(PlayerGroupLoopCurrent()), true);
        }
        while ((DialogControlIsVisible(gv_mapVoteDialogItems[9], PlayerGroupLoopCurrent()) == false) && (gv_godlyWinsInt[PlayerGroupLoopCurrent()] >= 1)) {
            DialogControlSetVisible(gv_mapVoteDialogItems[9], PlayerGroupSingle(PlayerGroupLoopCurrent()), true);
        }
        while ((DialogControlIsVisible(gv_mapVoteDialogItems[10], PlayerGroupLoopCurrent()) == false) && (gv_impossibleWinsInt[PlayerGroupLoopCurrent()] >= 1)) {
            DialogControlSetVisible(gv_mapVoteDialogItems[10], PlayerGroupSingle(PlayerGroupLoopCurrent()), true);
        }
    }
    PlayerGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_InitiateVote_Init () {
    gt_InitiateVote = TriggerCreate("gt_InitiateVote_Func");
    TriggerAddEventMapInit(gt_InitiateVote);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Show Difficulty
//--------------------------------------------------------------------------------------------------
bool gt_ShowDifficulty_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    DialogCreate(150, 50, c_anchorTopLeft, 25, 60, true);
    gv_displayDifficulty = DialogLastCreated();
    if ((gv_difficultyvariable == 0)) {
        libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 150, 50, c_anchorTopLeft, 0, 0, StringExternal("Param/Value/35187CD9"), StringExternal("Param/Value/E6449ED9"), "");
        gv_displayDifficultybutton = DialogControlLastCreated();
    }
    else {
    }
    if ((gv_difficultyvariable == 1)) {
        libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 150, 50, c_anchorTopLeft, 0, 0, StringExternal("Param/Value/AFFC69BA"), StringExternal("Param/Value/C42F408A"), "");
        gv_displayDifficultybutton = DialogControlLastCreated();
    }
    else {
    }
    if ((gv_difficultyvariable == 2)) {
        libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 150, 50, c_anchorTopLeft, 0, 0, StringExternal("Param/Value/D982E6C7"), StringExternal("Param/Value/BE0B40C4"), "");
        gv_displayDifficultybutton = DialogControlLastCreated();
    }
    else {
    }
    if ((gv_difficultyvariable == 3)) {
        libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 150, 50, c_anchorTopLeft, 0, 0, StringExternal("Param/Value/44E02DDE"), StringExternal("Param/Value/F2D10B04"), "");
        gv_displayDifficultybutton = DialogControlLastCreated();
    }
    else {
    }
    if ((gv_difficultyvariable == 4)) {
        libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 150, 50, c_anchorTopLeft, 0, 0, StringExternal("Param/Value/E97DCC2F"), StringExternal("Param/Value/DEF3B6B9"), "");
        gv_displayDifficultybutton = DialogControlLastCreated();
    }
    else {
    }
    if ((gv_difficultyvariable == 5)) {
        libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 150, 50, c_anchorTopLeft, 0, 0, StringExternal("Param/Value/80BFA1BB"), StringExternal("Param/Value/17CF485C"), "");
        gv_displayDifficultybutton = DialogControlLastCreated();
    }
    else {
    }
    if ((gv_difficultyvariable == 6)) {
        libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 150, 50, c_anchorTopLeft, 0, 0, StringExternal("Param/Value/9EFEA923"), StringExternal("Param/Value/936B4F04"), "");
        gv_displayDifficultybutton = DialogControlLastCreated();
    }
    else {
    }
    if ((gv_difficultyvariable == 7)) {
        libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 150, 50, c_anchorTopLeft, 0, 0, StringExternal("Param/Value/365DBB79"), StringExternal("Param/Value/697E73F7"), "");
        gv_displayDifficultybutton = DialogControlLastCreated();
    }
    else {
    }
    if ((gv_difficultyvariable == 8)) {
        libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 150, 50, c_anchorTopLeft, 0, 0, StringExternal("Param/Value/71D7C98C"), StringExternal("Param/Value/57E8A2C8"), "");
        gv_displayDifficultybutton = DialogControlLastCreated();
    }
    else {
    }
    if ((gv_difficultyvariable == 9)) {
        libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 150, 50, c_anchorTopLeft, 0, 0, StringExternal("Param/Value/C0B32ABE"), StringExternal("Param/Value/4F198192"), "");
        gv_displayDifficultybutton = DialogControlLastCreated();
    }
    else {
    }
    if ((gv_difficultyvariable == 10)) {
        libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 150, 50, c_anchorTopLeft, 0, 0, StringExternal("Param/Value/9B998BC4"), StringExternal("Param/Value/87496C72"), "");
        gv_displayDifficultybutton = DialogControlLastCreated();
    }
    else {
    }
    DialogSetVisible(DialogLastCreated(), PlayerGroupAll(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ShowDifficulty_Init () {
    gt_ShowDifficulty = TriggerCreate("gt_ShowDifficulty_Func");
    TriggerAddEventTimeElapsed(gt_ShowDifficulty, 25.2, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Voting
//--------------------------------------------------------------------------------------------------
bool gt_Voting_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int[12] lv_votes;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(((EventDialogControl() == gv_mapVoteDialogItems[0]) || (EventDialogControl() == gv_mapVoteDialogItems[1]) || (EventDialogControl() == gv_mapVoteDialogItems[2]) || (EventDialogControl() == gv_mapVoteDialogItems[3]) || (EventDialogControl() == gv_mapVoteDialogItems[4]) || (EventDialogControl() == gv_mapVoteDialogItems[5]) || (EventDialogControl() == gv_mapVoteDialogItems[6]) || (EventDialogControl() == gv_mapVoteDialogItems[7]) || (EventDialogControl() == gv_mapVoteDialogItems[8]) || (EventDialogControl() == gv_mapVoteDialogItems[9]) || (EventDialogControl() == gv_mapVoteDialogItems[10])))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_mapVotes[gv_previousPlayerVote[EventPlayer()]] -= 1;
    if ((EventDialogControl() == gv_mapVoteDialogItems[0])) {
        gv_mapVotes[1] += 1;
        gv_previousPlayerVote[EventPlayer()] = 1;
        DialogControlSetVisible(libNtve_gf_ValueFromDataTableDialogItem(true, "Last Clicked Dialog Item"), PlayerGroupSingle(EventPlayer()), true);
        libNtve_gf_SaveDataTableValueDialogItem(true, "Last Clicked Dialog Item", gv_mapVoteDialogItems[0]);
        DialogControlSetVisible(libNtve_gf_ValueFromDataTableDialogItem(true, "Last Clicked Dialog Item"), PlayerGroupSingle(EventPlayer()), false);
    }
    else {
    }
    if ((EventDialogControl() == gv_mapVoteDialogItems[1])) {
        gv_mapVotes[2] += 1;
        gv_previousPlayerVote[EventPlayer()] = 2;
        DialogControlSetVisible(libNtve_gf_ValueFromDataTableDialogItem(true, "Last Clicked Dialog Item"), PlayerGroupSingle(EventPlayer()), true);
        libNtve_gf_SaveDataTableValueDialogItem(true, "Last Clicked Dialog Item", gv_mapVoteDialogItems[1]);
        DialogControlSetVisible(libNtve_gf_ValueFromDataTableDialogItem(true, "Last Clicked Dialog Item"), PlayerGroupSingle(EventPlayer()), false);
    }
    else {
    }
    if ((EventDialogControl() == gv_mapVoteDialogItems[2])) {
        gv_mapVotes[3] += 1;
        gv_previousPlayerVote[EventPlayer()] = 3;
        DialogControlSetVisible(libNtve_gf_ValueFromDataTableDialogItem(true, "Last Clicked Dialog Item"), PlayerGroupSingle(EventPlayer()), true);
        libNtve_gf_SaveDataTableValueDialogItem(true, "Last Clicked Dialog Item", gv_mapVoteDialogItems[2]);
        DialogControlSetVisible(libNtve_gf_ValueFromDataTableDialogItem(true, "Last Clicked Dialog Item"), PlayerGroupSingle(EventPlayer()), false);
    }
    else {
    }
    if ((EventDialogControl() == gv_mapVoteDialogItems[3])) {
        gv_mapVotes[4] += 1;
        gv_previousPlayerVote[EventPlayer()] = 4;
        DialogControlSetVisible(libNtve_gf_ValueFromDataTableDialogItem(true, "Last Clicked Dialog Item"), PlayerGroupSingle(EventPlayer()), true);
        libNtve_gf_SaveDataTableValueDialogItem(true, "Last Clicked Dialog Item", gv_mapVoteDialogItems[3]);
        DialogControlSetVisible(libNtve_gf_ValueFromDataTableDialogItem(true, "Last Clicked Dialog Item"), PlayerGroupSingle(EventPlayer()), false);
    }
    else {
    }
    if ((EventDialogControl() == gv_mapVoteDialogItems[4])) {
        gv_mapVotes[5] += 1;
        gv_previousPlayerVote[EventPlayer()] = 5;
        DialogControlSetVisible(libNtve_gf_ValueFromDataTableDialogItem(true, "Last Clicked Dialog Item"), PlayerGroupSingle(EventPlayer()), true);
        libNtve_gf_SaveDataTableValueDialogItem(true, "Last Clicked Dialog Item", gv_mapVoteDialogItems[4]);
        DialogControlSetVisible(libNtve_gf_ValueFromDataTableDialogItem(true, "Last Clicked Dialog Item"), PlayerGroupSingle(EventPlayer()), false);
    }
    else {
    }
    if ((EventDialogControl() == gv_mapVoteDialogItems[5])) {
        gv_mapVotes[6] += 1;
        gv_previousPlayerVote[EventPlayer()] = 6;
        DialogControlSetVisible(libNtve_gf_ValueFromDataTableDialogItem(true, "Last Clicked Dialog Item"), PlayerGroupSingle(EventPlayer()), true);
        libNtve_gf_SaveDataTableValueDialogItem(true, "Last Clicked Dialog Item", gv_mapVoteDialogItems[5]);
        DialogControlSetVisible(libNtve_gf_ValueFromDataTableDialogItem(true, "Last Clicked Dialog Item"), PlayerGroupSingle(EventPlayer()), false);
    }
    else {
    }
    if ((EventDialogControl() == gv_mapVoteDialogItems[6])) {
        gv_mapVotes[7] += 1;
        gv_previousPlayerVote[EventPlayer()] = 7;
        DialogControlSetVisible(libNtve_gf_ValueFromDataTableDialogItem(true, "Last Clicked Dialog Item"), PlayerGroupSingle(EventPlayer()), true);
        libNtve_gf_SaveDataTableValueDialogItem(true, "Last Clicked Dialog Item", gv_mapVoteDialogItems[6]);
        DialogControlSetVisible(libNtve_gf_ValueFromDataTableDialogItem(true, "Last Clicked Dialog Item"), PlayerGroupSingle(EventPlayer()), false);
    }
    else {
    }
    if ((EventDialogControl() == gv_mapVoteDialogItems[7])) {
        gv_mapVotes[8] += 1;
        gv_previousPlayerVote[EventPlayer()] = 8;
        DialogControlSetVisible(libNtve_gf_ValueFromDataTableDialogItem(true, "Last Clicked Dialog Item"), PlayerGroupSingle(EventPlayer()), true);
        libNtve_gf_SaveDataTableValueDialogItem(true, "Last Clicked Dialog Item", gv_mapVoteDialogItems[7]);
        DialogControlSetVisible(libNtve_gf_ValueFromDataTableDialogItem(true, "Last Clicked Dialog Item"), PlayerGroupSingle(EventPlayer()), false);
    }
    else {
    }
    if ((EventDialogControl() == gv_mapVoteDialogItems[8])) {
        gv_mapVotes[9] += 1;
        gv_previousPlayerVote[EventPlayer()] = 9;
        DialogControlSetVisible(libNtve_gf_ValueFromDataTableDialogItem(true, "Last Clicked Dialog Item"), PlayerGroupSingle(EventPlayer()), true);
        libNtve_gf_SaveDataTableValueDialogItem(true, "Last Clicked Dialog Item", gv_mapVoteDialogItems[8]);
        DialogControlSetVisible(libNtve_gf_ValueFromDataTableDialogItem(true, "Last Clicked Dialog Item"), PlayerGroupSingle(EventPlayer()), false);
    }
    else {
    }
    if ((EventDialogControl() == gv_mapVoteDialogItems[9])) {
        gv_mapVotes[10] += 1;
        gv_previousPlayerVote[EventPlayer()] = 10;
        DialogControlSetVisible(libNtve_gf_ValueFromDataTableDialogItem(true, "Last Clicked Dialog Item"), PlayerGroupSingle(EventPlayer()), true);
        libNtve_gf_SaveDataTableValueDialogItem(true, "Last Clicked Dialog Item", gv_mapVoteDialogItems[9]);
        DialogControlSetVisible(libNtve_gf_ValueFromDataTableDialogItem(true, "Last Clicked Dialog Item"), PlayerGroupSingle(EventPlayer()), false);
    }
    else {
    }
    if ((EventDialogControl() == gv_mapVoteDialogItems[10])) {
        gv_mapVotes[11] += 1;
        gv_previousPlayerVote[EventPlayer()] = 11;
        DialogControlSetVisible(libNtve_gf_ValueFromDataTableDialogItem(true, "Last Clicked Dialog Item"), PlayerGroupSingle(EventPlayer()), true);
        libNtve_gf_SaveDataTableValueDialogItem(true, "Last Clicked Dialog Item", gv_mapVoteDialogItems[10]);
        DialogControlSetVisible(libNtve_gf_ValueFromDataTableDialogItem(true, "Last Clicked Dialog Item"), PlayerGroupSingle(EventPlayer()), false);
    }
    else {
    }
    DialogControlDestroy(gv_dialoglabelcounter[1]);
    DialogControlDestroy(gv_dialoglabelcounter[2]);
    DialogControlDestroy(gv_dialoglabelcounter[3]);
    DialogControlDestroy(gv_dialoglabelcounter[4]);
    DialogControlDestroy(gv_dialoglabelcounter[5]);
    DialogControlDestroy(gv_dialoglabelcounter[6]);
    DialogControlDestroy(gv_dialoglabelcounter[7]);
    DialogControlDestroy(gv_dialoglabelcounter[8]);
    DialogControlDestroy(gv_dialoglabelcounter[9]);
    DialogControlDestroy(gv_dialoglabelcounter[10]);
    DialogControlDestroy(gv_dialoglabelcounter[11]);
    lv_votes[1] = gv_mapVotes[1];
    libNtve_gf_CreateDialogItemLabel(DialogControlGetDialog(EventDialogControl()), 50, 50, c_anchorTopLeft, 185, 165, IntToText(lv_votes[1]), ColorWithAlpha(0,0,0,0), false, 2.0);
    gv_dialoglabelcounter[1] = DialogControlLastCreated();
    lv_votes[2] = gv_mapVotes[2];
    libNtve_gf_CreateDialogItemLabel(DialogControlGetDialog(EventDialogControl()), 50, 50, c_anchorTopLeft, 185, 215, IntToText(lv_votes[2]), ColorWithAlpha(0,0,0,0), false, 2.0);
    gv_dialoglabelcounter[2] = DialogControlLastCreated();
    lv_votes[3] = gv_mapVotes[3];
    libNtve_gf_CreateDialogItemLabel(DialogControlGetDialog(EventDialogControl()), 50, 50, c_anchorTopLeft, 335, 165, IntToText(lv_votes[3]), ColorWithAlpha(0,0,0,0), false, 2.0);
    gv_dialoglabelcounter[3] = DialogControlLastCreated();
    lv_votes[4] = gv_mapVotes[4];
    libNtve_gf_CreateDialogItemLabel(DialogControlGetDialog(EventDialogControl()), 50, 50, c_anchorTopLeft, 335, 215, IntToText(lv_votes[4]), ColorWithAlpha(0,0,0,0), false, 2.0);
    gv_dialoglabelcounter[4] = DialogControlLastCreated();
    lv_votes[5] = gv_mapVotes[5];
    libNtve_gf_CreateDialogItemLabel(DialogControlGetDialog(EventDialogControl()), 50, 50, c_anchorTopLeft, 335, 265, IntToText(lv_votes[5]), ColorWithAlpha(0,0,0,0), false, 2.0);
    gv_dialoglabelcounter[5] = DialogControlLastCreated();
    lv_votes[6] = gv_mapVotes[6];
    libNtve_gf_CreateDialogItemLabel(DialogControlGetDialog(EventDialogControl()), 50, 50, c_anchorTopLeft, 485, 165, IntToText(lv_votes[6]), ColorWithAlpha(0,0,0,0), false, 2.0);
    gv_dialoglabelcounter[6] = DialogControlLastCreated();
    lv_votes[7] = gv_mapVotes[7];
    libNtve_gf_CreateDialogItemLabel(DialogControlGetDialog(EventDialogControl()), 50, 50, c_anchorTopLeft, 485, 215, IntToText(lv_votes[7]), ColorWithAlpha(0,0,0,0), false, 2.0);
    gv_dialoglabelcounter[7] = DialogControlLastCreated();
    lv_votes[8] = gv_mapVotes[8];
    libNtve_gf_CreateDialogItemLabel(DialogControlGetDialog(EventDialogControl()), 50, 50, c_anchorTopLeft, 485, 265, IntToText(lv_votes[8]), ColorWithAlpha(0,0,0,0), false, 2.0);
    gv_dialoglabelcounter[8] = DialogControlLastCreated();
    lv_votes[9] = gv_mapVotes[9];
    libNtve_gf_CreateDialogItemLabel(DialogControlGetDialog(EventDialogControl()), 50, 50, c_anchorTopLeft, 635, 165, IntToText(lv_votes[9]), ColorWithAlpha(0,0,0,0), false, 2.0);
    gv_dialoglabelcounter[9] = DialogControlLastCreated();
    lv_votes[10] = gv_mapVotes[10];
    libNtve_gf_CreateDialogItemLabel(DialogControlGetDialog(EventDialogControl()), 50, 50, c_anchorTopLeft, 635, 215, IntToText(lv_votes[10]), ColorWithAlpha(0,0,0,0), false, 2.0);
    gv_dialoglabelcounter[10] = DialogControlLastCreated();
    lv_votes[11] = gv_mapVotes[11];
    libNtve_gf_CreateDialogItemLabel(DialogControlGetDialog(EventDialogControl()), 50, 50, c_anchorTopLeft, 635, 265, IntToText(lv_votes[11]), ColorWithAlpha(0,0,0,0), false, 2.0);
    gv_dialoglabelcounter[11] = DialogControlLastCreated();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Voting_Init () {
    gt_Voting = TriggerCreate("gt_Voting_Func");
    TriggerAddEventDialogControl(gt_Voting, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Vote Timer Ends
//--------------------------------------------------------------------------------------------------
bool gt_VoteTimerEnds_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_maxVotedMap;

    // Variable Initialization
    lv_maxVotedMap = MaxI(MaxI(MaxI(MaxI(MaxI(MaxI(MaxI(MaxI(MaxI(MaxI(gv_mapVotes[1], gv_mapVotes[2]), gv_mapVotes[3]), gv_mapVotes[4]), gv_mapVotes[5]), gv_mapVotes[6]), gv_mapVotes[7]), gv_mapVotes[8]), gv_mapVotes[9]), gv_mapVotes[10]), gv_mapVotes[11]);

    // Actions
    if (!runActions) {
        return true;
    }

    DialogSetVisible(gv_mapVoteDialog, PlayerGroupAll(), false);
    TimerWindowShow(gv_voteTimerWindow, PlayerGroupAll(), false);
    if ((lv_maxVotedMap == gv_mapVotes[1])) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/971911B7"));
        return true;
    }
    else {
    }
    if ((lv_maxVotedMap == gv_mapVotes[2])) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/F2472544"));
        gv_difficultyvariable += 1;
        return true;
    }
    else {
    }
    if ((lv_maxVotedMap == gv_mapVotes[3])) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/166F0CD1"));
        gv_difficultyvariable += 2;
        return true;
    }
    else {
    }
    if ((lv_maxVotedMap == gv_mapVotes[4])) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/8F24A378"));
        gv_difficultyvariable += 3;
        return true;
    }
    else {
    }
    if ((lv_maxVotedMap == gv_mapVotes[5])) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/4BED2865"));
        gv_difficultyvariable += 4;
        return true;
    }
    else {
    }
    if ((lv_maxVotedMap == gv_mapVotes[6])) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/0E953FB5"));
        gv_difficultyvariable += 5;
        return true;
    }
    else {
    }
    if ((lv_maxVotedMap == gv_mapVotes[7])) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/5C150DDD"));
        gv_difficultyvariable += 6;
        return true;
    }
    else {
    }
    if ((lv_maxVotedMap == gv_mapVotes[8])) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/5CA1B9FA"));
        gv_difficultyvariable += 7;
        return true;
    }
    else {
    }
    if ((lv_maxVotedMap == gv_mapVotes[9])) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/04335127"));
        gv_difficultyvariable += 8;
        return true;
    }
    else {
    }
    if ((lv_maxVotedMap == gv_mapVotes[10])) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/E4992ADE"));
        gv_difficultyvariable += 9;
        return true;
    }
    else {
    }
    if ((lv_maxVotedMap == gv_mapVotes[11])) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/17DF8EFC"));
        gv_difficultyvariable += 10;
        return true;
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_VoteTimerEnds_Init () {
    gt_VoteTimerEnds = TriggerCreate("gt_VoteTimerEnds_Func");
    TriggerAddEventTimer(gt_VoteTimerEnds, gv_voteTimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Very Easy difficulty trial
//--------------------------------------------------------------------------------------------------
bool gt_VeryEasydifficultytrial_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_difficultyvariable == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PlayerModifyPropertyInt(15, c_playerPropHandicap, c_playerPropOperSetTo, 50);
    PlayerModifyPropertyInt(15, c_playerPropDamageDealtPercent, c_playerPropOperSetTo, 50);
    TriggerEnable(gt_ChangePlayer14healthforVeryEasy, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_VeryEasydifficultytrial_Init () {
    gt_VeryEasydifficultytrial = TriggerCreate("gt_VeryEasydifficultytrial_Func");
    TriggerAddEventTimeElapsed(gt_VeryEasydifficultytrial, 25.1, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Change Player 14 health for Very Easy
//--------------------------------------------------------------------------------------------------
bool gt_ChangePlayer14healthforVeryEasy_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 14))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPropertyFixed(EventUnit(), c_unitPropLifeMax, (UnitGetPropertyFixed(EventUnit(), c_unitPropLifeMax, c_unitPropCurrent) * 0.5));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ChangePlayer14healthforVeryEasy_Init () {
    gt_ChangePlayer14healthforVeryEasy = TriggerCreate("gt_ChangePlayer14healthforVeryEasy_Func");
    TriggerEnable(gt_ChangePlayer14healthforVeryEasy, false);
    TriggerAddEventUnitRegion(gt_ChangePlayer14healthforVeryEasy, null, RegionEntireMap(), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Easy difficulty trial
//--------------------------------------------------------------------------------------------------
bool gt_Easydifficultytrial_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_difficultyvariable == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PlayerModifyPropertyInt(15, c_playerPropHandicap, c_playerPropOperSetTo, 90);
    PlayerModifyPropertyInt(15, c_playerPropDamageDealtPercent, c_playerPropOperSetTo, 90);
    TriggerEnable(gt_ChangePlayer14healthforEasy, true);
    TriggerEnable(gt_ChangePlayer15speedforEasy, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Easydifficultytrial_Init () {
    gt_Easydifficultytrial = TriggerCreate("gt_Easydifficultytrial_Func");
    TriggerAddEventTimeElapsed(gt_Easydifficultytrial, 25.1, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Change Player 14 health for Easy
//--------------------------------------------------------------------------------------------------
bool gt_ChangePlayer14healthforEasy_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 14))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPropertyFixed(EventUnit(), c_unitPropLifeMax, (UnitGetPropertyFixed(EventUnit(), c_unitPropLifeMax, c_unitPropCurrent) * 0.9));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ChangePlayer14healthforEasy_Init () {
    gt_ChangePlayer14healthforEasy = TriggerCreate("gt_ChangePlayer14healthforEasy_Func");
    TriggerEnable(gt_ChangePlayer14healthforEasy, false);
    TriggerAddEventUnitRegion(gt_ChangePlayer14healthforEasy, null, RegionEntireMap(), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Change Player 15 speed for Easy
//--------------------------------------------------------------------------------------------------
bool gt_ChangePlayer15speedforEasy_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPropertyFixed(EventUnit(), c_unitPropMovementSpeed, (UnitGetPropertyFixed(EventUnit(), c_unitPropMovementSpeed, c_unitPropCurrent) + 0.5));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ChangePlayer15speedforEasy_Init () {
    gt_ChangePlayer15speedforEasy = TriggerCreate("gt_ChangePlayer15speedforEasy_Func");
    TriggerEnable(gt_ChangePlayer15speedforEasy, false);
    TriggerAddEventUnitRegion(gt_ChangePlayer15speedforEasy, null, RegionEntireMap(), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Normal difficulty trial
//--------------------------------------------------------------------------------------------------
bool gt_Normaldifficultytrial_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_difficultyvariable == 2))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PlayerModifyPropertyInt(15, c_playerPropHandicap, c_playerPropOperSetTo, 100);
    PlayerModifyPropertyInt(15, c_playerPropDamageDealtPercent, c_playerPropOperSetTo, 100);
    TriggerEnable(gt_ChangePlayer15speedforNormal, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Normaldifficultytrial_Init () {
    gt_Normaldifficultytrial = TriggerCreate("gt_Normaldifficultytrial_Func");
    TriggerAddEventTimeElapsed(gt_Normaldifficultytrial, 25.1, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Change Player 15 speed for Normal
//--------------------------------------------------------------------------------------------------
bool gt_ChangePlayer15speedforNormal_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPropertyFixed(EventUnit(), c_unitPropMovementSpeed, (UnitGetPropertyFixed(EventUnit(), c_unitPropMovementSpeed, c_unitPropCurrent) + 1.0));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ChangePlayer15speedforNormal_Init () {
    gt_ChangePlayer15speedforNormal = TriggerCreate("gt_ChangePlayer15speedforNormal_Func");
    TriggerEnable(gt_ChangePlayer15speedforNormal, false);
    TriggerAddEventUnitRegion(gt_ChangePlayer15speedforNormal, null, RegionEntireMap(), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Hard difficulty trial
//--------------------------------------------------------------------------------------------------
bool gt_Harddifficultytrial_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_difficultyvariable == 3))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PlayerModifyPropertyInt(15, c_playerPropDamageDealtPercent, c_playerPropOperSetTo, 115);
    PlayerModifyPropertyInt(15, c_playerPropHandicap, c_playerPropOperSetTo, 115);
    TriggerEnable(gt_ChangePlayer15speedforHard, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Harddifficultytrial_Init () {
    gt_Harddifficultytrial = TriggerCreate("gt_Harddifficultytrial_Func");
    TriggerAddEventTimeElapsed(gt_Harddifficultytrial, 25.1, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Change Player 15 speed for Hard
//--------------------------------------------------------------------------------------------------
bool gt_ChangePlayer15speedforHard_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPropertyFixed(EventUnit(), c_unitPropMovementSpeed, (UnitGetPropertyFixed(EventUnit(), c_unitPropMovementSpeed, c_unitPropCurrent) + 1.5));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ChangePlayer15speedforHard_Init () {
    gt_ChangePlayer15speedforHard = TriggerCreate("gt_ChangePlayer15speedforHard_Func");
    TriggerEnable(gt_ChangePlayer15speedforHard, false);
    TriggerAddEventUnitRegion(gt_ChangePlayer15speedforHard, null, RegionEntireMap(), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Very Hard difficulty trial
//--------------------------------------------------------------------------------------------------
bool gt_VeryHarddifficultytrial_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_difficultyvariable == 4))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PlayerModifyPropertyInt(15, c_playerPropDamageDealtPercent, c_playerPropOperSetTo, 130);
    PlayerModifyPropertyInt(15, c_playerPropHandicap, c_playerPropOperSetTo, 130);
    TriggerEnable(gt_ChangePlayer15speedforVeryHard, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_VeryHarddifficultytrial_Init () {
    gt_VeryHarddifficultytrial = TriggerCreate("gt_VeryHarddifficultytrial_Func");
    TriggerAddEventTimeElapsed(gt_VeryHarddifficultytrial, 25.1, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Change Player 15 speed for Very Hard
//--------------------------------------------------------------------------------------------------
bool gt_ChangePlayer15speedforVeryHard_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPropertyFixed(EventUnit(), c_unitPropMovementSpeed, (UnitGetPropertyFixed(EventUnit(), c_unitPropMovementSpeed, c_unitPropCurrent) + 2.0));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ChangePlayer15speedforVeryHard_Init () {
    gt_ChangePlayer15speedforVeryHard = TriggerCreate("gt_ChangePlayer15speedforVeryHard_Func");
    TriggerEnable(gt_ChangePlayer15speedforVeryHard, false);
    TriggerAddEventUnitRegion(gt_ChangePlayer15speedforVeryHard, null, RegionEntireMap(), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Z difficulty trial
//--------------------------------------------------------------------------------------------------
bool gt_Zdifficultytrial_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_difficultyvariable == 5))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PlayerModifyPropertyInt(15, c_playerPropHandicap, c_playerPropOperSetTo, 150);
    PlayerModifyPropertyInt(14, c_playerPropHandicap, c_playerPropOperSetTo, 115);
    PlayerModifyPropertyInt(15, c_playerPropDamageDealtPercent, c_playerPropOperSetTo, 150);
    TriggerEnable(gt_ChangePlayer15speedforZ, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Zdifficultytrial_Init () {
    gt_Zdifficultytrial = TriggerCreate("gt_Zdifficultytrial_Func");
    TriggerAddEventTimeElapsed(gt_Zdifficultytrial, 25.1, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Change Player 15 speed for Z
//--------------------------------------------------------------------------------------------------
bool gt_ChangePlayer15speedforZ_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPropertyFixed(EventUnit(), c_unitPropMovementSpeed, (UnitGetPropertyFixed(EventUnit(), c_unitPropMovementSpeed, c_unitPropCurrent) + 2.5));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ChangePlayer15speedforZ_Init () {
    gt_ChangePlayer15speedforZ = TriggerCreate("gt_ChangePlayer15speedforZ_Func");
    TriggerEnable(gt_ChangePlayer15speedforZ, false);
    TriggerAddEventUnitRegion(gt_ChangePlayer15speedforZ, null, RegionEntireMap(), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Z 2 difficulty trial
//--------------------------------------------------------------------------------------------------
bool gt_Z2difficultytrial_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_difficultyvariable == 6))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PlayerModifyPropertyInt(15, c_playerPropHandicap, c_playerPropOperSetTo, 175);
    PlayerModifyPropertyInt(14, c_playerPropHandicap, c_playerPropOperSetTo, 130);
    PlayerModifyPropertyInt(15, c_playerPropDamageDealtPercent, c_playerPropOperSetTo, 175);
    TriggerEnable(gt_ChangePlayer15speedforZ2, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Z2difficultytrial_Init () {
    gt_Z2difficultytrial = TriggerCreate("gt_Z2difficultytrial_Func");
    TriggerAddEventTimeElapsed(gt_Z2difficultytrial, 25.1, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Change Player 15 speed for Z 2
//--------------------------------------------------------------------------------------------------
bool gt_ChangePlayer15speedforZ2_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPropertyFixed(EventUnit(), c_unitPropMovementSpeed, (UnitGetPropertyFixed(EventUnit(), c_unitPropMovementSpeed, c_unitPropCurrent) + 3.0));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ChangePlayer15speedforZ2_Init () {
    gt_ChangePlayer15speedforZ2 = TriggerCreate("gt_ChangePlayer15speedforZ2_Func");
    TriggerEnable(gt_ChangePlayer15speedforZ2, false);
    TriggerAddEventUnitRegion(gt_ChangePlayer15speedforZ2, null, RegionEntireMap(), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Z 3 difficulty trial
//--------------------------------------------------------------------------------------------------
bool gt_Z3difficultytrial_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_difficultyvariable == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PlayerModifyPropertyInt(15, c_playerPropHandicap, c_playerPropOperSetTo, 200);
    PlayerModifyPropertyInt(14, c_playerPropHandicap, c_playerPropOperSetTo, 150);
    PlayerModifyPropertyInt(15, c_playerPropDamageDealtPercent, c_playerPropOperSetTo, 200);
    TriggerEnable(gt_ChangePlayer15speedforZ3, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Z3difficultytrial_Init () {
    gt_Z3difficultytrial = TriggerCreate("gt_Z3difficultytrial_Func");
    TriggerAddEventTimeElapsed(gt_Z3difficultytrial, 25.1, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Change Player 15 speed for Z 3
//--------------------------------------------------------------------------------------------------
bool gt_ChangePlayer15speedforZ3_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPropertyFixed(EventUnit(), c_unitPropMovementSpeed, (UnitGetPropertyFixed(EventUnit(), c_unitPropMovementSpeed, c_unitPropCurrent) + 3.5));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ChangePlayer15speedforZ3_Init () {
    gt_ChangePlayer15speedforZ3 = TriggerCreate("gt_ChangePlayer15speedforZ3_Func");
    TriggerEnable(gt_ChangePlayer15speedforZ3, false);
    TriggerAddEventUnitRegion(gt_ChangePlayer15speedforZ3, null, RegionEntireMap(), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Godly
//--------------------------------------------------------------------------------------------------
bool gt_Godly_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_difficultyvariable == 8))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PlayerModifyPropertyInt(15, c_playerPropDamageDealtPercent, c_playerPropOperSetTo, 250);
    PlayerModifyPropertyInt(14, c_playerPropDamageDealtPercent, c_playerPropOperSetTo, 125);
    TriggerEnable(gt_ChangePlayer14healthforGodly, true);
    TriggerEnable(gt_ChangePlayer15healthforGodly, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Godly_Init () {
    gt_Godly = TriggerCreate("gt_Godly_Func");
    TriggerAddEventTimeElapsed(gt_Godly, 25.1, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Change Player 14 health for Godly
//--------------------------------------------------------------------------------------------------
bool gt_ChangePlayer14healthforGodly_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 14))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPropertyFixed(EventUnit(), c_unitPropLifeMax, (UnitGetPropertyFixed(EventUnit(), c_unitPropLifeMax, c_unitPropCurrent) * 1.75));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ChangePlayer14healthforGodly_Init () {
    gt_ChangePlayer14healthforGodly = TriggerCreate("gt_ChangePlayer14healthforGodly_Func");
    TriggerEnable(gt_ChangePlayer14healthforGodly, false);
    TriggerAddEventUnitRegion(gt_ChangePlayer14healthforGodly, null, RegionEntireMap(), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Change Player 15 health for Godly
//--------------------------------------------------------------------------------------------------
bool gt_ChangePlayer15healthforGodly_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPropertyFixed(EventUnit(), c_unitPropLifeMax, (UnitGetPropertyFixed(EventUnit(), c_unitPropLifeMax, c_unitPropCurrent) * 2.5));
    UnitSetPropertyFixed(EventUnit(), c_unitPropMovementSpeed, (UnitGetPropertyFixed(EventUnit(), c_unitPropMovementSpeed, c_unitPropCurrent) + 4.0));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ChangePlayer15healthforGodly_Init () {
    gt_ChangePlayer15healthforGodly = TriggerCreate("gt_ChangePlayer15healthforGodly_Func");
    TriggerEnable(gt_ChangePlayer15healthforGodly, false);
    TriggerAddEventUnitRegion(gt_ChangePlayer15healthforGodly, null, RegionEntireMap(), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Impossible
//--------------------------------------------------------------------------------------------------
bool gt_Impossible_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_difficultyvariable == 9))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PlayerModifyPropertyInt(15, c_playerPropDamageDealtPercent, c_playerPropOperSetTo, 300);
    PlayerModifyPropertyInt(14, c_playerPropDamageDealtPercent, c_playerPropOperSetTo, 150);
    TriggerEnable(gt_ChangePlayer14healthforImpossible, true);
    TriggerEnable(gt_ChangePlayer15healthforImpossible, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Impossible_Init () {
    gt_Impossible = TriggerCreate("gt_Impossible_Func");
    TriggerAddEventTimeElapsed(gt_Impossible, 25.1, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Change Player 14 health for Impossible
//--------------------------------------------------------------------------------------------------
bool gt_ChangePlayer14healthforImpossible_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 14))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPropertyFixed(EventUnit(), c_unitPropLifeMax, (UnitGetPropertyFixed(EventUnit(), c_unitPropLifeMax, c_unitPropCurrent) * 2.0));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ChangePlayer14healthforImpossible_Init () {
    gt_ChangePlayer14healthforImpossible = TriggerCreate("gt_ChangePlayer14healthforImpossible_Func");
    TriggerEnable(gt_ChangePlayer14healthforImpossible, false);
    TriggerAddEventUnitRegion(gt_ChangePlayer14healthforImpossible, null, RegionEntireMap(), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Change Player 15 health for Impossible
//--------------------------------------------------------------------------------------------------
bool gt_ChangePlayer15healthforImpossible_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPropertyFixed(EventUnit(), c_unitPropLifeMax, (UnitGetPropertyFixed(EventUnit(), c_unitPropLifeMax, c_unitPropCurrent) * 3.0));
    UnitSetPropertyFixed(EventUnit(), c_unitPropMovementSpeed, (UnitGetPropertyFixed(EventUnit(), c_unitPropMovementSpeed, c_unitPropCurrent) + 4.5));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ChangePlayer15healthforImpossible_Init () {
    gt_ChangePlayer15healthforImpossible = TriggerCreate("gt_ChangePlayer15healthforImpossible_Func");
    TriggerEnable(gt_ChangePlayer15healthforImpossible, false);
    TriggerAddEventUnitRegion(gt_ChangePlayer15healthforImpossible, null, RegionEntireMap(), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Fantasy
//--------------------------------------------------------------------------------------------------
bool gt_Fantasy_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_difficultyvariable == 10))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PlayerModifyPropertyInt(15, c_playerPropDamageDealtPercent, c_playerPropOperSetTo, 500);
    PlayerModifyPropertyInt(14, c_playerPropDamageDealtPercent, c_playerPropOperSetTo, 200);
    TriggerEnable(gt_ChangePlayer15healthforFantasy, true);
    TriggerEnable(gt_ChangePlayer14healthforFantasy, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Fantasy_Init () {
    gt_Fantasy = TriggerCreate("gt_Fantasy_Func");
    TriggerAddEventTimeElapsed(gt_Fantasy, 25.1, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Change Player 14 health for Fantasy
//--------------------------------------------------------------------------------------------------
bool gt_ChangePlayer14healthforFantasy_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 14))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPropertyFixed(EventUnit(), c_unitPropLifeMax, (UnitGetPropertyFixed(EventUnit(), c_unitPropLifeMax, c_unitPropCurrent) * 3.0));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ChangePlayer14healthforFantasy_Init () {
    gt_ChangePlayer14healthforFantasy = TriggerCreate("gt_ChangePlayer14healthforFantasy_Func");
    TriggerEnable(gt_ChangePlayer14healthforFantasy, false);
    TriggerAddEventUnitRegion(gt_ChangePlayer14healthforFantasy, null, RegionEntireMap(), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Change Player 15 health for Fantasy
//--------------------------------------------------------------------------------------------------
bool gt_ChangePlayer15healthforFantasy_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPropertyFixed(EventUnit(), c_unitPropLifeMax, (UnitGetPropertyFixed(EventUnit(), c_unitPropLifeMax, c_unitPropCurrent) * 5.0));
    UnitSetPropertyFixed(EventUnit(), c_unitPropMovementSpeed, (UnitGetPropertyFixed(EventUnit(), c_unitPropMovementSpeed, c_unitPropCurrent) + 5.0));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ChangePlayer15healthforFantasy_Init () {
    gt_ChangePlayer15healthforFantasy = TriggerCreate("gt_ChangePlayer15healthforFantasy_Func");
    TriggerEnable(gt_ChangePlayer15healthforFantasy, false);
    TriggerAddEventUnitRegion(gt_ChangePlayer15healthforFantasy, null, RegionEntireMap(), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Unit dies
//--------------------------------------------------------------------------------------------------
bool gt_Unitdies_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(29)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Unitdies_Init () {
    gt_Unitdies = TriggerCreate("gt_Unitdies_Func");
    TriggerAddEventUnitRegion(gt_Unitdies, null, RegionFromId(29), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Death Trigger Goku
//--------------------------------------------------------------------------------------------------
bool gt_DeathTriggerGoku_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitRevive(UnitFromId(104));
    PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperSubtract, (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) / 10));
    BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    UnitSetPosition(UnitFromId(104), RegionGetCenter(RegionFromId(29)), false);
    DataTableSetUnit(true, "Goku", EventUnit());
    RegionAttachToUnit(RegionFromId(84), UnitFromId(104), Point(0.0, 0.0));
    TimerWindowCreate(gv_revivalTimerGoku, StringExternal("Param/Value/B62B044A"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 1250, 50);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_revivalTimerGoku, 60.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_revivalTimerGoku);
    Wait(60.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    UnitSetPosition(RegionGetAttachUnit(RegionFromId(84)), RegionGetCenter(RegionFromId(21)), false);
    RegionAttachToUnit(RegionFromId(84), UnitFromId(104), Point(0.0, 0.0));
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DeathTriggerGoku_Init () {
    gt_DeathTriggerGoku = TriggerCreate("gt_DeathTriggerGoku_Func");
    TriggerAddEventUnitDamaged(gt_DeathTriggerGoku, UnitRefFromUnit(UnitFromId(104)), c_unitDamageTypeAny, c_unitDamageFatal, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Death Trigger Goku SSJ
//--------------------------------------------------------------------------------------------------
bool gt_DeathTriggerGokuSSJ_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitRevive(UnitFromId(173));
    PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperSubtract, (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) / 10));
    BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    UnitSetPosition(UnitFromId(173), RegionGetCenter(RegionFromId(29)), false);
    DataTableSetUnit(true, "Goku", EventUnit());
    RegionAttachToUnit(RegionFromId(84), UnitFromId(173), Point(0.0, 0.0));
    TimerWindowCreate(gv_revivalTimerGoku, StringExternal("Param/Value/B423A56F"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 1250, 50);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_revivalTimerGoku, 60.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_revivalTimerGoku);
    Wait(60.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    UnitSetPosition(RegionGetAttachUnit(RegionFromId(84)), RegionGetCenter(RegionFromId(21)), false);
    RegionAttachToUnit(RegionFromId(84), UnitFromId(173), Point(0.0, 0.0));
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DeathTriggerGokuSSJ_Init () {
    gt_DeathTriggerGokuSSJ = TriggerCreate("gt_DeathTriggerGokuSSJ_Func");
    TriggerAddEventUnitDamaged(gt_DeathTriggerGokuSSJ, UnitRefFromUnit(UnitFromId(173)), c_unitDamageTypeAny, c_unitDamageFatal, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Death Trigger Goku SSJ2
//--------------------------------------------------------------------------------------------------
bool gt_DeathTriggerGokuSSJ2_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitRevive(UnitFromId(179));
    PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperSubtract, (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) / 10));
    BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    UnitSetPosition(UnitFromId(179), RegionGetCenter(RegionFromId(29)), false);
    DataTableSetUnit(true, "Goku", EventUnit());
    RegionAttachToUnit(RegionFromId(84), UnitFromId(179), Point(0.0, 0.0));
    TimerWindowCreate(gv_revivalTimerGoku, StringExternal("Param/Value/E5485D46"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 1250, 50);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_revivalTimerGoku, 60.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_revivalTimerGoku);
    Wait(60.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    UnitSetPosition(RegionGetAttachUnit(RegionFromId(84)), RegionGetCenter(RegionFromId(21)), false);
    RegionAttachToUnit(RegionFromId(84), UnitFromId(179), Point(0.0, 0.0));
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DeathTriggerGokuSSJ2_Init () {
    gt_DeathTriggerGokuSSJ2 = TriggerCreate("gt_DeathTriggerGokuSSJ2_Func");
    TriggerAddEventUnitDamaged(gt_DeathTriggerGokuSSJ2, UnitRefFromUnit(UnitFromId(179)), c_unitDamageTypeAny, c_unitDamageFatal, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Death Trigger Goku SSJ3
//--------------------------------------------------------------------------------------------------
bool gt_DeathTriggerGokuSSJ3_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitRevive(UnitFromId(174));
    PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperSubtract, (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) / 10));
    BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    UnitSetPosition(UnitFromId(174), RegionGetCenter(RegionFromId(29)), false);
    DataTableSetUnit(true, "Goku", EventUnit());
    RegionAttachToUnit(RegionFromId(84), UnitFromId(174), Point(0.0, 0.0));
    TimerWindowCreate(gv_revivalTimerGoku, StringExternal("Param/Value/09D59EDE"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 1250, 50);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_revivalTimerGoku, 60.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_revivalTimerGoku);
    Wait(60.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    UnitSetPosition(RegionGetAttachUnit(RegionFromId(84)), RegionGetCenter(RegionFromId(21)), false);
    RegionAttachToUnit(RegionFromId(84), UnitFromId(174), Point(0.0, 0.0));
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DeathTriggerGokuSSJ3_Init () {
    gt_DeathTriggerGokuSSJ3 = TriggerCreate("gt_DeathTriggerGokuSSJ3_Func");
    TriggerAddEventUnitDamaged(gt_DeathTriggerGokuSSJ3, UnitRefFromUnit(UnitFromId(174)), c_unitDamageTypeAny, c_unitDamageFatal, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Death Trigger Goku SSJ4
//--------------------------------------------------------------------------------------------------
bool gt_DeathTriggerGokuSSJ4_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitRevive(UnitFromId(141));
    PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperSubtract, (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) / 10));
    BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    UnitSetPosition(UnitFromId(141), RegionGetCenter(RegionFromId(29)), false);
    DataTableSetUnit(true, "Goku", EventUnit());
    RegionAttachToUnit(RegionFromId(84), UnitFromId(141), Point(0.0, 0.0));
    TimerWindowCreate(gv_revivalTimerGoku, StringExternal("Param/Value/BFC8A446"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 1250, 50);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_revivalTimerGoku, 60.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_revivalTimerGoku);
    Wait(60.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    UnitSetPosition(RegionGetAttachUnit(RegionFromId(84)), RegionGetCenter(RegionFromId(21)), false);
    RegionAttachToUnit(RegionFromId(84), UnitFromId(141), Point(0.0, 0.0));
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DeathTriggerGokuSSJ4_Init () {
    gt_DeathTriggerGokuSSJ4 = TriggerCreate("gt_DeathTriggerGokuSSJ4_Func");
    TriggerAddEventUnitDamaged(gt_DeathTriggerGokuSSJ4, UnitRefFromUnit(UnitFromId(141)), c_unitDamageTypeAny, c_unitDamageFatal, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Death Trigger Vegito (Goku)
//--------------------------------------------------------------------------------------------------
bool gt_DeathTriggerVegitoGoku_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitRevive(UnitFromId(167));
    PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperSubtract, (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) / 10));
    BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    UnitSetPosition(UnitFromId(167), RegionGetCenter(RegionFromId(29)), false);
    DataTableSetUnit(true, "Goku", EventUnit());
    RegionAttachToUnit(RegionFromId(84), UnitFromId(167), Point(0.0, 0.0));
    TimerWindowCreate(gv_revivalTimerGoku, StringExternal("Param/Value/B2FFEE20"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 1250, 50);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_revivalTimerGoku, 60.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_revivalTimerGoku);
    Wait(60.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    UnitSetPosition(RegionGetAttachUnit(RegionFromId(84)), RegionGetCenter(RegionFromId(21)), false);
    RegionAttachToUnit(RegionFromId(84), UnitFromId(167), Point(0.0, 0.0));
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DeathTriggerVegitoGoku_Init () {
    gt_DeathTriggerVegitoGoku = TriggerCreate("gt_DeathTriggerVegitoGoku_Func");
    TriggerAddEventUnitDamaged(gt_DeathTriggerVegitoGoku, UnitRefFromUnit(UnitFromId(167)), c_unitDamageTypeAny, c_unitDamageFatal, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Death Trigger Vegito SSJ (Goku)
//--------------------------------------------------------------------------------------------------
bool gt_DeathTriggerVegitoSSJGoku_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitRevive(UnitFromId(161));
    PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperSubtract, (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) / 10));
    BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    UnitSetPosition(UnitFromId(161), RegionGetCenter(RegionFromId(29)), false);
    DataTableSetUnit(true, "Goku", EventUnit());
    RegionAttachToUnit(RegionFromId(84), UnitFromId(161), Point(0.0, 0.0));
    TimerWindowCreate(gv_revivalTimerGoku, StringExternal("Param/Value/921C8652"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 1250, 50);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_revivalTimerGoku, 60.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_revivalTimerGoku);
    Wait(60.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    UnitSetPosition(RegionGetAttachUnit(RegionFromId(84)), RegionGetCenter(RegionFromId(21)), false);
    RegionAttachToUnit(RegionFromId(84), UnitFromId(161), Point(0.0, 0.0));
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DeathTriggerVegitoSSJGoku_Init () {
    gt_DeathTriggerVegitoSSJGoku = TriggerCreate("gt_DeathTriggerVegitoSSJGoku_Func");
    TriggerAddEventUnitDamaged(gt_DeathTriggerVegitoSSJGoku, UnitRefFromUnit(UnitFromId(161)), c_unitDamageTypeAny, c_unitDamageFatal, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Death Trigger Vegeta
//--------------------------------------------------------------------------------------------------
bool gt_DeathTriggerVegeta_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitRevive(UnitFromId(105));
    PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperSubtract, (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) / 10));
    BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    UnitSetPosition(UnitFromId(105), RegionGetCenter(RegionFromId(29)), false);
    DataTableSetUnit(true, "Vegeta", EventUnit());
    RegionAttachToUnit(RegionFromId(85), UnitFromId(105), Point(0.0, 0.0));
    TimerWindowCreate(gv_revivalTimerVegeta, StringExternal("Param/Value/AC316937"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 1250, 100);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_revivalTimerVegeta, 60.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_revivalTimerVegeta);
    Wait(60.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    UnitSetPosition(RegionGetAttachUnit(RegionFromId(85)), RegionGetCenter(RegionFromId(21)), false);
    RegionAttachToUnit(RegionFromId(85), UnitFromId(105), Point(0.0, 0.0));
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DeathTriggerVegeta_Init () {
    gt_DeathTriggerVegeta = TriggerCreate("gt_DeathTriggerVegeta_Func");
    TriggerAddEventUnitDamaged(gt_DeathTriggerVegeta, UnitRefFromUnit(UnitFromId(105)), c_unitDamageTypeAny, c_unitDamageFatal, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Death Trigger Vegeta SSJ
//--------------------------------------------------------------------------------------------------
bool gt_DeathTriggerVegetaSSJ_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitRevive(UnitFromId(187));
    PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperSubtract, (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) / 10));
    BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    UnitSetPosition(UnitFromId(187), RegionGetCenter(RegionFromId(29)), false);
    DataTableSetUnit(true, "Vegeta", EventUnit());
    RegionAttachToUnit(RegionFromId(85), UnitFromId(187), Point(0.0, 0.0));
    TimerWindowCreate(gv_revivalTimerVegeta, StringExternal("Param/Value/5B7C30E6"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 1250, 100);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_revivalTimerVegeta, 60.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_revivalTimerVegeta);
    Wait(60.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    UnitSetPosition(RegionGetAttachUnit(RegionFromId(85)), RegionGetCenter(RegionFromId(21)), false);
    RegionAttachToUnit(RegionFromId(85), UnitFromId(187), Point(0.0, 0.0));
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DeathTriggerVegetaSSJ_Init () {
    gt_DeathTriggerVegetaSSJ = TriggerCreate("gt_DeathTriggerVegetaSSJ_Func");
    TriggerAddEventUnitDamaged(gt_DeathTriggerVegetaSSJ, UnitRefFromUnit(UnitFromId(187)), c_unitDamageTypeAny, c_unitDamageFatal, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Death Trigger Vegeta SSJ2
//--------------------------------------------------------------------------------------------------
bool gt_DeathTriggerVegetaSSJ2_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventUnitBehavior() != "HardenedShield"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(UnitFromId(177), RegionGetCenter(RegionFromId(29)), false);
    PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperSubtract, (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) / 10));
    BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    DataTableSetUnit(true, "Vegeta", EventUnit());
    RegionAttachToUnit(RegionFromId(85), UnitFromId(177), Point(0.0, 0.0));
    TimerWindowCreate(gv_revivalTimerVegeta, StringExternal("Param/Value/286FC3DB"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 1250, 100);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_revivalTimerVegeta, 60.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_revivalTimerVegeta);
    Wait(60.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    UnitSetPosition(RegionGetAttachUnit(RegionFromId(85)), RegionGetCenter(RegionFromId(21)), false);
    RegionAttachToUnit(RegionFromId(85), UnitFromId(177), Point(0.0, 0.0));
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DeathTriggerVegetaSSJ2_Init () {
    gt_DeathTriggerVegetaSSJ2 = TriggerCreate("gt_DeathTriggerVegetaSSJ2_Func");
    TriggerAddEventUnitBehaviorChange(gt_DeathTriggerVegetaSSJ2, UnitRefFromUnit(UnitFromId(177)), null, c_unitBehaviorChangeActivate);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Death Trigger Majin Vegeta
//--------------------------------------------------------------------------------------------------
bool gt_DeathTriggerMajinVegeta_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitRevive(UnitFromId(183));
    PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperSubtract, (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) / 10));
    BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    UnitSetPosition(UnitFromId(183), RegionGetCenter(RegionFromId(29)), false);
    DataTableSetUnit(true, "Vegeta", EventUnit());
    RegionAttachToUnit(RegionFromId(85), UnitFromId(183), Point(0.0, 0.0));
    TimerWindowCreate(gv_revivalTimerVegeta, StringExternal("Param/Value/91E05EBA"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 1250, 100);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_revivalTimerVegeta, 60.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_revivalTimerVegeta);
    Wait(60.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    UnitSetPosition(RegionGetAttachUnit(RegionFromId(85)), RegionGetCenter(RegionFromId(21)), false);
    RegionAttachToUnit(RegionFromId(85), UnitFromId(183), Point(0.0, 0.0));
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DeathTriggerMajinVegeta_Init () {
    gt_DeathTriggerMajinVegeta = TriggerCreate("gt_DeathTriggerMajinVegeta_Func");
    TriggerAddEventUnitDamaged(gt_DeathTriggerMajinVegeta, UnitRefFromUnit(UnitFromId(183)), c_unitDamageTypeAny, c_unitDamageFatal, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Death Trigger Vegeta SSJ4
//--------------------------------------------------------------------------------------------------
bool gt_DeathTriggerVegetaSSJ4_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitRevive(UnitFromId(171));
    PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperSubtract, (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) / 10));
    BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    UnitSetPosition(UnitFromId(171), RegionGetCenter(RegionFromId(29)), false);
    DataTableSetUnit(true, "Vegeta", EventUnit());
    RegionAttachToUnit(RegionFromId(85), UnitFromId(171), Point(0.0, 0.0));
    TimerWindowCreate(gv_revivalTimerVegeta, StringExternal("Param/Value/C9F0897E"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 1250, 100);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_revivalTimerVegeta, 60.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_revivalTimerVegeta);
    Wait(60.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    UnitSetPosition(RegionGetAttachUnit(RegionFromId(85)), RegionGetCenter(RegionFromId(21)), false);
    RegionAttachToUnit(RegionFromId(85), UnitFromId(171), Point(0.0, 0.0));
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DeathTriggerVegetaSSJ4_Init () {
    gt_DeathTriggerVegetaSSJ4 = TriggerCreate("gt_DeathTriggerVegetaSSJ4_Func");
    TriggerAddEventUnitDamaged(gt_DeathTriggerVegetaSSJ4, UnitRefFromUnit(UnitFromId(171)), c_unitDamageTypeAny, c_unitDamageFatal, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Death Trigger Vegito (Vegeta)
//--------------------------------------------------------------------------------------------------
bool gt_DeathTriggerVegitoVegeta_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitRevive(UnitFromId(168));
    PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperSubtract, (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) / 10));
    BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    UnitSetPosition(UnitFromId(168), RegionGetCenter(RegionFromId(29)), false);
    DataTableSetUnit(true, "Vegeta", EventUnit());
    RegionAttachToUnit(RegionFromId(85), UnitFromId(168), Point(0.0, 0.0));
    TimerWindowCreate(gv_revivalTimerVegeta, StringExternal("Param/Value/13EAF85D"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 1250, 100);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_revivalTimerVegeta, 60.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_revivalTimerVegeta);
    Wait(60.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    UnitSetPosition(RegionGetAttachUnit(RegionFromId(85)), RegionGetCenter(RegionFromId(21)), false);
    RegionAttachToUnit(RegionFromId(85), UnitFromId(168), Point(0.0, 0.0));
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DeathTriggerVegitoVegeta_Init () {
    gt_DeathTriggerVegitoVegeta = TriggerCreate("gt_DeathTriggerVegitoVegeta_Func");
    TriggerAddEventUnitDamaged(gt_DeathTriggerVegitoVegeta, UnitRefFromUnit(UnitFromId(168)), c_unitDamageTypeAny, c_unitDamageFatal, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Death Trigger Vegito SSJ (Vegeta)
//--------------------------------------------------------------------------------------------------
bool gt_DeathTriggerVegitoSSJVegeta_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitRevive(UnitFromId(146));
    PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperSubtract, (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) / 10));
    BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    UnitSetPosition(UnitFromId(146), RegionGetCenter(RegionFromId(29)), false);
    DataTableSetUnit(true, "Vegeta", EventUnit());
    RegionAttachToUnit(RegionFromId(85), UnitFromId(146), Point(0.0, 0.0));
    TimerWindowCreate(gv_revivalTimerVegeta, StringExternal("Param/Value/631212F2"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 1250, 100);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_revivalTimerVegeta, 60.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_revivalTimerVegeta);
    Wait(60.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    UnitSetPosition(RegionGetAttachUnit(RegionFromId(85)), RegionGetCenter(RegionFromId(21)), false);
    RegionAttachToUnit(RegionFromId(85), UnitFromId(146), Point(0.0, 0.0));
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DeathTriggerVegitoSSJVegeta_Init () {
    gt_DeathTriggerVegitoSSJVegeta = TriggerCreate("gt_DeathTriggerVegitoSSJVegeta_Func");
    TriggerAddEventUnitDamaged(gt_DeathTriggerVegitoSSJVegeta, UnitRefFromUnit(UnitFromId(146)), c_unitDamageTypeAny, c_unitDamageFatal, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Death Trigger Piccolo
//--------------------------------------------------------------------------------------------------
bool gt_DeathTriggerPiccolo_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitRevive(UnitFromId(106));
    PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperSubtract, (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) / 10));
    BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    UnitSetPosition(UnitFromId(106), RegionGetCenter(RegionFromId(29)), false);
    DataTableSetUnit(true, "Piccolo", EventUnit());
    RegionAttachToUnit(RegionFromId(86), UnitFromId(106), Point(0.0, 0.0));
    TimerWindowCreate(gv_revivalTimerPiccolo, StringExternal("Param/Value/3B56F19E"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 1250, 150);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_revivalTimerPiccolo, 60.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_revivalTimerPiccolo);
    Wait(60.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    UnitSetPosition(RegionGetAttachUnit(RegionFromId(86)), RegionGetCenter(RegionFromId(21)), false);
    RegionAttachToUnit(RegionFromId(86), UnitFromId(106), Point(0.0, 0.0));
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DeathTriggerPiccolo_Init () {
    gt_DeathTriggerPiccolo = TriggerCreate("gt_DeathTriggerPiccolo_Func");
    TriggerAddEventUnitDamaged(gt_DeathTriggerPiccolo, UnitRefFromUnit(UnitFromId(106)), c_unitDamageTypeAny, c_unitDamageFatal, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Death Trigger Piccolo Fused (Nail)
//--------------------------------------------------------------------------------------------------
bool gt_DeathTriggerPiccoloFusedNail_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitRevive(UnitFromId(178));
    PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperSubtract, (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) / 10));
    BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    UnitSetPosition(UnitFromId(178), RegionGetCenter(RegionFromId(29)), false);
    DataTableSetUnit(true, "Piccolo", EventUnit());
    RegionAttachToUnit(RegionFromId(86), UnitFromId(178), Point(0.0, 0.0));
    TimerWindowCreate(gv_revivalTimerPiccolo, StringExternal("Param/Value/55C1D270"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 1250, 150);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_revivalTimerPiccolo, 60.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_revivalTimerPiccolo);
    Wait(60.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    UnitSetPosition(RegionGetAttachUnit(RegionFromId(86)), RegionGetCenter(RegionFromId(21)), false);
    RegionAttachToUnit(RegionFromId(86), UnitFromId(178), Point(0.0, 0.0));
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DeathTriggerPiccoloFusedNail_Init () {
    gt_DeathTriggerPiccoloFusedNail = TriggerCreate("gt_DeathTriggerPiccoloFusedNail_Func");
    TriggerAddEventUnitDamaged(gt_DeathTriggerPiccoloFusedNail, UnitRefFromUnit(UnitFromId(178)), c_unitDamageTypeAny, c_unitDamageFatal, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Death Trigger Piccolo Fused (Kami)
//--------------------------------------------------------------------------------------------------
bool gt_DeathTriggerPiccoloFusedKami_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitRevive(UnitFromId(180));
    PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperSubtract, (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) / 10));
    BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    UnitSetPosition(UnitFromId(180), RegionGetCenter(RegionFromId(29)), false);
    DataTableSetUnit(true, "Piccolo", EventUnit());
    RegionAttachToUnit(RegionFromId(86), UnitFromId(180), Point(0.0, 0.0));
    TimerWindowCreate(gv_revivalTimerPiccolo, StringExternal("Param/Value/5524A5F0"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 1250, 150);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_revivalTimerPiccolo, 60.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_revivalTimerPiccolo);
    Wait(60.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    UnitSetPosition(RegionGetAttachUnit(RegionFromId(86)), RegionGetCenter(RegionFromId(21)), false);
    RegionAttachToUnit(RegionFromId(86), UnitFromId(180), Point(0.0, 0.0));
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DeathTriggerPiccoloFusedKami_Init () {
    gt_DeathTriggerPiccoloFusedKami = TriggerCreate("gt_DeathTriggerPiccoloFusedKami_Func");
    TriggerAddEventUnitDamaged(gt_DeathTriggerPiccoloFusedKami, UnitRefFromUnit(UnitFromId(180)), c_unitDamageTypeAny, c_unitDamageFatal, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Death Trigger Evil King Piccolo
//--------------------------------------------------------------------------------------------------
bool gt_DeathTriggerEvilKingPiccolo_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitRevive(UnitFromId(170));
    PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperSubtract, (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) / 10));
    BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    UnitSetPosition(UnitFromId(170), RegionGetCenter(RegionFromId(29)), false);
    DataTableSetUnit(true, "Piccolo", EventUnit());
    RegionAttachToUnit(RegionFromId(86), UnitFromId(170), Point(0.0, 0.0));
    TimerWindowCreate(gv_revivalTimerPiccolo, StringExternal("Param/Value/F5FB7BD9"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 1250, 150);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_revivalTimerPiccolo, 60.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_revivalTimerPiccolo);
    Wait(60.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    UnitSetPosition(RegionGetAttachUnit(RegionFromId(86)), RegionGetCenter(RegionFromId(21)), false);
    RegionAttachToUnit(RegionFromId(86), UnitFromId(170), Point(0.0, 0.0));
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DeathTriggerEvilKingPiccolo_Init () {
    gt_DeathTriggerEvilKingPiccolo = TriggerCreate("gt_DeathTriggerEvilKingPiccolo_Func");
    TriggerAddEventUnitDamaged(gt_DeathTriggerEvilKingPiccolo, UnitRefFromUnit(UnitFromId(170)), c_unitDamageTypeAny, c_unitDamageFatal, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Death Trigger Trunks
//--------------------------------------------------------------------------------------------------
bool gt_DeathTriggerTrunks_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitRevive(UnitFromId(107));
    PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperSubtract, (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) / 10));
    BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    UnitSetPosition(UnitFromId(107), RegionGetCenter(RegionFromId(29)), false);
    DataTableSetUnit(true, "Trunks", EventUnit());
    RegionAttachToUnit(RegionFromId(87), UnitFromId(107), Point(0.0, 0.0));
    TimerWindowCreate(gv_revivalTimerTrunks, StringExternal("Param/Value/F2F85002"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 1250, 200);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_revivalTimerTrunks, 60.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_revivalTimerTrunks);
    Wait(60.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    UnitSetPosition(RegionGetAttachUnit(RegionFromId(87)), RegionGetCenter(RegionFromId(21)), false);
    RegionAttachToUnit(RegionFromId(87), UnitFromId(107), Point(0.0, 0.0));
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DeathTriggerTrunks_Init () {
    gt_DeathTriggerTrunks = TriggerCreate("gt_DeathTriggerTrunks_Func");
    TriggerAddEventUnitDamaged(gt_DeathTriggerTrunks, UnitRefFromUnit(UnitFromId(107)), c_unitDamageTypeAny, c_unitDamageFatal, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Death Trigger Trunks SSJ
//--------------------------------------------------------------------------------------------------
bool gt_DeathTriggerTrunksSSJ_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitRevive(UnitFromId(176));
    PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperSubtract, (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) / 10));
    BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    UnitSetPosition(UnitFromId(176), RegionGetCenter(RegionFromId(29)), false);
    DataTableSetUnit(true, "Trunks", EventUnit());
    RegionAttachToUnit(RegionFromId(87), UnitFromId(176), Point(0.0, 0.0));
    TimerWindowCreate(gv_revivalTimerTrunks, StringExternal("Param/Value/84B180AF"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 1250, 200);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_revivalTimerTrunks, 60.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_revivalTimerTrunks);
    Wait(60.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    UnitSetPosition(RegionGetAttachUnit(RegionFromId(87)), RegionGetCenter(RegionFromId(21)), false);
    RegionAttachToUnit(RegionFromId(87), UnitFromId(176), Point(0.0, 0.0));
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DeathTriggerTrunksSSJ_Init () {
    gt_DeathTriggerTrunksSSJ = TriggerCreate("gt_DeathTriggerTrunksSSJ_Func");
    TriggerAddEventUnitDamaged(gt_DeathTriggerTrunksSSJ, UnitRefFromUnit(UnitFromId(176)), c_unitDamageTypeAny, c_unitDamageFatal, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Death Trigger Gotenks (Trunks)
//--------------------------------------------------------------------------------------------------
bool gt_DeathTriggerGotenksTrunks_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitRevive(UnitFromId(181));
    PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperSubtract, (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) / 10));
    BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    UnitSetPosition(UnitFromId(181), RegionGetCenter(RegionFromId(29)), false);
    DataTableSetUnit(true, "Trunks", EventUnit());
    RegionAttachToUnit(RegionFromId(87), UnitFromId(181), Point(0.0, 0.0));
    TimerWindowCreate(gv_revivalTimerTrunks, StringExternal("Param/Value/02291C59"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 1250, 200);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_revivalTimerTrunks, 60.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_revivalTimerTrunks);
    Wait(60.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    UnitSetPosition(RegionGetAttachUnit(RegionFromId(87)), RegionGetCenter(RegionFromId(21)), false);
    RegionAttachToUnit(RegionFromId(87), UnitFromId(181), Point(0.0, 0.0));
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DeathTriggerGotenksTrunks_Init () {
    gt_DeathTriggerGotenksTrunks = TriggerCreate("gt_DeathTriggerGotenksTrunks_Func");
    TriggerAddEventUnitDamaged(gt_DeathTriggerGotenksTrunks, UnitRefFromUnit(UnitFromId(181)), c_unitDamageTypeAny, c_unitDamageFatal, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Death Trigger Gotenks SSJ (Trunks)
//--------------------------------------------------------------------------------------------------
bool gt_DeathTriggerGotenksSSJTrunks_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitRevive(UnitFromId(139));
    PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperSubtract, (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) / 10));
    BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    UnitSetPosition(UnitFromId(139), RegionGetCenter(RegionFromId(29)), false);
    DataTableSetUnit(true, "Trunks", EventUnit());
    RegionAttachToUnit(RegionFromId(87), UnitFromId(139), Point(0.0, 0.0));
    TimerWindowCreate(gv_revivalTimerTrunks, StringExternal("Param/Value/6F7B3BBD"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 1250, 200);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_revivalTimerTrunks, 60.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_revivalTimerTrunks);
    Wait(60.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    UnitSetPosition(RegionGetAttachUnit(RegionFromId(87)), RegionGetCenter(RegionFromId(21)), false);
    RegionAttachToUnit(RegionFromId(87), UnitFromId(139), Point(0.0, 0.0));
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DeathTriggerGotenksSSJTrunks_Init () {
    gt_DeathTriggerGotenksSSJTrunks = TriggerCreate("gt_DeathTriggerGotenksSSJTrunks_Func");
    TriggerAddEventUnitDamaged(gt_DeathTriggerGotenksSSJTrunks, UnitRefFromUnit(UnitFromId(139)), c_unitDamageTypeAny, c_unitDamageFatal, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Death Trigger Gotenks SSJ3 (Trunks)
//--------------------------------------------------------------------------------------------------
bool gt_DeathTriggerGotenksSSJ3Trunks_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitRevive(UnitFromId(185));
    PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperSubtract, (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) / 10));
    BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    UnitSetPosition(UnitFromId(185), RegionGetCenter(RegionFromId(29)), false);
    DataTableSetUnit(true, "Trunks", EventUnit());
    RegionAttachToUnit(RegionFromId(87), UnitFromId(185), Point(0.0, 0.0));
    TimerWindowCreate(gv_revivalTimerTrunks, StringExternal("Param/Value/3811B4BA"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 1250, 200);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_revivalTimerTrunks, 60.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_revivalTimerTrunks);
    Wait(60.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    UnitSetPosition(RegionGetAttachUnit(RegionFromId(87)), RegionGetCenter(RegionFromId(21)), false);
    RegionAttachToUnit(RegionFromId(87), UnitFromId(185), Point(0.0, 0.0));
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DeathTriggerGotenksSSJ3Trunks_Init () {
    gt_DeathTriggerGotenksSSJ3Trunks = TriggerCreate("gt_DeathTriggerGotenksSSJ3Trunks_Func");
    TriggerAddEventUnitDamaged(gt_DeathTriggerGotenksSSJ3Trunks, UnitRefFromUnit(UnitFromId(185)), c_unitDamageTypeAny, c_unitDamageFatal, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Death Trigger Goten
//--------------------------------------------------------------------------------------------------
bool gt_DeathTriggerGoten_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitRevive(UnitFromId(108));
    PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperSubtract, (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) / 10));
    BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    UnitSetPosition(UnitFromId(108), RegionGetCenter(RegionFromId(29)), false);
    DataTableSetUnit(true, "Goten", EventUnit());
    RegionAttachToUnit(RegionFromId(88), UnitFromId(108), Point(0.0, 0.0));
    TimerWindowCreate(gv_revivalTimerGoten, StringExternal("Param/Value/06832894"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 1250, 250);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_revivalTimerGoten, 60.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_revivalTimerGoten);
    Wait(60.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    UnitSetPosition(RegionGetAttachUnit(RegionFromId(88)), RegionGetCenter(RegionFromId(21)), false);
    RegionAttachToUnit(RegionFromId(88), UnitFromId(108), Point(0.0, 0.0));
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DeathTriggerGoten_Init () {
    gt_DeathTriggerGoten = TriggerCreate("gt_DeathTriggerGoten_Func");
    TriggerAddEventUnitDamaged(gt_DeathTriggerGoten, UnitRefFromUnit(UnitFromId(108)), c_unitDamageTypeAny, c_unitDamageFatal, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Death Trigger Goten SSJ
//--------------------------------------------------------------------------------------------------
bool gt_DeathTriggerGotenSSJ_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitRevive(UnitFromId(175));
    PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperSubtract, (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) / 10));
    BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    UnitSetPosition(UnitFromId(175), RegionGetCenter(RegionFromId(29)), false);
    DataTableSetUnit(true, "Goten", EventUnit());
    RegionAttachToUnit(RegionFromId(88), UnitFromId(175), Point(0.0, 0.0));
    TimerWindowCreate(gv_revivalTimerGoten, StringExternal("Param/Value/02F7D619"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 1250, 250);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_revivalTimerGoten, 60.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_revivalTimerGoten);
    Wait(60.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    UnitSetPosition(RegionGetAttachUnit(RegionFromId(88)), RegionGetCenter(RegionFromId(21)), false);
    RegionAttachToUnit(RegionFromId(88), UnitFromId(175), Point(0.0, 0.0));
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DeathTriggerGotenSSJ_Init () {
    gt_DeathTriggerGotenSSJ = TriggerCreate("gt_DeathTriggerGotenSSJ_Func");
    TriggerAddEventUnitDamaged(gt_DeathTriggerGotenSSJ, UnitRefFromUnit(UnitFromId(175)), c_unitDamageTypeAny, c_unitDamageFatal, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Death Trigger Gotenks (Goten)
//--------------------------------------------------------------------------------------------------
bool gt_DeathTriggerGotenksGoten_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitRevive(UnitFromId(182));
    PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperSubtract, (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) / 10));
    BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    UnitSetPosition(UnitFromId(182), RegionGetCenter(RegionFromId(29)), false);
    DataTableSetUnit(true, "Goten", EventUnit());
    RegionAttachToUnit(RegionFromId(88), UnitFromId(182), Point(0.0, 0.0));
    TimerWindowCreate(gv_revivalTimerGoten, StringExternal("Param/Value/DF1C30A9"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 1250, 250);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_revivalTimerGoten, 60.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_revivalTimerGoten);
    Wait(60.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    UnitSetPosition(RegionGetAttachUnit(RegionFromId(88)), RegionGetCenter(RegionFromId(21)), false);
    RegionAttachToUnit(RegionFromId(88), UnitFromId(182), Point(0.0, 0.0));
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DeathTriggerGotenksGoten_Init () {
    gt_DeathTriggerGotenksGoten = TriggerCreate("gt_DeathTriggerGotenksGoten_Func");
    TriggerAddEventUnitDamaged(gt_DeathTriggerGotenksGoten, UnitRefFromUnit(UnitFromId(182)), c_unitDamageTypeAny, c_unitDamageFatal, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Death Trigger Gotenks SSJ (Goten)
//--------------------------------------------------------------------------------------------------
bool gt_DeathTriggerGotenksSSJGoten_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitRevive(UnitFromId(140));
    PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperSubtract, (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) / 10));
    BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    UnitSetPosition(UnitFromId(140), RegionGetCenter(RegionFromId(29)), false);
    DataTableSetUnit(true, "Goten", EventUnit());
    RegionAttachToUnit(RegionFromId(88), UnitFromId(140), Point(0.0, 0.0));
    TimerWindowCreate(gv_revivalTimerGoten, StringExternal("Param/Value/E3375BDC"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 1250, 250);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_revivalTimerGoten, 60.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_revivalTimerGoten);
    Wait(60.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    UnitSetPosition(RegionGetAttachUnit(RegionFromId(88)), RegionGetCenter(RegionFromId(21)), false);
    RegionAttachToUnit(RegionFromId(88), UnitFromId(140), Point(0.0, 0.0));
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DeathTriggerGotenksSSJGoten_Init () {
    gt_DeathTriggerGotenksSSJGoten = TriggerCreate("gt_DeathTriggerGotenksSSJGoten_Func");
    TriggerAddEventUnitDamaged(gt_DeathTriggerGotenksSSJGoten, UnitRefFromUnit(UnitFromId(140)), c_unitDamageTypeAny, c_unitDamageFatal, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Death Trigger Gotenks SSJ3 (Goten)
//--------------------------------------------------------------------------------------------------
bool gt_DeathTriggerGotenksSSJ3Goten_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitRevive(UnitFromId(184));
    PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperSubtract, (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) / 10));
    BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    UnitSetPosition(UnitFromId(184), RegionGetCenter(RegionFromId(29)), false);
    DataTableSetUnit(true, "Goten", EventUnit());
    RegionAttachToUnit(RegionFromId(88), UnitFromId(184), Point(0.0, 0.0));
    TimerWindowCreate(gv_revivalTimerGoten, StringExternal("Param/Value/240E87A2"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 1250, 250);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_revivalTimerGoten, 60.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_revivalTimerGoten);
    Wait(60.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    UnitSetPosition(RegionGetAttachUnit(RegionFromId(88)), RegionGetCenter(RegionFromId(21)), false);
    RegionAttachToUnit(RegionFromId(88), UnitFromId(184), Point(0.0, 0.0));
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DeathTriggerGotenksSSJ3Goten_Init () {
    gt_DeathTriggerGotenksSSJ3Goten = TriggerCreate("gt_DeathTriggerGotenksSSJ3Goten_Func");
    TriggerAddEventUnitDamaged(gt_DeathTriggerGotenksSSJ3Goten, UnitRefFromUnit(UnitFromId(184)), c_unitDamageTypeAny, c_unitDamageFatal, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Death Trigger Gohan
//--------------------------------------------------------------------------------------------------
bool gt_DeathTriggerGohan_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitRevive(UnitFromId(109));
    PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperSubtract, (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) / 10));
    BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    UnitSetPosition(UnitFromId(109), RegionGetCenter(RegionFromId(29)), false);
    DataTableSetUnit(true, "Gohan", EventUnit());
    RegionAttachToUnit(RegionFromId(89), UnitFromId(109), Point(0.0, 0.0));
    TimerWindowCreate(gv_revivalTimerGohan, StringExternal("Param/Value/4ACE7D40"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 1250, 300);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_revivalTimerGohan, 60.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_revivalTimerGohan);
    Wait(60.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    UnitSetPosition(RegionGetAttachUnit(RegionFromId(89)), RegionGetCenter(RegionFromId(21)), false);
    RegionAttachToUnit(RegionFromId(89), UnitFromId(109), Point(0.0, 0.0));
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DeathTriggerGohan_Init () {
    gt_DeathTriggerGohan = TriggerCreate("gt_DeathTriggerGohan_Func");
    TriggerAddEventUnitDamaged(gt_DeathTriggerGohan, UnitRefFromUnit(UnitFromId(109)), c_unitDamageTypeAny, c_unitDamageFatal, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Death Trigger Gohan SSJ
//--------------------------------------------------------------------------------------------------
bool gt_DeathTriggerGohanSSJ_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitRevive(UnitFromId(172));
    PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperSubtract, (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) / 10));
    BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    UnitSetPosition(UnitFromId(172), RegionGetCenter(RegionFromId(29)), false);
    DataTableSetUnit(true, "Gohan", EventUnit());
    RegionAttachToUnit(RegionFromId(89), UnitFromId(172), Point(0.0, 0.0));
    TimerWindowCreate(gv_revivalTimerGohan, StringExternal("Param/Value/8053CE00"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 1250, 300);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_revivalTimerGohan, 60.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_revivalTimerGohan);
    Wait(60.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    UnitSetPosition(RegionGetAttachUnit(RegionFromId(89)), RegionGetCenter(RegionFromId(21)), false);
    RegionAttachToUnit(RegionFromId(89), UnitFromId(172), Point(0.0, 0.0));
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DeathTriggerGohanSSJ_Init () {
    gt_DeathTriggerGohanSSJ = TriggerCreate("gt_DeathTriggerGohanSSJ_Func");
    TriggerAddEventUnitDamaged(gt_DeathTriggerGohanSSJ, UnitRefFromUnit(UnitFromId(172)), c_unitDamageTypeAny, c_unitDamageFatal, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Death Trigger Gohan SSJ2
//--------------------------------------------------------------------------------------------------
bool gt_DeathTriggerGohanSSJ2_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitRevive(UnitFromId(186));
    PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperSubtract, (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) / 10));
    BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    UnitSetPosition(UnitFromId(186), RegionGetCenter(RegionFromId(29)), false);
    DataTableSetUnit(true, "Gohan", EventUnit());
    RegionAttachToUnit(RegionFromId(89), UnitFromId(186), Point(0.0, 0.0));
    TimerWindowCreate(gv_revivalTimerGohan, StringExternal("Param/Value/B72138E6"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 1250, 300);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_revivalTimerGohan, 60.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_revivalTimerGohan);
    Wait(60.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    UnitSetPosition(RegionGetAttachUnit(RegionFromId(89)), RegionGetCenter(RegionFromId(21)), false);
    RegionAttachToUnit(RegionFromId(89), UnitFromId(186), Point(0.0, 0.0));
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DeathTriggerGohanSSJ2_Init () {
    gt_DeathTriggerGohanSSJ2 = TriggerCreate("gt_DeathTriggerGohanSSJ2_Func");
    TriggerAddEventUnitDamaged(gt_DeathTriggerGohanSSJ2, UnitRefFromUnit(UnitFromId(186)), c_unitDamageTypeAny, c_unitDamageFatal, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Death Trigger Gohan (Mystic)
//--------------------------------------------------------------------------------------------------
bool gt_DeathTriggerGohanMystic_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitRevive(UnitFromId(169));
    PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperSubtract, (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) / 10));
    BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    UnitSetPosition(UnitFromId(169), RegionGetCenter(RegionFromId(29)), false);
    DataTableSetUnit(true, "Gohan", EventUnit());
    RegionAttachToUnit(RegionFromId(89), UnitFromId(169), Point(0.0, 0.0));
    TimerWindowCreate(gv_revivalTimerGohan, StringExternal("Param/Value/B35FE3A9"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 1250, 300);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_revivalTimerGohan, 60.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_revivalTimerGohan);
    Wait(60.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    UnitSetPosition(RegionGetAttachUnit(RegionFromId(89)), RegionGetCenter(RegionFromId(21)), false);
    RegionAttachToUnit(RegionFromId(89), UnitFromId(169), Point(0.0, 0.0));
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DeathTriggerGohanMystic_Init () {
    gt_DeathTriggerGohanMystic = TriggerCreate("gt_DeathTriggerGohanMystic_Func");
    TriggerAddEventUnitDamaged(gt_DeathTriggerGohanMystic, UnitRefFromUnit(UnitFromId(169)), c_unitDamageTypeAny, c_unitDamageFatal, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Add energy 1
//--------------------------------------------------------------------------------------------------
bool gt_Addenergy1_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 1) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 14999)) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500)) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperAdd, 2);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Addenergy1_Init () {
    gt_Addenergy1 = TriggerCreate("gt_Addenergy1_Func");
    TriggerAddEventTimePeriodic(gt_Addenergy1, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Add energy 2
//--------------------------------------------------------------------------------------------------
bool gt_Addenergy2_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 15000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 74999)) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500)) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperAdd, 3);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Addenergy2_Init () {
    gt_Addenergy2 = TriggerCreate("gt_Addenergy2_Func");
    TriggerAddEventTimePeriodic(gt_Addenergy2, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Add energy 3
//--------------------------------------------------------------------------------------------------
bool gt_Addenergy3_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 75000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 99999)) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500)) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperAdd, 4);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Addenergy3_Init () {
    gt_Addenergy3 = TriggerCreate("gt_Addenergy3_Func");
    TriggerAddEventTimePeriodic(gt_Addenergy3, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Add energy 4
//--------------------------------------------------------------------------------------------------
bool gt_Addenergy4_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 100000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 174999)) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500)) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperAdd, 5);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Addenergy4_Init () {
    gt_Addenergy4 = TriggerCreate("gt_Addenergy4_Func");
    TriggerAddEventTimePeriodic(gt_Addenergy4, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Add energy 5
//--------------------------------------------------------------------------------------------------
bool gt_Addenergy5_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 175000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 199999)) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500)) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperAdd, 6);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Addenergy5_Init () {
    gt_Addenergy5 = TriggerCreate("gt_Addenergy5_Func");
    TriggerAddEventTimePeriodic(gt_Addenergy5, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Add energy 6
//--------------------------------------------------------------------------------------------------
bool gt_Addenergy6_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 200000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 299999)) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500)) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperAdd, 7);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Addenergy6_Init () {
    gt_Addenergy6 = TriggerCreate("gt_Addenergy6_Func");
    TriggerAddEventTimePeriodic(gt_Addenergy6, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Add energy 7
//--------------------------------------------------------------------------------------------------
bool gt_Addenergy7_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 300000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 399999)) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500)) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperAdd, 8);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Addenergy7_Init () {
    gt_Addenergy7 = TriggerCreate("gt_Addenergy7_Func");
    TriggerAddEventTimePeriodic(gt_Addenergy7, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Add energy 8
//--------------------------------------------------------------------------------------------------
bool gt_Addenergy8_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 400000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 999999)) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500)) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperAdd, 9);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Addenergy8_Init () {
    gt_Addenergy8 = TriggerCreate("gt_Addenergy8_Func");
    TriggerAddEventTimePeriodic(gt_Addenergy8, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Add energy 9
//--------------------------------------------------------------------------------------------------
bool gt_Addenergy9_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 1000000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500)) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperAdd, 10);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Addenergy9_Init () {
    gt_Addenergy9 = TriggerCreate("gt_Addenergy9_Func");
    TriggerAddEventTimePeriodic(gt_Addenergy9, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Energy Cap
//--------------------------------------------------------------------------------------------------
bool gt_EnergyCap_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) > 500)) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperSetTo, 500);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_EnergyCap_Init () {
    gt_EnergyCap = TriggerCreate("gt_EnergyCap_Func");
    TriggerAddEventTimePeriodic(gt_EnergyCap, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Minerals
//--------------------------------------------------------------------------------------------------
bool gt_Minerals_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 100) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 499))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropMinerals, c_playerPropOperSetTo, 2);
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropCustom, c_playerPropOperSetTo, 1);
        }
        else {
        }
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 500) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 999))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropMinerals, c_playerPropOperSetTo, 4);
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropCustom, c_playerPropOperSetTo, 2);
        }
        else {
        }
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 1000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 1499))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropMinerals, c_playerPropOperSetTo, 6);
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropCustom, c_playerPropOperSetTo, 3);
        }
        else {
        }
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 1500) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 2999))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropMinerals, c_playerPropOperSetTo, 8);
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropCustom, c_playerPropOperSetTo, 4);
        }
        else {
        }
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 3000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 4999))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropMinerals, c_playerPropOperSetTo, 10);
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropCustom, c_playerPropOperSetTo, 5);
        }
        else {
        }
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 5000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 6999))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropMinerals, c_playerPropOperSetTo, 12);
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropCustom, c_playerPropOperSetTo, 6);
        }
        else {
        }
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 7000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 9999))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropMinerals, c_playerPropOperSetTo, 14);
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropCustom, c_playerPropOperSetTo, 7);
        }
        else {
        }
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 10000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 14999))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropMinerals, c_playerPropOperSetTo, 16);
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropCustom, c_playerPropOperSetTo, 8);
        }
        else {
        }
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 15000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 19999))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropMinerals, c_playerPropOperSetTo, 18);
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropCustom, c_playerPropOperSetTo, 9);
        }
        else {
        }
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 20000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 24999))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropMinerals, c_playerPropOperSetTo, 20);
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropCustom, c_playerPropOperSetTo, 10);
        }
        else {
        }
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 25000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 29999))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropMinerals, c_playerPropOperSetTo, 22);
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropCustom, c_playerPropOperSetTo, 11);
        }
        else {
        }
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 30000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 34999))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropMinerals, c_playerPropOperSetTo, 24);
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropCustom, c_playerPropOperSetTo, 12);
        }
        else {
        }
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 35000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 44999))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropMinerals, c_playerPropOperSetTo, 26);
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropCustom, c_playerPropOperSetTo, 13);
        }
        else {
        }
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 45000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 54999))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropMinerals, c_playerPropOperSetTo, 28);
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropCustom, c_playerPropOperSetTo, 14);
        }
        else {
        }
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 55000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 64999))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropMinerals, c_playerPropOperSetTo, 30);
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropCustom, c_playerPropOperSetTo, 15);
        }
        else {
        }
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 65000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 74999))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropMinerals, c_playerPropOperSetTo, 32);
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropCustom, c_playerPropOperSetTo, 16);
        }
        else {
        }
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 75000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 99999))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropMinerals, c_playerPropOperSetTo, 40);
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropCustom, c_playerPropOperSetTo, 17);
        }
        else {
        }
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 100000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 124999))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropMinerals, c_playerPropOperSetTo, 42);
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropCustom, c_playerPropOperSetTo, 18);
        }
        else {
        }
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 125000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 149999))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropMinerals, c_playerPropOperSetTo, 44);
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropCustom, c_playerPropOperSetTo, 19);
        }
        else {
        }
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 150000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 174999))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropMinerals, c_playerPropOperSetTo, 46);
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropCustom, c_playerPropOperSetTo, 20);
        }
        else {
        }
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 175000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 199999))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropMinerals, c_playerPropOperSetTo, 48);
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropCustom, c_playerPropOperSetTo, 21);
        }
        else {
        }
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 200000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 224999))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropMinerals, c_playerPropOperSetTo, 50);
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropCustom, c_playerPropOperSetTo, 22);
        }
        else {
        }
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 225000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 249999))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropMinerals, c_playerPropOperSetTo, 52);
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropCustom, c_playerPropOperSetTo, 23);
        }
        else {
        }
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 250000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 274999))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropMinerals, c_playerPropOperSetTo, 54);
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropCustom, c_playerPropOperSetTo, 24);
        }
        else {
        }
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 275000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 299999))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropMinerals, c_playerPropOperSetTo, 56);
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropCustom, c_playerPropOperSetTo, 25);
        }
        else {
        }
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 300000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 324999))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropMinerals, c_playerPropOperSetTo, 58);
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropCustom, c_playerPropOperSetTo, 26);
        }
        else {
        }
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 325000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 349999))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropMinerals, c_playerPropOperSetTo, 60);
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropCustom, c_playerPropOperSetTo, 27);
        }
        else {
        }
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 350000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 399999))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropMinerals, c_playerPropOperSetTo, 62);
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropCustom, c_playerPropOperSetTo, 28);
        }
        else {
        }
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 400000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 449999))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropMinerals, c_playerPropOperSetTo, 64);
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropCustom, c_playerPropOperSetTo, 29);
        }
        else {
        }
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 450000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 499999))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropMinerals, c_playerPropOperSetTo, 66);
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropCustom, c_playerPropOperSetTo, 30);
        }
        else {
        }
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 500000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 599999))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropMinerals, c_playerPropOperSetTo, 68);
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropCustom, c_playerPropOperSetTo, 31);
        }
        else {
        }
        if (((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 600000) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) <= 999999))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropMinerals, c_playerPropOperSetTo, 70);
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropCustom, c_playerPropOperSetTo, 32);
        }
        else {
        }
        if ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropVespene) >= 1000000)) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropMinerals, c_playerPropOperSetTo, 72);
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropCustom, c_playerPropOperSetTo, 33);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Minerals_Init () {
    gt_Minerals = TriggerCreate("gt_Minerals_Func");
    TriggerAddEventTimePeriodic(gt_Minerals, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Level Up Announcement Player 1
//--------------------------------------------------------------------------------------------------
bool gt_LevelUpAnnouncementPlayer1_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(1, c_playerPropCustom) > gv_customResourceVariable[0])) {
        SoundPlay(SoundLink("UpgradeSound", -1), PlayerGroupSingle(EventPlayer()), 100.0, 0.0);
        UIDisplayMessage(PlayerGroupSingle(1), c_messageAreaSubtitle, StringExternal("Param/Value/404B3D89"));
        gv_customResourceVariable[0] = PlayerGetPropertyInt(1, c_playerPropCustom);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_LevelUpAnnouncementPlayer1_Init () {
    gt_LevelUpAnnouncementPlayer1 = TriggerCreate("gt_LevelUpAnnouncementPlayer1_Func");
    TriggerAddEventPlayerPropChange(gt_LevelUpAnnouncementPlayer1, 1, c_playerPropCustom);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Level Up Announcement Player 2
//--------------------------------------------------------------------------------------------------
bool gt_LevelUpAnnouncementPlayer2_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(2, c_playerPropCustom) > gv_customResourceVariable[1])) {
        SoundPlay(SoundLink("UpgradeSound", -1), PlayerGroupSingle(EventPlayer()), 100.0, 0.0);
        UIDisplayMessage(PlayerGroupSingle(2), c_messageAreaSubtitle, StringExternal("Param/Value/044B0C20"));
        gv_customResourceVariable[1] = PlayerGetPropertyInt(2, c_playerPropCustom);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_LevelUpAnnouncementPlayer2_Init () {
    gt_LevelUpAnnouncementPlayer2 = TriggerCreate("gt_LevelUpAnnouncementPlayer2_Func");
    TriggerAddEventPlayerPropChange(gt_LevelUpAnnouncementPlayer2, 2, c_playerPropCustom);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Level Up Announcement Player 3
//--------------------------------------------------------------------------------------------------
bool gt_LevelUpAnnouncementPlayer3_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(3, c_playerPropCustom) > gv_customResourceVariable[2])) {
        SoundPlay(SoundLink("UpgradeSound", -1), PlayerGroupSingle(EventPlayer()), 100.0, 0.0);
        UIDisplayMessage(PlayerGroupSingle(3), c_messageAreaSubtitle, StringExternal("Param/Value/51ABE8F2"));
        gv_customResourceVariable[2] = PlayerGetPropertyInt(3, c_playerPropCustom);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_LevelUpAnnouncementPlayer3_Init () {
    gt_LevelUpAnnouncementPlayer3 = TriggerCreate("gt_LevelUpAnnouncementPlayer3_Func");
    TriggerAddEventPlayerPropChange(gt_LevelUpAnnouncementPlayer3, 3, c_playerPropCustom);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Level Up Announcement Player 4
//--------------------------------------------------------------------------------------------------
bool gt_LevelUpAnnouncementPlayer4_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(4, c_playerPropCustom) > gv_customResourceVariable[3])) {
        SoundPlay(SoundLink("UpgradeSound", -1), PlayerGroupSingle(EventPlayer()), 100.0, 0.0);
        UIDisplayMessage(PlayerGroupSingle(4), c_messageAreaSubtitle, StringExternal("Param/Value/9B918E96"));
        gv_customResourceVariable[3] = PlayerGetPropertyInt(4, c_playerPropCustom);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_LevelUpAnnouncementPlayer4_Init () {
    gt_LevelUpAnnouncementPlayer4 = TriggerCreate("gt_LevelUpAnnouncementPlayer4_Func");
    TriggerAddEventPlayerPropChange(gt_LevelUpAnnouncementPlayer4, 4, c_playerPropCustom);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Level Up Announcement Player 5
//--------------------------------------------------------------------------------------------------
bool gt_LevelUpAnnouncementPlayer5_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(5, c_playerPropCustom) > gv_customResourceVariable[4])) {
        SoundPlay(SoundLink("UpgradeSound", -1), PlayerGroupSingle(EventPlayer()), 100.0, 0.0);
        UIDisplayMessage(PlayerGroupSingle(5), c_messageAreaSubtitle, StringExternal("Param/Value/944BCFA8"));
        gv_customResourceVariable[4] = PlayerGetPropertyInt(5, c_playerPropCustom);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_LevelUpAnnouncementPlayer5_Init () {
    gt_LevelUpAnnouncementPlayer5 = TriggerCreate("gt_LevelUpAnnouncementPlayer5_Func");
    TriggerAddEventPlayerPropChange(gt_LevelUpAnnouncementPlayer5, 5, c_playerPropCustom);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Level Up Announcement Player 6
//--------------------------------------------------------------------------------------------------
bool gt_LevelUpAnnouncementPlayer6_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(6, c_playerPropCustom) > gv_customResourceVariable[5])) {
        SoundPlay(SoundLink("UpgradeSound", -1), PlayerGroupSingle(EventPlayer()), 100.0, 0.0);
        UIDisplayMessage(PlayerGroupSingle(6), c_messageAreaSubtitle, StringExternal("Param/Value/22AB7D81"));
        gv_customResourceVariable[5] = PlayerGetPropertyInt(6, c_playerPropCustom);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_LevelUpAnnouncementPlayer6_Init () {
    gt_LevelUpAnnouncementPlayer6 = TriggerCreate("gt_LevelUpAnnouncementPlayer6_Func");
    TriggerAddEventPlayerPropChange(gt_LevelUpAnnouncementPlayer6, 6, c_playerPropCustom);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Revert Trigger Goku SSJ
//--------------------------------------------------------------------------------------------------
bool gt_RevertTriggerGokuSSJ_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 3) && (UnitGetOwner(UnitFromId(173)) == IntLoopCurrent())) {
            DataTableSetUnit(false, "Goku", UnitFromId(104));
            DataTableSetUnit(true, "Goku New", UnitFromId(104));
            UnitSetOwner(DataTableGetUnit(true, "Goku New"), UnitGetOwner(UnitFromId(173)), true);
            UnitSetPosition(DataTableGetUnit(true, "Goku New"), UnitGetPosition(DataTableGetUnit(true, "Goku")), false);
            UnitSetOwner(DataTableGetUnit(true, "Goku"), 0, true);
            UnitSetPosition(DataTableGetUnit(true, "Goku"), UnitGetPosition(UnitFromId(29)), false);
            DataTableSetUnit(true, "Goku", UnitFromId(104));
            RegionAttachToUnit(RegionFromId(84), UnitFromId(104), Point(0.0, 0.0));
            UnitControlGroupAddUnit(UnitGetOwner(UnitFromId(104)), 1, UnitFromId(104));
            UIDisplayMessage(PlayerGroupSingle(IntLoopCurrent()), c_messageAreaSubtitle, StringExternal("Param/Value/E3649574"));
            TextTagAttachToUnit(gv_playerNames[0], UnitFromId(104), -1.0);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RevertTriggerGokuSSJ_Init () {
    gt_RevertTriggerGokuSSJ = TriggerCreate("gt_RevertTriggerGokuSSJ_Func");
    TriggerAddEventTimePeriodic(gt_RevertTriggerGokuSSJ, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Revert Trigger Goku SSJ 2
//--------------------------------------------------------------------------------------------------
bool gt_RevertTriggerGokuSSJ2_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 6) && (UnitGetOwner(UnitFromId(179)) == IntLoopCurrent())) {
            DataTableSetUnit(false, "Goku", UnitFromId(104));
            DataTableSetUnit(true, "Goku New", UnitFromId(104));
            UnitSetOwner(DataTableGetUnit(true, "Goku New"), UnitGetOwner(UnitFromId(179)), true);
            UnitSetPosition(DataTableGetUnit(true, "Goku New"), UnitGetPosition(DataTableGetUnit(true, "Goku")), false);
            UnitSetOwner(DataTableGetUnit(true, "Goku"), 0, true);
            UnitSetPosition(DataTableGetUnit(true, "Goku"), UnitGetPosition(UnitFromId(29)), false);
            DataTableSetUnit(true, "Goku", UnitFromId(104));
            RegionAttachToUnit(RegionFromId(84), UnitFromId(104), Point(0.0, 0.0));
            UnitControlGroupAddUnit(UnitGetOwner(UnitFromId(104)), 1, UnitFromId(104));
            UIDisplayMessage(PlayerGroupSingle(IntLoopCurrent()), c_messageAreaSubtitle, StringExternal("Param/Value/F48531E4"));
            TextTagAttachToUnit(gv_playerNames[0], UnitFromId(104), -1.0);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RevertTriggerGokuSSJ2_Init () {
    gt_RevertTriggerGokuSSJ2 = TriggerCreate("gt_RevertTriggerGokuSSJ2_Func");
    TriggerAddEventTimePeriodic(gt_RevertTriggerGokuSSJ2, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Revert Trigger Goku SSJ 3
//--------------------------------------------------------------------------------------------------
bool gt_RevertTriggerGokuSSJ3_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 9) && (UnitGetOwner(UnitFromId(174)) == IntLoopCurrent())) {
            DataTableSetUnit(false, "Goku", UnitFromId(104));
            DataTableSetUnit(true, "Goku New", UnitFromId(104));
            UnitSetOwner(DataTableGetUnit(true, "Goku New"), UnitGetOwner(UnitFromId(174)), true);
            UnitSetPosition(DataTableGetUnit(true, "Goku New"), UnitGetPosition(DataTableGetUnit(true, "Goku")), false);
            UnitSetOwner(DataTableGetUnit(true, "Goku"), 0, true);
            UnitSetPosition(DataTableGetUnit(true, "Goku"), UnitGetPosition(UnitFromId(29)), false);
            DataTableSetUnit(true, "Goku", UnitFromId(104));
            RegionAttachToUnit(RegionFromId(84), UnitFromId(104), Point(0.0, 0.0));
            UnitControlGroupAddUnit(UnitGetOwner(UnitFromId(104)), 1, UnitFromId(104));
            UIDisplayMessage(PlayerGroupSingle(IntLoopCurrent()), c_messageAreaSubtitle, StringExternal("Param/Value/ABFFBF43"));
            TextTagAttachToUnit(gv_playerNames[0], UnitFromId(104), -1.0);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RevertTriggerGokuSSJ3_Init () {
    gt_RevertTriggerGokuSSJ3 = TriggerCreate("gt_RevertTriggerGokuSSJ3_Func");
    TriggerAddEventTimePeriodic(gt_RevertTriggerGokuSSJ3, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Revert Trigger Goku SSJ 4
//--------------------------------------------------------------------------------------------------
bool gt_RevertTriggerGokuSSJ4_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 19) && (UnitGetOwner(UnitFromId(141)) == IntLoopCurrent())) {
            DataTableSetUnit(false, "Goku", UnitFromId(104));
            DataTableSetUnit(true, "Goku New", UnitFromId(104));
            UnitSetOwner(DataTableGetUnit(true, "Goku New"), UnitGetOwner(UnitFromId(141)), true);
            UnitSetPosition(DataTableGetUnit(true, "Goku New"), UnitGetPosition(DataTableGetUnit(true, "Goku")), false);
            UnitSetOwner(DataTableGetUnit(true, "Goku"), 0, true);
            UnitSetPosition(DataTableGetUnit(true, "Goku"), UnitGetPosition(UnitFromId(29)), false);
            DataTableSetUnit(true, "Goku", UnitFromId(104));
            RegionAttachToUnit(RegionFromId(84), UnitFromId(104), Point(0.0, 0.0));
            UnitControlGroupAddUnit(UnitGetOwner(UnitFromId(104)), 1, UnitFromId(104));
            UIDisplayMessage(PlayerGroupSingle(IntLoopCurrent()), c_messageAreaSubtitle, StringExternal("Param/Value/CD19B317"));
            TextTagAttachToUnit(gv_playerNames[0], UnitFromId(104), -1.0);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RevertTriggerGokuSSJ4_Init () {
    gt_RevertTriggerGokuSSJ4 = TriggerCreate("gt_RevertTriggerGokuSSJ4_Func");
    TriggerAddEventTimePeriodic(gt_RevertTriggerGokuSSJ4, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Revert Trigger Vegito (Goku)
//--------------------------------------------------------------------------------------------------
bool gt_RevertTriggerVegitoGoku_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 11) && (UnitGetOwner(UnitFromId(167)) == IntLoopCurrent())) {
            DataTableSetUnit(false, "Goku", UnitFromId(104));
            DataTableSetUnit(true, "Goku New", UnitFromId(104));
            UnitSetOwner(DataTableGetUnit(true, "Goku New"), UnitGetOwner(UnitFromId(167)), true);
            UnitSetPosition(DataTableGetUnit(true, "Goku New"), UnitGetPosition(DataTableGetUnit(true, "Goku")), false);
            UnitSetOwner(DataTableGetUnit(true, "Goku"), 0, true);
            UnitSetPosition(DataTableGetUnit(true, "Goku"), UnitGetPosition(UnitFromId(29)), false);
            DataTableSetUnit(true, "Goku", UnitFromId(104));
            RegionAttachToUnit(RegionFromId(84), UnitFromId(104), Point(0.0, 0.0));
            UnitControlGroupAddUnit(UnitGetOwner(UnitFromId(104)), 1, UnitFromId(104));
            UIDisplayMessage(PlayerGroupSingle(IntLoopCurrent()), c_messageAreaSubtitle, StringExternal("Param/Value/6D539118"));
            TextTagAttachToUnit(gv_playerNames[0], UnitFromId(104), -1.0);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RevertTriggerVegitoGoku_Init () {
    gt_RevertTriggerVegitoGoku = TriggerCreate("gt_RevertTriggerVegitoGoku_Func");
    TriggerAddEventTimePeriodic(gt_RevertTriggerVegitoGoku, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Revert Trigger Super Vegito (Goku)
//--------------------------------------------------------------------------------------------------
bool gt_RevertTriggerSuperVegitoGoku_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 13) && (UnitGetOwner(UnitFromId(161)) == IntLoopCurrent())) {
            DataTableSetUnit(false, "Goku", UnitFromId(104));
            DataTableSetUnit(true, "Goku New", UnitFromId(104));
            UnitSetOwner(DataTableGetUnit(true, "Goku New"), UnitGetOwner(UnitFromId(161)), true);
            UnitSetPosition(DataTableGetUnit(true, "Goku New"), UnitGetPosition(DataTableGetUnit(true, "Goku")), false);
            UnitSetOwner(DataTableGetUnit(true, "Goku"), 0, true);
            UnitSetPosition(DataTableGetUnit(true, "Goku"), UnitGetPosition(UnitFromId(29)), false);
            DataTableSetUnit(true, "Goku", UnitFromId(104));
            RegionAttachToUnit(RegionFromId(84), UnitFromId(104), Point(0.0, 0.0));
            UnitControlGroupAddUnit(UnitGetOwner(UnitFromId(104)), 1, UnitFromId(104));
            UIDisplayMessage(PlayerGroupSingle(IntLoopCurrent()), c_messageAreaSubtitle, StringExternal("Param/Value/3680A808"));
            TextTagAttachToUnit(gv_playerNames[0], UnitFromId(104), -1.0);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RevertTriggerSuperVegitoGoku_Init () {
    gt_RevertTriggerSuperVegitoGoku = TriggerCreate("gt_RevertTriggerSuperVegitoGoku_Func");
    TriggerAddEventTimePeriodic(gt_RevertTriggerSuperVegitoGoku, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Revert Trigger Vegeta SSJ
//--------------------------------------------------------------------------------------------------
bool gt_RevertTriggerVegetaSSJ_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 4) && (UnitGetOwner(UnitFromId(187)) == IntLoopCurrent())) {
            DataTableSetUnit(false, "Vegeta", UnitFromId(105));
            DataTableSetUnit(true, "Vegeta New", UnitFromId(105));
            UnitSetOwner(DataTableGetUnit(true, "Vegeta New"), UnitGetOwner(UnitFromId(187)), true);
            UnitSetPosition(DataTableGetUnit(true, "Vegeta New"), UnitGetPosition(DataTableGetUnit(true, "Vegeta")), false);
            UnitSetOwner(DataTableGetUnit(true, "Vegeta"), 0, true);
            UnitSetPosition(DataTableGetUnit(true, "Vegeta"), UnitGetPosition(UnitFromId(29)), false);
            DataTableSetUnit(true, "Vegeta", UnitFromId(105));
            RegionAttachToUnit(RegionFromId(85), UnitFromId(105), Point(0.0, 0.0));
            UnitControlGroupAddUnit(UnitGetOwner(UnitFromId(105)), 1, UnitFromId(105));
            UIDisplayMessage(PlayerGroupSingle(IntLoopCurrent()), c_messageAreaSubtitle, StringExternal("Param/Value/973FA882"));
            TextTagAttachToUnit(gv_playerNames[1], UnitFromId(105), -1.0);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RevertTriggerVegetaSSJ_Init () {
    gt_RevertTriggerVegetaSSJ = TriggerCreate("gt_RevertTriggerVegetaSSJ_Func");
    TriggerAddEventTimePeriodic(gt_RevertTriggerVegetaSSJ, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Revert Trigger Vegeta SSJ 2
//--------------------------------------------------------------------------------------------------
bool gt_RevertTriggerVegetaSSJ2_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 6) && (UnitGetOwner(UnitFromId(177)) == IntLoopCurrent())) {
            DataTableSetUnit(false, "Vegeta", UnitFromId(105));
            DataTableSetUnit(true, "Vegeta New", UnitFromId(105));
            UnitSetOwner(DataTableGetUnit(true, "Vegeta New"), UnitGetOwner(UnitFromId(177)), true);
            UnitSetPosition(DataTableGetUnit(true, "Vegeta New"), UnitGetPosition(DataTableGetUnit(true, "Vegeta")), false);
            UnitSetOwner(DataTableGetUnit(true, "Vegeta"), 0, true);
            UnitSetPosition(DataTableGetUnit(true, "Vegeta"), UnitGetPosition(UnitFromId(29)), false);
            DataTableSetUnit(true, "Vegeta", UnitFromId(105));
            RegionAttachToUnit(RegionFromId(85), UnitFromId(105), Point(0.0, 0.0));
            UnitControlGroupAddUnit(UnitGetOwner(UnitFromId(105)), 1, UnitFromId(105));
            UIDisplayMessage(PlayerGroupSingle(IntLoopCurrent()), c_messageAreaSubtitle, StringExternal("Param/Value/33EE1E0F"));
            TextTagAttachToUnit(gv_playerNames[1], UnitFromId(105), -1.0);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RevertTriggerVegetaSSJ2_Init () {
    gt_RevertTriggerVegetaSSJ2 = TriggerCreate("gt_RevertTriggerVegetaSSJ2_Func");
    TriggerAddEventTimePeriodic(gt_RevertTriggerVegetaSSJ2, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Revert Trigger Majin Vegeta
//--------------------------------------------------------------------------------------------------
bool gt_RevertTriggerMajinVegeta_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 9) && (UnitGetOwner(UnitFromId(183)) == IntLoopCurrent())) {
            DataTableSetUnit(false, "Vegeta", UnitFromId(105));
            DataTableSetUnit(true, "Vegeta New", UnitFromId(105));
            UnitSetOwner(DataTableGetUnit(true, "Vegeta New"), UnitGetOwner(UnitFromId(183)), true);
            UnitSetPosition(DataTableGetUnit(true, "Vegeta New"), UnitGetPosition(DataTableGetUnit(true, "Vegeta")), false);
            UnitSetOwner(DataTableGetUnit(true, "Vegeta"), 0, true);
            UnitSetPosition(DataTableGetUnit(true, "Vegeta"), UnitGetPosition(UnitFromId(29)), false);
            DataTableSetUnit(true, "Vegeta", UnitFromId(105));
            RegionAttachToUnit(RegionFromId(85), UnitFromId(105), Point(0.0, 0.0));
            UnitControlGroupAddUnit(UnitGetOwner(UnitFromId(105)), 1, UnitFromId(105));
            UIDisplayMessage(PlayerGroupSingle(IntLoopCurrent()), c_messageAreaSubtitle, StringExternal("Param/Value/1BA3598C"));
            TextTagAttachToUnit(gv_playerNames[1], UnitFromId(105), -1.0);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RevertTriggerMajinVegeta_Init () {
    gt_RevertTriggerMajinVegeta = TriggerCreate("gt_RevertTriggerMajinVegeta_Func");
    TriggerAddEventTimePeriodic(gt_RevertTriggerMajinVegeta, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Revert Trigger Vegeta SSJ 4
//--------------------------------------------------------------------------------------------------
bool gt_RevertTriggerVegetaSSJ4_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 19) && (UnitGetOwner(UnitFromId(171)) == IntLoopCurrent())) {
            DataTableSetUnit(false, "Vegeta", UnitFromId(105));
            DataTableSetUnit(true, "Vegeta New", UnitFromId(105));
            UnitSetOwner(DataTableGetUnit(true, "Vegeta New"), UnitGetOwner(UnitFromId(171)), true);
            UnitSetPosition(DataTableGetUnit(true, "Vegeta New"), UnitGetPosition(DataTableGetUnit(true, "Vegeta")), false);
            UnitSetOwner(DataTableGetUnit(true, "Vegeta"), 0, true);
            UnitSetPosition(DataTableGetUnit(true, "Vegeta"), UnitGetPosition(UnitFromId(29)), false);
            DataTableSetUnit(true, "Vegeta", UnitFromId(105));
            RegionAttachToUnit(RegionFromId(85), UnitFromId(105), Point(0.0, 0.0));
            UnitControlGroupAddUnit(UnitGetOwner(UnitFromId(105)), 1, UnitFromId(105));
            UIDisplayMessage(PlayerGroupSingle(IntLoopCurrent()), c_messageAreaSubtitle, StringExternal("Param/Value/AE2069DD"));
            TextTagAttachToUnit(gv_playerNames[1], UnitFromId(105), -1.0);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RevertTriggerVegetaSSJ4_Init () {
    gt_RevertTriggerVegetaSSJ4 = TriggerCreate("gt_RevertTriggerVegetaSSJ4_Func");
    TriggerAddEventTimePeriodic(gt_RevertTriggerVegetaSSJ4, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Revert Trigger Vegito (Vegeta)
//--------------------------------------------------------------------------------------------------
bool gt_RevertTriggerVegitoVegeta_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 11) && (UnitGetOwner(UnitFromId(168)) == IntLoopCurrent())) {
            DataTableSetUnit(false, "Vegeta", UnitFromId(105));
            DataTableSetUnit(true, "Vegeta New", UnitFromId(105));
            UnitSetOwner(DataTableGetUnit(true, "Vegeta New"), UnitGetOwner(UnitFromId(168)), true);
            UnitSetPosition(DataTableGetUnit(true, "Vegeta New"), UnitGetPosition(DataTableGetUnit(true, "Vegeta")), false);
            UnitSetOwner(DataTableGetUnit(true, "Vegeta"), 0, true);
            UnitSetPosition(DataTableGetUnit(true, "Vegeta"), UnitGetPosition(UnitFromId(29)), false);
            DataTableSetUnit(true, "Vegeta", UnitFromId(105));
            RegionAttachToUnit(RegionFromId(85), UnitFromId(105), Point(0.0, 0.0));
            UnitControlGroupAddUnit(UnitGetOwner(UnitFromId(105)), 1, UnitFromId(105));
            UIDisplayMessage(PlayerGroupSingle(IntLoopCurrent()), c_messageAreaSubtitle, StringExternal("Param/Value/80E10BFD"));
            TextTagAttachToUnit(gv_playerNames[1], UnitFromId(105), -1.0);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RevertTriggerVegitoVegeta_Init () {
    gt_RevertTriggerVegitoVegeta = TriggerCreate("gt_RevertTriggerVegitoVegeta_Func");
    TriggerAddEventTimePeriodic(gt_RevertTriggerVegitoVegeta, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Revert Trigger Super Vegito (Vegeta )
//--------------------------------------------------------------------------------------------------
bool gt_RevertTriggerSuperVegitoVegeta_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 13) && (UnitGetOwner(UnitFromId(146)) == IntLoopCurrent())) {
            DataTableSetUnit(false, "Vegeta", UnitFromId(105));
            DataTableSetUnit(true, "Vegeta New", UnitFromId(105));
            UnitSetOwner(DataTableGetUnit(true, "Vegeta New"), UnitGetOwner(UnitFromId(146)), true);
            UnitSetPosition(DataTableGetUnit(true, "Vegeta New"), UnitGetPosition(DataTableGetUnit(true, "Vegeta")), false);
            UnitSetOwner(DataTableGetUnit(true, "Vegeta"), 0, true);
            UnitSetPosition(DataTableGetUnit(true, "Vegeta"), UnitGetPosition(UnitFromId(29)), false);
            DataTableSetUnit(true, "Vegeta", UnitFromId(105));
            RegionAttachToUnit(RegionFromId(85), UnitFromId(105), Point(0.0, 0.0));
            UnitControlGroupAddUnit(UnitGetOwner(UnitFromId(105)), 1, UnitFromId(105));
            UIDisplayMessage(PlayerGroupSingle(IntLoopCurrent()), c_messageAreaSubtitle, StringExternal("Param/Value/7C7C6B60"));
            TextTagAttachToUnit(gv_playerNames[1], UnitFromId(105), -1.0);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RevertTriggerSuperVegitoVegeta_Init () {
    gt_RevertTriggerSuperVegitoVegeta = TriggerCreate("gt_RevertTriggerSuperVegitoVegeta_Func");
    TriggerAddEventTimePeriodic(gt_RevertTriggerSuperVegitoVegeta, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Revert Trigger Piccolo Fused (Nail)
//--------------------------------------------------------------------------------------------------
bool gt_RevertTriggerPiccoloFusedNail_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 4) && (UnitGetOwner(UnitFromId(178)) == IntLoopCurrent())) {
            DataTableSetUnit(false, "Piccolo", UnitFromId(106));
            DataTableSetUnit(true, "Piccolo New", UnitFromId(106));
            UnitSetOwner(DataTableGetUnit(true, "Piccolo New"), UnitGetOwner(UnitFromId(178)), true);
            UnitSetPosition(DataTableGetUnit(true, "Piccolo New"), UnitGetPosition(DataTableGetUnit(true, "Piccolo")), false);
            UnitSetOwner(DataTableGetUnit(true, "Piccolo"), 0, true);
            UnitSetPosition(DataTableGetUnit(true, "Piccolo"), UnitGetPosition(UnitFromId(29)), false);
            DataTableSetUnit(true, "Piccolo", UnitFromId(106));
            RegionAttachToUnit(RegionFromId(86), UnitFromId(106), Point(0.0, 0.0));
            UnitControlGroupAddUnit(UnitGetOwner(UnitFromId(106)), 1, UnitFromId(106));
            UIDisplayMessage(PlayerGroupSingle(IntLoopCurrent()), c_messageAreaSubtitle, StringExternal("Param/Value/014DC201"));
            TextTagAttachToUnit(gv_playerNames[2], UnitFromId(106), -1.0);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RevertTriggerPiccoloFusedNail_Init () {
    gt_RevertTriggerPiccoloFusedNail = TriggerCreate("gt_RevertTriggerPiccoloFusedNail_Func");
    TriggerAddEventTimePeriodic(gt_RevertTriggerPiccoloFusedNail, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Revert Trigger Piccolo Fused (Kami)
//--------------------------------------------------------------------------------------------------
bool gt_RevertTriggerPiccoloFusedKami_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 6) && (UnitGetOwner(UnitFromId(180)) == IntLoopCurrent())) {
            DataTableSetUnit(false, "Piccolo", UnitFromId(106));
            DataTableSetUnit(true, "Piccolo New", UnitFromId(106));
            UnitSetOwner(DataTableGetUnit(true, "Piccolo New"), UnitGetOwner(UnitFromId(180)), true);
            UnitSetPosition(DataTableGetUnit(true, "Piccolo New"), UnitGetPosition(DataTableGetUnit(true, "Piccolo")), false);
            UnitSetOwner(DataTableGetUnit(true, "Piccolo"), 0, true);
            UnitSetPosition(DataTableGetUnit(true, "Piccolo"), UnitGetPosition(UnitFromId(29)), false);
            DataTableSetUnit(true, "Piccolo", UnitFromId(106));
            RegionAttachToUnit(RegionFromId(86), UnitFromId(106), Point(0.0, 0.0));
            UnitControlGroupAddUnit(UnitGetOwner(UnitFromId(106)), 1, UnitFromId(106));
            UIDisplayMessage(PlayerGroupSingle(IntLoopCurrent()), c_messageAreaSubtitle, StringExternal("Param/Value/212DCAF4"));
            TextTagAttachToUnit(gv_playerNames[2], UnitFromId(106), -1.0);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RevertTriggerPiccoloFusedKami_Init () {
    gt_RevertTriggerPiccoloFusedKami = TriggerCreate("gt_RevertTriggerPiccoloFusedKami_Func");
    TriggerAddEventTimePeriodic(gt_RevertTriggerPiccoloFusedKami, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Revert Trigger Evil King Piccolo
//--------------------------------------------------------------------------------------------------
bool gt_RevertTriggerEvilKingPiccolo_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 9) && (UnitGetOwner(UnitFromId(170)) == IntLoopCurrent())) {
            DataTableSetUnit(false, "Piccolo", UnitFromId(106));
            DataTableSetUnit(true, "Piccolo New", UnitFromId(106));
            UnitSetOwner(DataTableGetUnit(true, "Piccolo New"), UnitGetOwner(UnitFromId(170)), true);
            UnitSetPosition(DataTableGetUnit(true, "Piccolo New"), UnitGetPosition(DataTableGetUnit(true, "Piccolo")), false);
            UnitSetOwner(DataTableGetUnit(true, "Piccolo"), 0, true);
            UnitSetPosition(DataTableGetUnit(true, "Piccolo"), UnitGetPosition(UnitFromId(29)), false);
            DataTableSetUnit(true, "Piccolo", UnitFromId(106));
            RegionAttachToUnit(RegionFromId(86), UnitFromId(106), Point(0.0, 0.0));
            UnitControlGroupAddUnit(UnitGetOwner(UnitFromId(106)), 1, UnitFromId(106));
            UIDisplayMessage(PlayerGroupSingle(IntLoopCurrent()), c_messageAreaSubtitle, StringExternal("Param/Value/3090C55C"));
            TextTagAttachToUnit(gv_playerNames[2], UnitFromId(106), -1.0);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RevertTriggerEvilKingPiccolo_Init () {
    gt_RevertTriggerEvilKingPiccolo = TriggerCreate("gt_RevertTriggerEvilKingPiccolo_Func");
    TriggerAddEventTimePeriodic(gt_RevertTriggerEvilKingPiccolo, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Revert Trigger Trunks SSJ
//--------------------------------------------------------------------------------------------------
bool gt_RevertTriggerTrunksSSJ_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 4) && (UnitGetOwner(UnitFromId(176)) == IntLoopCurrent())) {
            DataTableSetUnit(false, "Trunks", UnitFromId(107));
            DataTableSetUnit(true, "Trunks New", UnitFromId(107));
            UnitSetOwner(DataTableGetUnit(true, "Trunks New"), UnitGetOwner(UnitFromId(176)), true);
            UnitSetPosition(DataTableGetUnit(true, "Trunks New"), UnitGetPosition(DataTableGetUnit(true, "Trunks")), false);
            UnitSetOwner(DataTableGetUnit(true, "Trunks"), 0, true);
            UnitSetPosition(DataTableGetUnit(true, "Trunks"), UnitGetPosition(UnitFromId(29)), false);
            DataTableSetUnit(true, "Trunks", UnitFromId(107));
            RegionAttachToUnit(RegionFromId(87), UnitFromId(107), Point(0.0, 0.0));
            UnitControlGroupAddUnit(UnitGetOwner(UnitFromId(107)), 1, UnitFromId(107));
            UIDisplayMessage(PlayerGroupSingle(IntLoopCurrent()), c_messageAreaSubtitle, StringExternal("Param/Value/8B5FAE1B"));
            TextTagAttachToUnit(gv_playerNames[3], UnitFromId(107), -1.0);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RevertTriggerTrunksSSJ_Init () {
    gt_RevertTriggerTrunksSSJ = TriggerCreate("gt_RevertTriggerTrunksSSJ_Func");
    TriggerAddEventTimePeriodic(gt_RevertTriggerTrunksSSJ, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Revert Trigger Gotenks (Trunks)
//--------------------------------------------------------------------------------------------------
bool gt_RevertTriggerGotenksTrunks_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 6) && (UnitGetOwner(UnitFromId(181)) == IntLoopCurrent())) {
            DataTableSetUnit(false, "Trunks", UnitFromId(107));
            DataTableSetUnit(true, "Trunks New", UnitFromId(107));
            UnitSetOwner(DataTableGetUnit(true, "Trunks New"), UnitGetOwner(UnitFromId(181)), true);
            UnitSetPosition(DataTableGetUnit(true, "Trunks New"), UnitGetPosition(DataTableGetUnit(true, "Trunks")), false);
            UnitSetOwner(DataTableGetUnit(true, "Trunks"), 0, true);
            UnitSetPosition(DataTableGetUnit(true, "Trunks"), UnitGetPosition(UnitFromId(29)), false);
            DataTableSetUnit(true, "Trunks", UnitFromId(107));
            RegionAttachToUnit(RegionFromId(87), UnitFromId(107), Point(0.0, 0.0));
            UnitControlGroupAddUnit(UnitGetOwner(UnitFromId(107)), 1, UnitFromId(107));
            UIDisplayMessage(PlayerGroupSingle(IntLoopCurrent()), c_messageAreaSubtitle, StringExternal("Param/Value/813F410B"));
            TextTagAttachToUnit(gv_playerNames[3], UnitFromId(107), -1.0);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RevertTriggerGotenksTrunks_Init () {
    gt_RevertTriggerGotenksTrunks = TriggerCreate("gt_RevertTriggerGotenksTrunks_Func");
    TriggerAddEventTimePeriodic(gt_RevertTriggerGotenksTrunks, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Revert Trigger Gotenks SSJ (Trunks)
//--------------------------------------------------------------------------------------------------
bool gt_RevertTriggerGotenksSSJTrunks_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 8) && (UnitGetOwner(UnitFromId(139)) == IntLoopCurrent())) {
            DataTableSetUnit(false, "Trunks", UnitFromId(107));
            DataTableSetUnit(true, "Trunks New", UnitFromId(107));
            UnitSetOwner(DataTableGetUnit(true, "Trunks New"), UnitGetOwner(UnitFromId(139)), true);
            UnitSetPosition(DataTableGetUnit(true, "Trunks New"), UnitGetPosition(DataTableGetUnit(true, "Trunks")), false);
            UnitSetOwner(DataTableGetUnit(true, "Trunks"), 0, true);
            UnitSetPosition(DataTableGetUnit(true, "Trunks"), UnitGetPosition(UnitFromId(29)), false);
            DataTableSetUnit(true, "Trunks", UnitFromId(107));
            RegionAttachToUnit(RegionFromId(87), UnitFromId(107), Point(0.0, 0.0));
            UnitControlGroupAddUnit(UnitGetOwner(UnitFromId(107)), 1, UnitFromId(107));
            UIDisplayMessage(PlayerGroupSingle(IntLoopCurrent()), c_messageAreaSubtitle, StringExternal("Param/Value/1228CD91"));
            TextTagAttachToUnit(gv_playerNames[3], UnitFromId(107), -1.0);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RevertTriggerGotenksSSJTrunks_Init () {
    gt_RevertTriggerGotenksSSJTrunks = TriggerCreate("gt_RevertTriggerGotenksSSJTrunks_Func");
    TriggerAddEventTimePeriodic(gt_RevertTriggerGotenksSSJTrunks, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Revert Trigger Gotenks SSJ 3 (Trunks)
//--------------------------------------------------------------------------------------------------
bool gt_RevertTriggerGotenksSSJ3Trunks_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 11) && (UnitGetOwner(UnitFromId(185)) == IntLoopCurrent())) {
            DataTableSetUnit(false, "Trunks", UnitFromId(107));
            DataTableSetUnit(true, "Trunks New", UnitFromId(107));
            UnitSetOwner(DataTableGetUnit(true, "Trunks New"), UnitGetOwner(UnitFromId(185)), true);
            UnitSetPosition(DataTableGetUnit(true, "Trunks New"), UnitGetPosition(DataTableGetUnit(true, "Trunks")), false);
            UnitSetOwner(DataTableGetUnit(true, "Trunks"), 0, true);
            UnitSetPosition(DataTableGetUnit(true, "Trunks"), UnitGetPosition(UnitFromId(29)), false);
            DataTableSetUnit(true, "Trunks", UnitFromId(107));
            RegionAttachToUnit(RegionFromId(87), UnitFromId(107), Point(0.0, 0.0));
            UnitControlGroupAddUnit(UnitGetOwner(UnitFromId(107)), 1, UnitFromId(107));
            UIDisplayMessage(PlayerGroupSingle(IntLoopCurrent()), c_messageAreaSubtitle, StringExternal("Param/Value/1AD428F3"));
            TextTagAttachToUnit(gv_playerNames[3], UnitFromId(107), -1.0);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RevertTriggerGotenksSSJ3Trunks_Init () {
    gt_RevertTriggerGotenksSSJ3Trunks = TriggerCreate("gt_RevertTriggerGotenksSSJ3Trunks_Func");
    TriggerAddEventTimePeriodic(gt_RevertTriggerGotenksSSJ3Trunks, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Revert Trigger Goten SSJ
//--------------------------------------------------------------------------------------------------
bool gt_RevertTriggerGotenSSJ_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 3) && (UnitGetOwner(UnitFromId(175)) == IntLoopCurrent())) {
            DataTableSetUnit(false, "Goten", UnitFromId(108));
            DataTableSetUnit(true, "Goten New", UnitFromId(108));
            UnitSetOwner(DataTableGetUnit(true, "Goten New"), UnitGetOwner(UnitFromId(175)), true);
            UnitSetPosition(DataTableGetUnit(true, "Goten New"), UnitGetPosition(DataTableGetUnit(true, "Goten")), false);
            UnitSetOwner(DataTableGetUnit(true, "Goten"), 0, true);
            UnitSetPosition(DataTableGetUnit(true, "Goten"), UnitGetPosition(UnitFromId(29)), false);
            DataTableSetUnit(true, "Goten", UnitFromId(108));
            RegionAttachToUnit(RegionFromId(88), UnitFromId(108), Point(0.0, 0.0));
            UnitControlGroupAddUnit(UnitGetOwner(UnitFromId(108)), 1, UnitFromId(108));
            UIDisplayMessage(PlayerGroupSingle(IntLoopCurrent()), c_messageAreaSubtitle, StringExternal("Param/Value/145D0750"));
            TextTagAttachToUnit(gv_playerNames[4], UnitFromId(108), -1.0);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RevertTriggerGotenSSJ_Init () {
    gt_RevertTriggerGotenSSJ = TriggerCreate("gt_RevertTriggerGotenSSJ_Func");
    TriggerAddEventTimePeriodic(gt_RevertTriggerGotenSSJ, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Revert Trigger Gotenks (Goten)
//--------------------------------------------------------------------------------------------------
bool gt_RevertTriggerGotenksGoten_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 6) && (UnitGetOwner(UnitFromId(182)) == IntLoopCurrent())) {
            DataTableSetUnit(false, "Goten", UnitFromId(108));
            DataTableSetUnit(true, "Goten New", UnitFromId(108));
            UnitSetOwner(DataTableGetUnit(true, "Goten New"), UnitGetOwner(UnitFromId(182)), true);
            UnitSetPosition(DataTableGetUnit(true, "Goten New"), UnitGetPosition(DataTableGetUnit(true, "Goten")), false);
            UnitSetOwner(DataTableGetUnit(true, "Goten"), 0, true);
            UnitSetPosition(DataTableGetUnit(true, "Goten"), UnitGetPosition(UnitFromId(29)), false);
            DataTableSetUnit(true, "Goten", UnitFromId(108));
            RegionAttachToUnit(RegionFromId(88), UnitFromId(108), Point(0.0, 0.0));
            UnitControlGroupAddUnit(UnitGetOwner(UnitFromId(108)), 1, UnitFromId(108));
            UIDisplayMessage(PlayerGroupSingle(IntLoopCurrent()), c_messageAreaSubtitle, StringExternal("Param/Value/71E9B9CD"));
            TextTagAttachToUnit(gv_playerNames[4], UnitFromId(108), -1.0);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RevertTriggerGotenksGoten_Init () {
    gt_RevertTriggerGotenksGoten = TriggerCreate("gt_RevertTriggerGotenksGoten_Func");
    TriggerAddEventTimePeriodic(gt_RevertTriggerGotenksGoten, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Revert Trigger Gotenks SSJ (Goten)
//--------------------------------------------------------------------------------------------------
bool gt_RevertTriggerGotenksSSJGoten_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 8) && (UnitGetOwner(UnitFromId(140)) == IntLoopCurrent())) {
            DataTableSetUnit(false, "Goten", UnitFromId(108));
            DataTableSetUnit(true, "Goten New", UnitFromId(108));
            UnitSetOwner(DataTableGetUnit(true, "Goten New"), UnitGetOwner(UnitFromId(140)), true);
            UnitSetPosition(DataTableGetUnit(true, "Goten New"), UnitGetPosition(DataTableGetUnit(true, "Goten")), false);
            UnitSetOwner(DataTableGetUnit(true, "Goten"), 0, true);
            UnitSetPosition(DataTableGetUnit(true, "Goten"), UnitGetPosition(UnitFromId(29)), false);
            DataTableSetUnit(true, "Goten", UnitFromId(108));
            RegionAttachToUnit(RegionFromId(88), UnitFromId(108), Point(0.0, 0.0));
            UnitControlGroupAddUnit(UnitGetOwner(UnitFromId(108)), 1, UnitFromId(108));
            UIDisplayMessage(PlayerGroupSingle(IntLoopCurrent()), c_messageAreaSubtitle, StringExternal("Param/Value/33D22544"));
            TextTagAttachToUnit(gv_playerNames[4], UnitFromId(108), -1.0);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RevertTriggerGotenksSSJGoten_Init () {
    gt_RevertTriggerGotenksSSJGoten = TriggerCreate("gt_RevertTriggerGotenksSSJGoten_Func");
    TriggerAddEventTimePeriodic(gt_RevertTriggerGotenksSSJGoten, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Revert Trigger Gotenks SSJ 3 (Goten)
//--------------------------------------------------------------------------------------------------
bool gt_RevertTriggerGotenksSSJ3Goten_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 11) && (UnitGetOwner(UnitFromId(184)) == IntLoopCurrent())) {
            DataTableSetUnit(false, "Goten", UnitFromId(108));
            DataTableSetUnit(true, "Goten New", UnitFromId(108));
            UnitSetOwner(DataTableGetUnit(true, "Goten New"), UnitGetOwner(UnitFromId(184)), true);
            UnitSetPosition(DataTableGetUnit(true, "Goten New"), UnitGetPosition(DataTableGetUnit(true, "Goten")), false);
            UnitSetOwner(DataTableGetUnit(true, "Goten"), 0, true);
            UnitSetPosition(DataTableGetUnit(true, "Goten"), UnitGetPosition(UnitFromId(29)), false);
            DataTableSetUnit(true, "Goten", UnitFromId(108));
            RegionAttachToUnit(RegionFromId(88), UnitFromId(108), Point(0.0, 0.0));
            UnitControlGroupAddUnit(UnitGetOwner(UnitFromId(108)), 1, UnitFromId(108));
            UIDisplayMessage(PlayerGroupSingle(IntLoopCurrent()), c_messageAreaSubtitle, StringExternal("Param/Value/07408A50"));
            TextTagAttachToUnit(gv_playerNames[4], UnitFromId(108), -1.0);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RevertTriggerGotenksSSJ3Goten_Init () {
    gt_RevertTriggerGotenksSSJ3Goten = TriggerCreate("gt_RevertTriggerGotenksSSJ3Goten_Func");
    TriggerAddEventTimePeriodic(gt_RevertTriggerGotenksSSJ3Goten, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Revert Trigger Gohan SSJ
//--------------------------------------------------------------------------------------------------
bool gt_RevertTriggerGohanSSJ_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 3) && (UnitGetOwner(UnitFromId(172)) == IntLoopCurrent())) {
            DataTableSetUnit(false, "Gohan", UnitFromId(109));
            DataTableSetUnit(true, "Gohan New", UnitFromId(109));
            UnitSetOwner(DataTableGetUnit(true, "Gohan New"), UnitGetOwner(UnitFromId(172)), true);
            UnitSetPosition(DataTableGetUnit(true, "Gohan New"), UnitGetPosition(DataTableGetUnit(true, "Gohan")), false);
            UnitSetOwner(DataTableGetUnit(true, "Gohan"), 0, true);
            UnitSetPosition(DataTableGetUnit(true, "Gohan"), UnitGetPosition(UnitFromId(29)), false);
            DataTableSetUnit(true, "Gohan", UnitFromId(109));
            RegionAttachToUnit(RegionFromId(89), UnitFromId(109), Point(0.0, 0.0));
            UnitControlGroupAddUnit(UnitGetOwner(UnitFromId(109)), 1, UnitFromId(109));
            UIDisplayMessage(PlayerGroupSingle(IntLoopCurrent()), c_messageAreaSubtitle, StringExternal("Param/Value/66E4A182"));
            TextTagAttachToUnit(gv_playerNames[5], UnitFromId(109), -1.0);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RevertTriggerGohanSSJ_Init () {
    gt_RevertTriggerGohanSSJ = TriggerCreate("gt_RevertTriggerGohanSSJ_Func");
    TriggerAddEventTimePeriodic(gt_RevertTriggerGohanSSJ, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Revert Trigger Gohan SSJ 2
//--------------------------------------------------------------------------------------------------
bool gt_RevertTriggerGohanSSJ2_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 6) && (UnitGetOwner(UnitFromId(186)) == IntLoopCurrent())) {
            DataTableSetUnit(false, "Gohan", UnitFromId(109));
            DataTableSetUnit(true, "Gohan New", UnitFromId(109));
            UnitSetOwner(DataTableGetUnit(true, "Gohan New"), UnitGetOwner(UnitFromId(186)), true);
            UnitSetPosition(DataTableGetUnit(true, "Gohan New"), UnitGetPosition(DataTableGetUnit(true, "Gohan")), false);
            UnitSetOwner(DataTableGetUnit(true, "Gohan"), 0, true);
            UnitSetPosition(DataTableGetUnit(true, "Gohan"), UnitGetPosition(UnitFromId(29)), false);
            DataTableSetUnit(true, "Gohan", UnitFromId(109));
            RegionAttachToUnit(RegionFromId(89), UnitFromId(109), Point(0.0, 0.0));
            UnitControlGroupAddUnit(UnitGetOwner(UnitFromId(109)), 1, UnitFromId(109));
            UIDisplayMessage(PlayerGroupSingle(IntLoopCurrent()), c_messageAreaSubtitle, StringExternal("Param/Value/D57764C7"));
            TextTagAttachToUnit(gv_playerNames[5], UnitFromId(109), -1.0);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RevertTriggerGohanSSJ2_Init () {
    gt_RevertTriggerGohanSSJ2 = TriggerCreate("gt_RevertTriggerGohanSSJ2_Func");
    TriggerAddEventTimePeriodic(gt_RevertTriggerGohanSSJ2, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Revert Trigger Mystic Gohan
//--------------------------------------------------------------------------------------------------
bool gt_RevertTriggerMysticGohan_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 8) && (UnitGetOwner(UnitFromId(169)) == IntLoopCurrent())) {
            DataTableSetUnit(false, "Gohan", UnitFromId(109));
            DataTableSetUnit(true, "Gohan New", UnitFromId(109));
            UnitSetOwner(DataTableGetUnit(true, "Gohan New"), UnitGetOwner(UnitFromId(169)), true);
            UnitSetPosition(DataTableGetUnit(true, "Gohan New"), UnitGetPosition(DataTableGetUnit(true, "Gohan")), false);
            UnitSetOwner(DataTableGetUnit(true, "Gohan"), 0, true);
            UnitSetPosition(DataTableGetUnit(true, "Gohan"), UnitGetPosition(UnitFromId(29)), false);
            DataTableSetUnit(true, "Gohan", UnitFromId(109));
            RegionAttachToUnit(RegionFromId(89), UnitFromId(109), Point(0.0, 0.0));
            UnitControlGroupAddUnit(UnitGetOwner(UnitFromId(109)), 1, UnitFromId(109));
            UIDisplayMessage(PlayerGroupSingle(IntLoopCurrent()), c_messageAreaSubtitle, StringExternal("Param/Value/44CB5023"));
            TextTagAttachToUnit(gv_playerNames[5], UnitFromId(109), -1.0);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RevertTriggerMysticGohan_Init () {
    gt_RevertTriggerMysticGohan = TriggerCreate("gt_RevertTriggerMysticGohan_Func");
    TriggerAddEventTimePeriodic(gt_RevertTriggerMysticGohan, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Heal Goku Training
//--------------------------------------------------------------------------------------------------
bool gt_HealGokuTraining_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    while ((libNtve_gf_UnitInRegion(UnitFromId(104), RegionFromId(30)) == true)) {
        UnitSetPropertyFixed(UnitFromId(104), c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(UnitFromId(104), c_unitPropShieldsPercent, 100.0);
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HealGokuTraining_Init () {
    gt_HealGokuTraining = TriggerCreate("gt_HealGokuTraining_Func");
    TriggerAddEventUnitRegion(gt_HealGokuTraining, UnitRefFromUnit(UnitFromId(104)), RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Heal Goku SSJ Training
//--------------------------------------------------------------------------------------------------
bool gt_HealGokuSSJTraining_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    while ((libNtve_gf_UnitInRegion(UnitFromId(173), RegionFromId(30)) == true)) {
        UnitSetPropertyFixed(UnitFromId(173), c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(UnitFromId(173), c_unitPropShieldsPercent, 100.0);
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HealGokuSSJTraining_Init () {
    gt_HealGokuSSJTraining = TriggerCreate("gt_HealGokuSSJTraining_Func");
    TriggerAddEventUnitRegion(gt_HealGokuSSJTraining, UnitRefFromUnit(UnitFromId(173)), RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Heal Goku SSJ 2 Training
//--------------------------------------------------------------------------------------------------
bool gt_HealGokuSSJ2Training_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    while ((libNtve_gf_UnitInRegion(UnitFromId(179), RegionFromId(30)) == true)) {
        UnitSetPropertyFixed(UnitFromId(179), c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(UnitFromId(179), c_unitPropShieldsPercent, 100.0);
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HealGokuSSJ2Training_Init () {
    gt_HealGokuSSJ2Training = TriggerCreate("gt_HealGokuSSJ2Training_Func");
    TriggerAddEventUnitRegion(gt_HealGokuSSJ2Training, UnitRefFromUnit(UnitFromId(179)), RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Heal Goku SSJ 3 Training
//--------------------------------------------------------------------------------------------------
bool gt_HealGokuSSJ3Training_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    while ((libNtve_gf_UnitInRegion(UnitFromId(174), RegionFromId(30)) == true)) {
        UnitSetPropertyFixed(UnitFromId(174), c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(UnitFromId(174), c_unitPropShieldsPercent, 100.0);
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HealGokuSSJ3Training_Init () {
    gt_HealGokuSSJ3Training = TriggerCreate("gt_HealGokuSSJ3Training_Func");
    TriggerAddEventUnitRegion(gt_HealGokuSSJ3Training, UnitRefFromUnit(UnitFromId(174)), RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Heal Goku SSJ 4 Training
//--------------------------------------------------------------------------------------------------
bool gt_HealGokuSSJ4Training_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    while ((libNtve_gf_UnitInRegion(UnitFromId(141), RegionFromId(30)) == true)) {
        UnitSetPropertyFixed(UnitFromId(141), c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(UnitFromId(141), c_unitPropShieldsPercent, 100.0);
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HealGokuSSJ4Training_Init () {
    gt_HealGokuSSJ4Training = TriggerCreate("gt_HealGokuSSJ4Training_Func");
    TriggerAddEventUnitRegion(gt_HealGokuSSJ4Training, UnitRefFromUnit(UnitFromId(141)), RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Heal Vegito (Goku)Training
//--------------------------------------------------------------------------------------------------
bool gt_HealVegitoGokuTraining_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    while ((libNtve_gf_UnitInRegion(UnitFromId(167), RegionFromId(30)) == true)) {
        UnitSetPropertyFixed(UnitFromId(167), c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(UnitFromId(167), c_unitPropShieldsPercent, 100.0);
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HealVegitoGokuTraining_Init () {
    gt_HealVegitoGokuTraining = TriggerCreate("gt_HealVegitoGokuTraining_Func");
    TriggerAddEventUnitRegion(gt_HealVegitoGokuTraining, UnitRefFromUnit(UnitFromId(167)), RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Heal Super Vegito (Goku) Training
//--------------------------------------------------------------------------------------------------
bool gt_HealSuperVegitoGokuTraining_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    while ((libNtve_gf_UnitInRegion(UnitFromId(161), RegionFromId(30)) == true)) {
        UnitSetPropertyFixed(UnitFromId(161), c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(UnitFromId(161), c_unitPropShieldsPercent, 100.0);
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HealSuperVegitoGokuTraining_Init () {
    gt_HealSuperVegitoGokuTraining = TriggerCreate("gt_HealSuperVegitoGokuTraining_Func");
    TriggerAddEventUnitRegion(gt_HealSuperVegitoGokuTraining, UnitRefFromUnit(UnitFromId(161)), RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Heal Vegeta Training
//--------------------------------------------------------------------------------------------------
bool gt_HealVegetaTraining_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    while ((libNtve_gf_UnitInRegion(UnitFromId(105), RegionFromId(30)) == true)) {
        UnitSetPropertyFixed(UnitFromId(105), c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(UnitFromId(105), c_unitPropShieldsPercent, 100.0);
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HealVegetaTraining_Init () {
    gt_HealVegetaTraining = TriggerCreate("gt_HealVegetaTraining_Func");
    TriggerAddEventUnitRegion(gt_HealVegetaTraining, UnitRefFromUnit(UnitFromId(105)), RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Heal Vegeta SSJ Training
//--------------------------------------------------------------------------------------------------
bool gt_HealVegetaSSJTraining_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    while ((libNtve_gf_UnitInRegion(UnitFromId(187), RegionFromId(30)) == true)) {
        UnitSetPropertyFixed(UnitFromId(187), c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(UnitFromId(187), c_unitPropShieldsPercent, 100.0);
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HealVegetaSSJTraining_Init () {
    gt_HealVegetaSSJTraining = TriggerCreate("gt_HealVegetaSSJTraining_Func");
    TriggerAddEventUnitRegion(gt_HealVegetaSSJTraining, UnitRefFromUnit(UnitFromId(187)), RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Heal Vegeta SSJ 2 Training
//--------------------------------------------------------------------------------------------------
bool gt_HealVegetaSSJ2Training_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    while ((libNtve_gf_UnitInRegion(UnitFromId(177), RegionFromId(30)) == true)) {
        UnitSetPropertyFixed(UnitFromId(177), c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(UnitFromId(177), c_unitPropShieldsPercent, 100.0);
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HealVegetaSSJ2Training_Init () {
    gt_HealVegetaSSJ2Training = TriggerCreate("gt_HealVegetaSSJ2Training_Func");
    TriggerAddEventUnitRegion(gt_HealVegetaSSJ2Training, UnitRefFromUnit(UnitFromId(177)), RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Heal Majin Vegeta Training
//--------------------------------------------------------------------------------------------------
bool gt_HealMajinVegetaTraining_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    while ((libNtve_gf_UnitInRegion(UnitFromId(183), RegionFromId(30)) == true)) {
        UnitSetPropertyFixed(UnitFromId(183), c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(UnitFromId(183), c_unitPropShieldsPercent, 100.0);
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HealMajinVegetaTraining_Init () {
    gt_HealMajinVegetaTraining = TriggerCreate("gt_HealMajinVegetaTraining_Func");
    TriggerAddEventUnitRegion(gt_HealMajinVegetaTraining, UnitRefFromUnit(UnitFromId(183)), RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Heal Vegeta SSJ 4 Training
//--------------------------------------------------------------------------------------------------
bool gt_HealVegetaSSJ4Training_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    while ((libNtve_gf_UnitInRegion(UnitFromId(171), RegionFromId(30)) == true)) {
        UnitSetPropertyFixed(UnitFromId(171), c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(UnitFromId(171), c_unitPropShieldsPercent, 100.0);
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HealVegetaSSJ4Training_Init () {
    gt_HealVegetaSSJ4Training = TriggerCreate("gt_HealVegetaSSJ4Training_Func");
    TriggerAddEventUnitRegion(gt_HealVegetaSSJ4Training, UnitRefFromUnit(UnitFromId(171)), RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Heal Vegito (Vegeta) Training
//--------------------------------------------------------------------------------------------------
bool gt_HealVegitoVegetaTraining_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    while ((libNtve_gf_UnitInRegion(UnitFromId(168), RegionFromId(30)) == true)) {
        UnitSetPropertyFixed(UnitFromId(168), c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(UnitFromId(168), c_unitPropShieldsPercent, 100.0);
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HealVegitoVegetaTraining_Init () {
    gt_HealVegitoVegetaTraining = TriggerCreate("gt_HealVegitoVegetaTraining_Func");
    TriggerAddEventUnitRegion(gt_HealVegitoVegetaTraining, UnitRefFromUnit(UnitFromId(168)), RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Heal Super Vegito (Vegeta) Training
//--------------------------------------------------------------------------------------------------
bool gt_HealSuperVegitoVegetaTraining_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    while ((libNtve_gf_UnitInRegion(UnitFromId(146), RegionFromId(30)) == true)) {
        UnitSetPropertyFixed(UnitFromId(146), c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(UnitFromId(146), c_unitPropShieldsPercent, 100.0);
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HealSuperVegitoVegetaTraining_Init () {
    gt_HealSuperVegitoVegetaTraining = TriggerCreate("gt_HealSuperVegitoVegetaTraining_Func");
    TriggerAddEventUnitRegion(gt_HealSuperVegitoVegetaTraining, UnitRefFromUnit(UnitFromId(146)), RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Heal Piccolo Training
//--------------------------------------------------------------------------------------------------
bool gt_HealPiccoloTraining_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    while ((libNtve_gf_UnitInRegion(UnitFromId(106), RegionFromId(30)) == true)) {
        UnitSetPropertyFixed(UnitFromId(106), c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(UnitFromId(106), c_unitPropShieldsPercent, 100.0);
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HealPiccoloTraining_Init () {
    gt_HealPiccoloTraining = TriggerCreate("gt_HealPiccoloTraining_Func");
    TriggerAddEventUnitRegion(gt_HealPiccoloTraining, UnitRefFromUnit(UnitFromId(106)), RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Heal Piccolo Fused (Nail) Training
//--------------------------------------------------------------------------------------------------
bool gt_HealPiccoloFusedNailTraining_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    while ((libNtve_gf_UnitInRegion(UnitFromId(178), RegionFromId(30)) == true)) {
        UnitSetPropertyFixed(UnitFromId(178), c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(UnitFromId(178), c_unitPropShieldsPercent, 100.0);
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HealPiccoloFusedNailTraining_Init () {
    gt_HealPiccoloFusedNailTraining = TriggerCreate("gt_HealPiccoloFusedNailTraining_Func");
    TriggerAddEventUnitRegion(gt_HealPiccoloFusedNailTraining, UnitRefFromUnit(UnitFromId(178)), RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Heal Piccolo Fused (Kami) Training
//--------------------------------------------------------------------------------------------------
bool gt_HealPiccoloFusedKamiTraining_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    while ((libNtve_gf_UnitInRegion(UnitFromId(180), RegionFromId(30)) == true)) {
        UnitSetPropertyFixed(UnitFromId(180), c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(UnitFromId(180), c_unitPropShieldsPercent, 100.0);
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HealPiccoloFusedKamiTraining_Init () {
    gt_HealPiccoloFusedKamiTraining = TriggerCreate("gt_HealPiccoloFusedKamiTraining_Func");
    TriggerAddEventUnitRegion(gt_HealPiccoloFusedKamiTraining, UnitRefFromUnit(UnitFromId(180)), RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Heal Evil King Piccolo Training
//--------------------------------------------------------------------------------------------------
bool gt_HealEvilKingPiccoloTraining_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    while ((libNtve_gf_UnitInRegion(UnitFromId(170), RegionFromId(30)) == true)) {
        UnitSetPropertyFixed(UnitFromId(170), c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(UnitFromId(170), c_unitPropShieldsPercent, 100.0);
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HealEvilKingPiccoloTraining_Init () {
    gt_HealEvilKingPiccoloTraining = TriggerCreate("gt_HealEvilKingPiccoloTraining_Func");
    TriggerAddEventUnitRegion(gt_HealEvilKingPiccoloTraining, UnitRefFromUnit(UnitFromId(170)), RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Heal Trunks Training
//--------------------------------------------------------------------------------------------------
bool gt_HealTrunksTraining_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    while ((libNtve_gf_UnitInRegion(UnitFromId(107), RegionFromId(30)) == true)) {
        UnitSetPropertyFixed(UnitFromId(107), c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(UnitFromId(107), c_unitPropShieldsPercent, 100.0);
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HealTrunksTraining_Init () {
    gt_HealTrunksTraining = TriggerCreate("gt_HealTrunksTraining_Func");
    TriggerAddEventUnitRegion(gt_HealTrunksTraining, UnitRefFromUnit(UnitFromId(107)), RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Heal Trunks SSJ Training
//--------------------------------------------------------------------------------------------------
bool gt_HealTrunksSSJTraining_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    while ((libNtve_gf_UnitInRegion(UnitFromId(176), RegionFromId(30)) == true)) {
        UnitSetPropertyFixed(UnitFromId(176), c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(UnitFromId(176), c_unitPropShieldsPercent, 100.0);
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HealTrunksSSJTraining_Init () {
    gt_HealTrunksSSJTraining = TriggerCreate("gt_HealTrunksSSJTraining_Func");
    TriggerAddEventUnitRegion(gt_HealTrunksSSJTraining, UnitRefFromUnit(UnitFromId(176)), RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Heal Gotenks (Trunks) Training
//--------------------------------------------------------------------------------------------------
bool gt_HealGotenksTrunksTraining_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    while ((libNtve_gf_UnitInRegion(UnitFromId(181), RegionFromId(30)) == true)) {
        UnitSetPropertyFixed(UnitFromId(181), c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(UnitFromId(181), c_unitPropShieldsPercent, 100.0);
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HealGotenksTrunksTraining_Init () {
    gt_HealGotenksTrunksTraining = TriggerCreate("gt_HealGotenksTrunksTraining_Func");
    TriggerAddEventUnitRegion(gt_HealGotenksTrunksTraining, UnitRefFromUnit(UnitFromId(181)), RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Heal Gotenks SSJ (Trunks) Training
//--------------------------------------------------------------------------------------------------
bool gt_HealGotenksSSJTrunksTraining_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    while ((libNtve_gf_UnitInRegion(UnitFromId(139), RegionFromId(30)) == true)) {
        UnitSetPropertyFixed(UnitFromId(139), c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(UnitFromId(139), c_unitPropShieldsPercent, 100.0);
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HealGotenksSSJTrunksTraining_Init () {
    gt_HealGotenksSSJTrunksTraining = TriggerCreate("gt_HealGotenksSSJTrunksTraining_Func");
    TriggerAddEventUnitRegion(gt_HealGotenksSSJTrunksTraining, UnitRefFromUnit(UnitFromId(139)), RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Heal Gotenks SSJ 3 (Trunks) Training
//--------------------------------------------------------------------------------------------------
bool gt_HealGotenksSSJ3TrunksTraining_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    while ((libNtve_gf_UnitInRegion(UnitFromId(185), RegionFromId(30)) == true)) {
        UnitSetPropertyFixed(UnitFromId(185), c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(UnitFromId(185), c_unitPropShieldsPercent, 100.0);
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HealGotenksSSJ3TrunksTraining_Init () {
    gt_HealGotenksSSJ3TrunksTraining = TriggerCreate("gt_HealGotenksSSJ3TrunksTraining_Func");
    TriggerAddEventUnitRegion(gt_HealGotenksSSJ3TrunksTraining, UnitRefFromUnit(UnitFromId(185)), RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Heal Goten Training
//--------------------------------------------------------------------------------------------------
bool gt_HealGotenTraining_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    while ((libNtve_gf_UnitInRegion(UnitFromId(108), RegionFromId(30)) == true)) {
        UnitSetPropertyFixed(UnitFromId(108), c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(UnitFromId(108), c_unitPropShieldsPercent, 100.0);
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HealGotenTraining_Init () {
    gt_HealGotenTraining = TriggerCreate("gt_HealGotenTraining_Func");
    TriggerAddEventUnitRegion(gt_HealGotenTraining, UnitRefFromUnit(UnitFromId(108)), RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Heal Goten SSJ Training
//--------------------------------------------------------------------------------------------------
bool gt_HealGotenSSJTraining_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    while ((libNtve_gf_UnitInRegion(UnitFromId(175), RegionFromId(30)) == true)) {
        UnitSetPropertyFixed(UnitFromId(175), c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(UnitFromId(175), c_unitPropShieldsPercent, 100.0);
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HealGotenSSJTraining_Init () {
    gt_HealGotenSSJTraining = TriggerCreate("gt_HealGotenSSJTraining_Func");
    TriggerAddEventUnitRegion(gt_HealGotenSSJTraining, UnitRefFromUnit(UnitFromId(175)), RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Heal Gotenks (Goten) Training
//--------------------------------------------------------------------------------------------------
bool gt_HealGotenksGotenTraining_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    while ((libNtve_gf_UnitInRegion(UnitFromId(182), RegionFromId(30)) == true)) {
        UnitSetPropertyFixed(UnitFromId(182), c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(UnitFromId(182), c_unitPropShieldsPercent, 100.0);
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HealGotenksGotenTraining_Init () {
    gt_HealGotenksGotenTraining = TriggerCreate("gt_HealGotenksGotenTraining_Func");
    TriggerAddEventUnitRegion(gt_HealGotenksGotenTraining, UnitRefFromUnit(UnitFromId(182)), RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Heal Gotenks SSJ (Goten) Training
//--------------------------------------------------------------------------------------------------
bool gt_HealGotenksSSJGotenTraining_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    while ((libNtve_gf_UnitInRegion(UnitFromId(140), RegionFromId(30)) == true)) {
        UnitSetPropertyFixed(UnitFromId(140), c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(UnitFromId(140), c_unitPropShieldsPercent, 100.0);
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HealGotenksSSJGotenTraining_Init () {
    gt_HealGotenksSSJGotenTraining = TriggerCreate("gt_HealGotenksSSJGotenTraining_Func");
    TriggerAddEventUnitRegion(gt_HealGotenksSSJGotenTraining, UnitRefFromUnit(UnitFromId(140)), RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Heal Gotenks SSJ 3 (Goten) Training
//--------------------------------------------------------------------------------------------------
bool gt_HealGotenksSSJ3GotenTraining_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    while ((libNtve_gf_UnitInRegion(UnitFromId(184), RegionFromId(30)) == true)) {
        UnitSetPropertyFixed(UnitFromId(184), c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(UnitFromId(184), c_unitPropShieldsPercent, 100.0);
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HealGotenksSSJ3GotenTraining_Init () {
    gt_HealGotenksSSJ3GotenTraining = TriggerCreate("gt_HealGotenksSSJ3GotenTraining_Func");
    TriggerAddEventUnitRegion(gt_HealGotenksSSJ3GotenTraining, UnitRefFromUnit(UnitFromId(184)), RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Heal Gohan Training
//--------------------------------------------------------------------------------------------------
bool gt_HealGohanTraining_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    while ((libNtve_gf_UnitInRegion(UnitFromId(109), RegionFromId(30)) == true)) {
        UnitSetPropertyFixed(UnitFromId(109), c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(UnitFromId(109), c_unitPropShieldsPercent, 100.0);
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HealGohanTraining_Init () {
    gt_HealGohanTraining = TriggerCreate("gt_HealGohanTraining_Func");
    TriggerAddEventUnitRegion(gt_HealGohanTraining, UnitRefFromUnit(UnitFromId(109)), RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Heal Gohan SSJ Training
//--------------------------------------------------------------------------------------------------
bool gt_HealGohanSSJTraining_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    while ((libNtve_gf_UnitInRegion(UnitFromId(172), RegionFromId(30)) == true)) {
        UnitSetPropertyFixed(UnitFromId(172), c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(UnitFromId(172), c_unitPropShieldsPercent, 100.0);
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HealGohanSSJTraining_Init () {
    gt_HealGohanSSJTraining = TriggerCreate("gt_HealGohanSSJTraining_Func");
    TriggerAddEventUnitRegion(gt_HealGohanSSJTraining, UnitRefFromUnit(UnitFromId(172)), RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Heal Gohan SSJ 2 Training
//--------------------------------------------------------------------------------------------------
bool gt_HealGohanSSJ2Training_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    while ((libNtve_gf_UnitInRegion(UnitFromId(186), RegionFromId(30)) == true)) {
        UnitSetPropertyFixed(UnitFromId(186), c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(UnitFromId(186), c_unitPropShieldsPercent, 100.0);
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HealGohanSSJ2Training_Init () {
    gt_HealGohanSSJ2Training = TriggerCreate("gt_HealGohanSSJ2Training_Func");
    TriggerAddEventUnitRegion(gt_HealGohanSSJ2Training, UnitRefFromUnit(UnitFromId(186)), RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Heal Mystic Gohan Training
//--------------------------------------------------------------------------------------------------
bool gt_HealMysticGohanTraining_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    while ((libNtve_gf_UnitInRegion(UnitFromId(169), RegionFromId(30)) == true)) {
        UnitSetPropertyFixed(UnitFromId(169), c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(UnitFromId(169), c_unitPropShieldsPercent, 100.0);
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HealMysticGohanTraining_Init () {
    gt_HealMysticGohanTraining = TriggerCreate("gt_HealMysticGohanTraining_Func");
    TriggerAddEventUnitRegion(gt_HealMysticGohanTraining, UnitRefFromUnit(UnitFromId(169)), RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Heal when die
//--------------------------------------------------------------------------------------------------
bool gt_Healwhendie_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPropertyFixed(EventUnit(), c_unitPropLifePercent, 100.0);
    UnitSetPropertyFixed(EventUnit(), c_unitPropShieldsPercent, 100.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Healwhendie_Init () {
    gt_Healwhendie = TriggerCreate("gt_Healwhendie_Func");
    TriggerAddEventUnitRegion(gt_Healwhendie, null, RegionFromId(29), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dende Heal
//--------------------------------------------------------------------------------------------------
bool gt_DendeHeal_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(UnitFromId(579)) == true))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, StringExternal("Param/Value/56AA13A2"));
    UnitSetPropertyFixed(EventUnit(), c_unitPropLifePercent, 100.0);
    UnitSetPropertyFixed(EventUnit(), c_unitPropShieldsPercent, 100.0);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DendeHeal_Init () {
    gt_DendeHeal = TriggerCreate("gt_DendeHeal_Func");
    TriggerAddEventUnitRegion(gt_DendeHeal, null, RegionFromId(121), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dende Heal 2
//--------------------------------------------------------------------------------------------------
bool gt_DendeHeal2_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(UnitFromId(579)) == true))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == 2))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, StringExternal("Param/Value/1CEDC1B0"));
    UnitSetPropertyFixed(EventUnit(), c_unitPropLifePercent, 100.0);
    UnitSetPropertyFixed(EventUnit(), c_unitPropShieldsPercent, 100.0);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DendeHeal2_Init () {
    gt_DendeHeal2 = TriggerCreate("gt_DendeHeal2_Func");
    TriggerAddEventUnitRegion(gt_DendeHeal2, null, RegionFromId(121), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dende Heal 3
//--------------------------------------------------------------------------------------------------
bool gt_DendeHeal3_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(UnitFromId(579)) == true))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == 3))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, StringExternal("Param/Value/85231A18"));
    UnitSetPropertyFixed(EventUnit(), c_unitPropLifePercent, 100.0);
    UnitSetPropertyFixed(EventUnit(), c_unitPropShieldsPercent, 100.0);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DendeHeal3_Init () {
    gt_DendeHeal3 = TriggerCreate("gt_DendeHeal3_Func");
    TriggerAddEventUnitRegion(gt_DendeHeal3, null, RegionFromId(121), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dende Heal 4
//--------------------------------------------------------------------------------------------------
bool gt_DendeHeal4_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(UnitFromId(579)) == true))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == 4))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, StringExternal("Param/Value/B2DDE6E3"));
    UnitSetPropertyFixed(EventUnit(), c_unitPropLifePercent, 100.0);
    UnitSetPropertyFixed(EventUnit(), c_unitPropShieldsPercent, 100.0);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DendeHeal4_Init () {
    gt_DendeHeal4 = TriggerCreate("gt_DendeHeal4_Func");
    TriggerAddEventUnitRegion(gt_DendeHeal4, null, RegionFromId(121), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dende Heal 5
//--------------------------------------------------------------------------------------------------
bool gt_DendeHeal5_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(UnitFromId(579)) == true))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == 5))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, StringExternal("Param/Value/4A316E75"));
    UnitSetPropertyFixed(EventUnit(), c_unitPropLifePercent, 100.0);
    UnitSetPropertyFixed(EventUnit(), c_unitPropShieldsPercent, 100.0);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DendeHeal5_Init () {
    gt_DendeHeal5 = TriggerCreate("gt_DendeHeal5_Func");
    TriggerAddEventUnitRegion(gt_DendeHeal5, null, RegionFromId(121), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dende Heal 6
//--------------------------------------------------------------------------------------------------
bool gt_DendeHeal6_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(UnitFromId(579)) == true))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == 6))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, StringExternal("Param/Value/081D8B67"));
    UnitSetPropertyFixed(EventUnit(), c_unitPropLifePercent, 100.0);
    UnitSetPropertyFixed(EventUnit(), c_unitPropShieldsPercent, 100.0);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DendeHeal6_Init () {
    gt_DendeHeal6 = TriggerCreate("gt_DendeHeal6_Func");
    TriggerAddEventUnitRegion(gt_DendeHeal6, null, RegionFromId(121), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Make Dende Immovable
//--------------------------------------------------------------------------------------------------
bool gt_MakeDendeImmovable_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPropertyFixed(UnitFromId(579), c_unitPropMovementSpeed, -1.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MakeDendeImmovable_Init () {
    gt_MakeDendeImmovable = TriggerCreate("gt_MakeDendeImmovable_Func");
    TriggerAddEventMapInit(gt_MakeDendeImmovable);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Unlock Potential for Gohan
//--------------------------------------------------------------------------------------------------
bool gt_UnlockPotentialforGohan_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(UnitFromId(581)) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, StringExternal("Param/Value/D2DF4722"));
    PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperAdd, 1200);
    BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UnlockPotentialforGohan_Init () {
    gt_UnlockPotentialforGohan = TriggerCreate("gt_UnlockPotentialforGohan_Func");
    TriggerAddEventUnitRegion(gt_UnlockPotentialforGohan, UnitRefFromUnit(UnitFromId(109)), RegionFromId(122), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Player Kills
//--------------------------------------------------------------------------------------------------
bool gt_PlayerKills_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(libNtve_gf_KillingUnit()) != 14) && (UnitGetOwner(libNtve_gf_KillingUnit()) != 15) && (UnitGetOwner(libNtve_gf_KillingUnit()) != 16)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_amount[UnitGetOwner(libNtve_gf_KillingUnit())] = PlayerGetPropertyInt(UnitGetOwner(libNtve_gf_KillingUnit()), c_playerPropVespene);
    BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(libNtve_gf_KillingUnit()), IntToText(gv_amount[UnitGetOwner(libNtve_gf_KillingUnit())]));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_PlayerKills_Init () {
    gt_PlayerKills = TriggerCreate("gt_PlayerKills_Func");
    TriggerAddEventUnitDied(gt_PlayerKills, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Leaderboard (trial 1)
//--------------------------------------------------------------------------------------------------
bool gt_Leaderboardtrial1_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    BoardCreate(2, 7, StringExternal("Param/Value/211AFB76"), Color(100.00, 100.00, 100.00));
    gv_powerLevel = BoardLastCreated();
    BoardItemSetText(BoardLastCreated(), 1, c_boardRowHeader, StringExternal("Param/Value/9396FD77"));
    BoardItemSetText(BoardLastCreated(), 2, c_boardRowHeader, StringExternal("Param/Value/0B814DAC"));
    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((PlayerStatus(IntLoopCurrent()) == c_playerStatusActive)) {
            BoardItemSetText(BoardLastCreated(), 1, IntLoopCurrent(), PlayerName(IntLoopCurrent()));
            BoardItemSetTextColor(BoardLastCreated(), 1, IntLoopCurrent(), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(IntLoopCurrent(), false)));
            BoardItemSetText(BoardLastCreated(), 2, IntLoopCurrent(), StringExternal("Param/Value/797B4FEA"));
            BoardItemSetTextColor(BoardLastCreated(), 2, IntLoopCurrent(), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(IntLoopCurrent(), false)));
        }
        else {
            BoardItemSetText(BoardLastCreated(), 1, IntLoopCurrent(), StringExternal("Param/Value/47E98537"));
            BoardItemSetTextColor(BoardLastCreated(), 1, IntLoopCurrent(), Color(24.31, 24.31, 24.31));
        }
    }
    IntLoopEnd();
    BoardShowAll(true, PlayerGroupAll());
    PlayerGroupLoopBegin(PlayerGroupActive());
    for ( ; !PlayerGroupLoopDone() ; PlayerGroupLoopStep() ) {
        if ((gv_flag4MenuFlag[PlayerGroupLoopCurrent()] == false)) {
            BoardMinimizeSetState(gv_powerLevel, PlayerGroupSingle(PlayerGroupLoopCurrent()), true);
        }
        else {
        }
    }
    PlayerGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Leaderboardtrial1_Init () {
    gt_Leaderboardtrial1 = TriggerCreate("gt_Leaderboardtrial1_Func");
    TriggerAddEventTimeElapsed(gt_Leaderboardtrial1, 5.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Character attribute
//--------------------------------------------------------------------------------------------------
bool gt_Characterattribute_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    PlayerGroupLoopBegin(PlayerGroupActive());
    for ( ; !PlayerGroupLoopDone() ; PlayerGroupLoopStep() ) {
        if ((GameAttributePlayerValue("[bnet:local/0.0/151902]7", PlayerGroupLoopCurrent()) == "0002")) {
            UnitSetOwner(UnitFromId(104), PlayerGroupLoopCurrent(), true);
            UnitControlGroupAddUnit(PlayerGroupLoopCurrent(), 1, UnitFromId(104));
            UnitSetOwner(UnitFromId(229), PlayerGroupLoopCurrent(), true);
            UnitControlGroupAddUnit(PlayerGroupLoopCurrent(), 2, UnitFromId(229));
            UnitSetOwner(UnitFromId(135), PlayerGroupLoopCurrent(), true);
            UnitControlGroupAddUnit(PlayerGroupLoopCurrent(), 3, UnitFromId(135));
            UnitSetPosition(UnitFromId(104), RegionGetCenter(RegionFromId(21)), false);
            DataTableSetUnit(true, "Goku", UnitFromId(104));
            DataTableSetUnit(false, "Goku", UnitFromId(104));
            RegionAttachToUnit(RegionFromId(84), UnitFromId(104), Point(0.0, 0.0));
            libNtve_gf_SwooshCamera(PlayerGroupLoopCurrent(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
        }
        else {
        }
        if ((GameAttributePlayerValue("[bnet:local/0.0/151902]7", PlayerGroupLoopCurrent()) == "0003")) {
            UnitSetOwner(UnitFromId(105), PlayerGroupLoopCurrent(), true);
            UnitControlGroupAddUnit(PlayerGroupLoopCurrent(), 1, UnitFromId(105));
            UnitSetOwner(UnitFromId(230), PlayerGroupLoopCurrent(), true);
            UnitControlGroupAddUnit(PlayerGroupLoopCurrent(), 2, UnitFromId(230));
            UnitSetOwner(UnitFromId(158), PlayerGroupLoopCurrent(), true);
            UnitControlGroupAddUnit(PlayerGroupLoopCurrent(), 3, UnitFromId(158));
            UnitSetPosition(UnitFromId(105), RegionGetCenter(RegionFromId(21)), false);
            DataTableSetUnit(true, "Vegeta", UnitFromId(105));
            DataTableSetUnit(false, "Vegeta", UnitFromId(105));
            RegionAttachToUnit(RegionFromId(85), UnitFromId(105), Point(0.0, 0.0));
            libNtve_gf_SwooshCamera(PlayerGroupLoopCurrent(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
        }
        else {
        }
        if ((GameAttributePlayerValue("[bnet:local/0.0/151902]7", PlayerGroupLoopCurrent()) == "0004")) {
            UnitSetOwner(UnitFromId(106), PlayerGroupLoopCurrent(), true);
            UnitControlGroupAddUnit(PlayerGroupLoopCurrent(), 1, UnitFromId(106));
            UnitSetOwner(UnitFromId(231), PlayerGroupLoopCurrent(), true);
            UnitControlGroupAddUnit(PlayerGroupLoopCurrent(), 2, UnitFromId(231));
            UnitSetOwner(UnitFromId(159), PlayerGroupLoopCurrent(), true);
            UnitControlGroupAddUnit(PlayerGroupLoopCurrent(), 3, UnitFromId(159));
            UnitSetPosition(UnitFromId(106), RegionGetCenter(RegionFromId(21)), false);
            DataTableSetUnit(true, "Piccolo", UnitFromId(106));
            DataTableSetUnit(false, "Piccolo", UnitFromId(106));
            RegionAttachToUnit(RegionFromId(86), UnitFromId(106), Point(0.0, 0.0));
            libNtve_gf_SwooshCamera(PlayerGroupLoopCurrent(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
        }
        else {
        }
        if ((GameAttributePlayerValue("[bnet:local/0.0/151902]7", PlayerGroupLoopCurrent()) == "0005")) {
            UnitSetOwner(UnitFromId(107), PlayerGroupLoopCurrent(), true);
            UnitControlGroupAddUnit(PlayerGroupLoopCurrent(), 1, UnitFromId(107));
            UnitSetOwner(UnitFromId(232), PlayerGroupLoopCurrent(), true);
            UnitControlGroupAddUnit(PlayerGroupLoopCurrent(), 2, UnitFromId(232));
            UnitSetOwner(UnitFromId(160), PlayerGroupLoopCurrent(), true);
            UnitControlGroupAddUnit(PlayerGroupLoopCurrent(), 3, UnitFromId(160));
            UnitSetPosition(UnitFromId(107), RegionGetCenter(RegionFromId(21)), false);
            DataTableSetUnit(true, "Trunks", UnitFromId(107));
            DataTableSetUnit(false, "Trunks", UnitFromId(107));
            RegionAttachToUnit(RegionFromId(87), UnitFromId(107), Point(0.0, 0.0));
            libNtve_gf_SwooshCamera(PlayerGroupLoopCurrent(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
        }
        else {
        }
        if ((GameAttributePlayerValue("[bnet:local/0.0/151902]7", PlayerGroupLoopCurrent()) == "0006")) {
            UnitSetOwner(UnitFromId(108), PlayerGroupLoopCurrent(), true);
            UnitControlGroupAddUnit(PlayerGroupLoopCurrent(), 1, UnitFromId(108));
            UnitSetOwner(UnitFromId(233), PlayerGroupLoopCurrent(), true);
            UnitControlGroupAddUnit(PlayerGroupLoopCurrent(), 2, UnitFromId(233));
            UnitSetOwner(UnitFromId(162), PlayerGroupLoopCurrent(), true);
            UnitControlGroupAddUnit(PlayerGroupLoopCurrent(), 3, UnitFromId(162));
            UnitSetPosition(UnitFromId(108), RegionGetCenter(RegionFromId(21)), false);
            DataTableSetUnit(true, "Goten", UnitFromId(108));
            DataTableSetUnit(false, "Goten", UnitFromId(108));
            RegionAttachToUnit(RegionFromId(88), UnitFromId(108), Point(0.0, 0.0));
            libNtve_gf_SwooshCamera(PlayerGroupLoopCurrent(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
        }
        else {
        }
        if ((GameAttributePlayerValue("[bnet:local/0.0/151902]7", PlayerGroupLoopCurrent()) == "0001")) {
            UnitSetOwner(UnitFromId(109), PlayerGroupLoopCurrent(), true);
            UnitControlGroupAddUnit(PlayerGroupLoopCurrent(), 1, UnitFromId(109));
            UnitSetOwner(UnitFromId(234), PlayerGroupLoopCurrent(), true);
            UnitControlGroupAddUnit(PlayerGroupLoopCurrent(), 2, UnitFromId(234));
            UnitSetOwner(UnitFromId(163), PlayerGroupLoopCurrent(), true);
            UnitControlGroupAddUnit(PlayerGroupLoopCurrent(), 3, UnitFromId(163));
            UnitSetPosition(UnitFromId(109), RegionGetCenter(RegionFromId(21)), false);
            DataTableSetUnit(true, "Gohan", UnitFromId(109));
            DataTableSetUnit(false, "Gohan", UnitFromId(109));
            RegionAttachToUnit(RegionFromId(89), UnitFromId(109), Point(0.0, 0.0));
            libNtve_gf_SwooshCamera(PlayerGroupLoopCurrent(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
        }
        else {
        }
    }
    PlayerGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Characterattribute_Init () {
    gt_Characterattribute = TriggerCreate("gt_Characterattribute_Func");
    TriggerAddEventMapInit(gt_Characterattribute);
}

//--------------------------------------------------------------------------------------------------
// Trigger: change color of players
//--------------------------------------------------------------------------------------------------
bool gt_changecolorofplayers_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGetOwner(UnitFromId(233)) != 0)) {
        PlayerSetColorIndex(UnitGetOwner(UnitFromId(233)), 6, true);
    }
    else {
    }
    if ((UnitGetOwner(UnitFromId(231)) != 0)) {
        PlayerSetColorIndex(UnitGetOwner(UnitFromId(231)), 7, true);
    }
    else {
    }
    if ((UnitGetOwner(UnitFromId(229)) != 0)) {
        PlayerSetColorIndex(UnitGetOwner(UnitFromId(229)), 1, true);
    }
    else {
    }
    if ((UnitGetOwner(UnitFromId(234)) != 0)) {
        PlayerSetColorIndex(UnitGetOwner(UnitFromId(234)), 12, true);
    }
    else {
    }
    if ((UnitGetOwner(UnitFromId(232)) != 0)) {
        PlayerSetColorIndex(UnitGetOwner(UnitFromId(232)), 4, true);
    }
    else {
    }
    if ((UnitGetOwner(UnitFromId(230)) != 0)) {
        PlayerSetColorIndex(UnitGetOwner(UnitFromId(230)), 2, true);
    }
    else {
    }
    PlayerSetColorIndex(7, 3, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_changecolorofplayers_Init () {
    gt_changecolorofplayers = TriggerCreate("gt_changecolorofplayers_Func");
    TriggerAddEventTimeElapsed(gt_changecolorofplayers, 2.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Stop Vespene from splitting
//--------------------------------------------------------------------------------------------------
bool gt_StopVespenefromsplitting_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerStatus(EventPlayer()) == c_playerStatusActive)) {
        gv_playerVesp[EventPlayer()] = PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene);
    }
    else {
        PlayerGroupRemove(PlayerGroupActive(), EventPlayer());
        PlayerGroupLoopBegin(PlayerGroupActive());
        for ( ; !PlayerGroupLoopDone() ; PlayerGroupLoopStep() ) {
            PlayerModifyPropertyInt(PlayerGroupLoopCurrent(), c_playerPropVespene, c_playerPropOperSetTo, gv_playerVesp[PlayerGroupLoopCurrent()]);
        }
        PlayerGroupLoopEnd();
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StopVespenefromsplitting_Init () {
    gt_StopVespenefromsplitting = TriggerCreate("gt_StopVespenefromsplitting_Func");
    TriggerAddEventPlayerPropChange(gt_StopVespenefromsplitting, 1, c_playerPropVespene);
    TriggerAddEventPlayerPropChange(gt_StopVespenefromsplitting, 2, c_playerPropVespene);
    TriggerAddEventPlayerPropChange(gt_StopVespenefromsplitting, 3, c_playerPropVespene);
    TriggerAddEventPlayerPropChange(gt_StopVespenefromsplitting, 4, c_playerPropVespene);
    TriggerAddEventPlayerPropChange(gt_StopVespenefromsplitting, 5, c_playerPropVespene);
    TriggerAddEventPlayerPropChange(gt_StopVespenefromsplitting, 6, c_playerPropVespene);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Stop Minerals from splitting
//--------------------------------------------------------------------------------------------------
bool gt_StopMineralsfromsplitting_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerStatus(EventPlayer()) == c_playerStatusActive)) {
        gv_playerMin[EventPlayer()] = PlayerGetPropertyInt(EventPlayer(), c_playerPropMinerals);
    }
    else {
        PlayerGroupRemove(PlayerGroupActive(), EventPlayer());
        PlayerGroupLoopBegin(PlayerGroupActive());
        for ( ; !PlayerGroupLoopDone() ; PlayerGroupLoopStep() ) {
            PlayerModifyPropertyInt(PlayerGroupLoopCurrent(), c_playerPropMinerals, c_playerPropOperSetTo, gv_playerMin[PlayerGroupLoopCurrent()]);
        }
        PlayerGroupLoopEnd();
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StopMineralsfromsplitting_Init () {
    gt_StopMineralsfromsplitting = TriggerCreate("gt_StopMineralsfromsplitting_Func");
    TriggerAddEventPlayerPropChange(gt_StopMineralsfromsplitting, 1, c_playerPropMinerals);
    TriggerAddEventPlayerPropChange(gt_StopMineralsfromsplitting, 2, c_playerPropMinerals);
    TriggerAddEventPlayerPropChange(gt_StopMineralsfromsplitting, 3, c_playerPropMinerals);
    TriggerAddEventPlayerPropChange(gt_StopMineralsfromsplitting, 4, c_playerPropMinerals);
    TriggerAddEventPlayerPropChange(gt_StopMineralsfromsplitting, 5, c_playerPropMinerals);
    TriggerAddEventPlayerPropChange(gt_StopMineralsfromsplitting, 6, c_playerPropMinerals);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Stop Custom Resource from splitting
//--------------------------------------------------------------------------------------------------
bool gt_StopCustomResourcefromsplitting_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerStatus(EventPlayer()) == c_playerStatusActive)) {
        gv_playerCust[EventPlayer()] = PlayerGetPropertyInt(EventPlayer(), c_playerPropCustom);
    }
    else {
        PlayerGroupRemove(PlayerGroupActive(), EventPlayer());
        PlayerGroupLoopBegin(PlayerGroupActive());
        for ( ; !PlayerGroupLoopDone() ; PlayerGroupLoopStep() ) {
            PlayerModifyPropertyInt(PlayerGroupLoopCurrent(), c_playerPropCustom, c_playerPropOperSetTo, gv_playerCust[PlayerGroupLoopCurrent()]);
        }
        PlayerGroupLoopEnd();
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StopCustomResourcefromsplitting_Init () {
    gt_StopCustomResourcefromsplitting = TriggerCreate("gt_StopCustomResourcefromsplitting_Func");
    TriggerAddEventPlayerPropChange(gt_StopCustomResourcefromsplitting, 1, c_playerPropCustom);
    TriggerAddEventPlayerPropChange(gt_StopCustomResourcefromsplitting, 2, c_playerPropCustom);
    TriggerAddEventPlayerPropChange(gt_StopCustomResourcefromsplitting, 3, c_playerPropCustom);
    TriggerAddEventPlayerPropChange(gt_StopCustomResourcefromsplitting, 4, c_playerPropCustom);
    TriggerAddEventPlayerPropChange(gt_StopCustomResourcefromsplitting, 5, c_playerPropCustom);
    TriggerAddEventPlayerPropChange(gt_StopCustomResourcefromsplitting, 6, c_playerPropCustom);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Prevent pushing units
//--------------------------------------------------------------------------------------------------
bool gt_Preventpushingunits_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    PlayerGroupLoopBegin(PlayerGroupActive());
    for ( ; !PlayerGroupLoopDone() ; PlayerGroupLoopStep() ) {
        PlayerSetAlliance(PlayerGroupLoopCurrent(), c_allianceIdPushable, 1, false);
        PlayerSetAlliance(PlayerGroupLoopCurrent(), c_allianceIdPushable, 2, false);
        PlayerSetAlliance(PlayerGroupLoopCurrent(), c_allianceIdPushable, 3, false);
        PlayerSetAlliance(PlayerGroupLoopCurrent(), c_allianceIdPushable, 4, false);
        PlayerSetAlliance(PlayerGroupLoopCurrent(), c_allianceIdPushable, 5, false);
        PlayerSetAlliance(PlayerGroupLoopCurrent(), c_allianceIdPushable, 6, false);
    }
    PlayerGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Preventpushingunits_Init () {
    gt_Preventpushingunits = TriggerCreate("gt_Preventpushingunits_Func");
    TriggerAddEventMapInit(gt_Preventpushingunits);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Stop the resources from being spent
//--------------------------------------------------------------------------------------------------
bool gt_Stoptheresourcesfrombeingspent_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerStatus(1) == c_playerStatusLeft)) {
        PlayerGroupRemove(gv_Z_Warriors, 1);
        PlayerModifyPropertyInt(1, c_playerPropMinerals, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(1, c_playerPropVespene, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(1, c_playerPropTerrazine, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(1, c_playerPropCustom, c_playerPropOperSetTo, 0);
    }
    else {
    }
    if ((PlayerStatus(2) == c_playerStatusLeft)) {
        PlayerGroupRemove(gv_Z_Warriors, 2);
        PlayerModifyPropertyInt(2, c_playerPropMinerals, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(2, c_playerPropVespene, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(2, c_playerPropTerrazine, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(2, c_playerPropCustom, c_playerPropOperSetTo, 0);
    }
    else {
    }
    if ((PlayerStatus(3) == c_playerStatusLeft)) {
        PlayerGroupRemove(gv_Z_Warriors, 3);
        PlayerModifyPropertyInt(3, c_playerPropMinerals, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(3, c_playerPropVespene, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(3, c_playerPropTerrazine, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(3, c_playerPropCustom, c_playerPropOperSetTo, 0);
    }
    else {
    }
    if ((PlayerStatus(4) == c_playerStatusLeft)) {
        PlayerGroupRemove(gv_Z_Warriors, 4);
        PlayerModifyPropertyInt(4, c_playerPropMinerals, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(4, c_playerPropVespene, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(4, c_playerPropTerrazine, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(4, c_playerPropCustom, c_playerPropOperSetTo, 0);
    }
    else {
    }
    if ((PlayerStatus(5) == c_playerStatusLeft)) {
        PlayerGroupRemove(gv_Z_Warriors, 5);
        PlayerModifyPropertyInt(5, c_playerPropMinerals, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(5, c_playerPropVespene, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(5, c_playerPropTerrazine, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(5, c_playerPropCustom, c_playerPropOperSetTo, 0);
    }
    else {
    }
    if ((PlayerStatus(6) == c_playerStatusLeft)) {
        PlayerGroupRemove(gv_Z_Warriors, 6);
        PlayerModifyPropertyInt(6, c_playerPropMinerals, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(6, c_playerPropVespene, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(6, c_playerPropTerrazine, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(6, c_playerPropCustom, c_playerPropOperSetTo, 0);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Stoptheresourcesfrombeingspent_Init () {
    gt_Stoptheresourcesfrombeingspent = TriggerCreate("gt_Stoptheresourcesfrombeingspent_Func");
    TriggerAddEventPlayerLeft(gt_Stoptheresourcesfrombeingspent, c_playerAny, c_gameResultUndecided);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Take away resources of players who left in load
//--------------------------------------------------------------------------------------------------
bool gt_Takeawayresourcesofplayerswholeftinload_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerStatus(1) == c_playerStatusLeft)) {
        PlayerGroupRemove(gv_Z_Warriors, 1);
        PlayerModifyPropertyInt(1, c_playerPropMinerals, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(1, c_playerPropVespene, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(1, c_playerPropTerrazine, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(1, c_playerPropCustom, c_playerPropOperSetTo, 0);
    }
    else {
    }
    if ((PlayerStatus(2) == c_playerStatusLeft)) {
        PlayerGroupRemove(gv_Z_Warriors, 2);
        PlayerModifyPropertyInt(2, c_playerPropMinerals, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(2, c_playerPropVespene, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(2, c_playerPropTerrazine, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(2, c_playerPropCustom, c_playerPropOperSetTo, 0);
    }
    else {
    }
    if ((PlayerStatus(3) == c_playerStatusLeft)) {
        PlayerGroupRemove(gv_Z_Warriors, 3);
        PlayerModifyPropertyInt(3, c_playerPropMinerals, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(3, c_playerPropVespene, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(3, c_playerPropTerrazine, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(3, c_playerPropCustom, c_playerPropOperSetTo, 0);
    }
    else {
    }
    if ((PlayerStatus(4) == c_playerStatusLeft)) {
        PlayerGroupRemove(gv_Z_Warriors, 4);
        PlayerModifyPropertyInt(4, c_playerPropMinerals, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(4, c_playerPropVespene, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(4, c_playerPropTerrazine, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(4, c_playerPropCustom, c_playerPropOperSetTo, 0);
    }
    else {
    }
    if ((PlayerStatus(5) == c_playerStatusLeft)) {
        PlayerGroupRemove(gv_Z_Warriors, 5);
        PlayerModifyPropertyInt(5, c_playerPropMinerals, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(5, c_playerPropVespene, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(5, c_playerPropTerrazine, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(5, c_playerPropCustom, c_playerPropOperSetTo, 0);
    }
    else {
    }
    if ((PlayerStatus(6) == c_playerStatusLeft)) {
        PlayerGroupRemove(gv_Z_Warriors, 6);
        PlayerModifyPropertyInt(6, c_playerPropMinerals, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(6, c_playerPropVespene, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(6, c_playerPropTerrazine, c_playerPropOperSetTo, 0);
        PlayerModifyPropertyInt(6, c_playerPropCustom, c_playerPropOperSetTo, 0);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Takeawayresourcesofplayerswholeftinload_Init () {
    gt_Takeawayresourcesofplayerswholeftinload = TriggerCreate("gt_Takeawayresourcesofplayerswholeftinload_Func");
    TriggerAddEventTimeElapsed(gt_Takeawayresourcesofplayerswholeftinload, 20.1, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Remove trading resources
//--------------------------------------------------------------------------------------------------
bool gt_Removetradingresources_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UISetResourceTradingAllowed(c_resourceTypeMinerals, false);
    UISetResourceTradingAllowed(c_resourceTypeVespene, false);
    UISetResourceTradingAllowed(c_resourceTypeTerrazine, false);
    UISetResourceTradingAllowed(c_resourceTypeCustom, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Removetradingresources_Init () {
    gt_Removetradingresources = TriggerCreate("gt_Removetradingresources_Func");
    TriggerAddEventMapInit(gt_Removetradingresources);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Reveal Map
//--------------------------------------------------------------------------------------------------
bool gt_RevealMap_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    VisRevealerCreate(1, RegionFromId(1));
    VisRevealerCreate(2, RegionFromId(1));
    VisRevealerCreate(3, RegionFromId(1));
    VisRevealerCreate(4, RegionFromId(1));
    VisRevealerCreate(5, RegionFromId(1));
    VisRevealerCreate(6, RegionFromId(1));
    TriggerEnable(TriggerGetCurrent(), false);
    TriggerDestroy(gt_RevealMap);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RevealMap_Init () {
    gt_RevealMap = TriggerCreate("gt_RevealMap_Func");
    TriggerAddEventUnitRegion(gt_RevealMap, null, RegionFromId(1), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set Forces
//--------------------------------------------------------------------------------------------------
bool gt_SetForces_Func (bool testConds, bool runActions) {
    int autoFB667E27_ae;
    int autoFB667E27_ai;

    // Variable Declarations
    int lv_Player_Variable;
    playergroup lv_Z_Warriors;

    // Variable Initialization
    lv_Z_Warriors = PlayerGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    autoFB667E27_ae = 6;
    autoFB667E27_ai = 1;
    lv_Player_Variable = 1;
    for ( ; ( (autoFB667E27_ai >= 0 && lv_Player_Variable <= autoFB667E27_ae) || (autoFB667E27_ai <= 0 && lv_Player_Variable >= autoFB667E27_ae) ) ; lv_Player_Variable += autoFB667E27_ai ) {
        if ((PlayerStatus(lv_Player_Variable) == c_playerStatusActive)) {
            PlayerGroupAdd(gv_Z_Warriors, lv_Player_Variable);
        }
        else {
        }
    }
    libNtve_gf_SetPlayerGroupAlliance(gv_Z_Warriors, 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SetForces_Init () {
    gt_SetForces = TriggerCreate("gt_SetForces_Func");
    TriggerAddEventMapInit(gt_SetForces);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Add computer to allied force
//--------------------------------------------------------------------------------------------------
bool gt_Addcomputertoalliedforce_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetAlliance(7, 1, 1);
    libNtve_gf_SetAlliance(7, 2, 1);
    libNtve_gf_SetAlliance(7, 3, 1);
    libNtve_gf_SetAlliance(7, 4, 1);
    libNtve_gf_SetAlliance(7, 5, 1);
    libNtve_gf_SetAlliance(7, 6, 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Addcomputertoalliedforce_Init () {
    gt_Addcomputertoalliedforce = TriggerCreate("gt_Addcomputertoalliedforce_Func");
    TriggerAddEventMapInit(gt_Addcomputertoalliedforce);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Namek
//--------------------------------------------------------------------------------------------------
bool gt_SpawnNamek_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitIsAlive(UnitFromId(561)) == true) && ((UnitGroupCount(gv_amountofNameks[0], c_unitCountAlive) >= 0) && (UnitGroupCount(gv_amountofNameks[0], c_unitCountAlive) <= 3))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "InfestedTerran", 0, 7, RegionGetCenter(RegionFromId(90)), UnitGetPosition(UnitFromId(561)));
    UnitGroupAdd(gv_amountofNameks[0], UnitLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnNamek_Init () {
    gt_SpawnNamek = TriggerCreate("gt_SpawnNamek_Func");
    TriggerAddEventTimePeriodic(gt_SpawnNamek, 30.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Namek 2
//--------------------------------------------------------------------------------------------------
bool gt_SpawnNamek2_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitIsAlive(UnitFromId(562)) == true) && ((UnitGroupCount(gv_amountofNameks[1], c_unitCountAlive) >= 0) && (UnitGroupCount(gv_amountofNameks[1], c_unitCountAlive) <= 3))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "InfestedTerran", 0, 7, RegionGetCenter(RegionFromId(91)), UnitGetPosition(UnitFromId(562)));
    UnitGroupAdd(gv_amountofNameks[1], UnitLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnNamek2_Init () {
    gt_SpawnNamek2 = TriggerCreate("gt_SpawnNamek2_Func");
    TriggerAddEventTimePeriodic(gt_SpawnNamek2, 30.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Namek 3
//--------------------------------------------------------------------------------------------------
bool gt_SpawnNamek3_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitIsAlive(UnitFromId(563)) == true) && ((UnitGroupCount(gv_amountofNameks[2], c_unitCountAlive) >= 0) && (UnitGroupCount(gv_amountofNameks[2], c_unitCountAlive) <= 3))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "InfestedTerran", 0, 7, RegionGetCenter(RegionFromId(92)), UnitGetPosition(UnitFromId(563)));
    UnitGroupAdd(gv_amountofNameks[2], UnitLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnNamek3_Init () {
    gt_SpawnNamek3 = TriggerCreate("gt_SpawnNamek3_Func");
    TriggerAddEventTimePeriodic(gt_SpawnNamek3, 30.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Namek 4
//--------------------------------------------------------------------------------------------------
bool gt_SpawnNamek4_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitIsAlive(UnitFromId(564)) == true) && ((UnitGroupCount(gv_amountofNameks[3], c_unitCountAlive) >= 0) && (UnitGroupCount(gv_amountofNameks[3], c_unitCountAlive) <= 3))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "InfestedTerran", 0, 7, RegionGetCenter(RegionFromId(93)), UnitGetPosition(UnitFromId(564)));
    UnitGroupAdd(gv_amountofNameks[3], UnitLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnNamek4_Init () {
    gt_SpawnNamek4 = TriggerCreate("gt_SpawnNamek4_Func");
    TriggerAddEventTimePeriodic(gt_SpawnNamek4, 30.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Namek 5
//--------------------------------------------------------------------------------------------------
bool gt_SpawnNamek5_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitIsAlive(UnitFromId(565)) == true) && ((UnitGroupCount(gv_amountofNameks[4], c_unitCountAlive) >= 0) && (UnitGroupCount(gv_amountofNameks[4], c_unitCountAlive) <= 3))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "InfestedTerran", 0, 7, RegionGetCenter(RegionFromId(94)), UnitGetPosition(UnitFromId(565)));
    UnitGroupAdd(gv_amountofNameks[4], UnitLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnNamek5_Init () {
    gt_SpawnNamek5 = TriggerCreate("gt_SpawnNamek5_Func");
    TriggerAddEventTimePeriodic(gt_SpawnNamek5, 30.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Namek 6
//--------------------------------------------------------------------------------------------------
bool gt_SpawnNamek6_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitIsAlive(UnitFromId(566)) == true) && ((UnitGroupCount(gv_amountofNameks[5], c_unitCountAlive) >= 0) && (UnitGroupCount(gv_amountofNameks[5], c_unitCountAlive) <= 3))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "InfestedTerran", 0, 7, RegionGetCenter(RegionFromId(95)), UnitGetPosition(UnitFromId(566)));
    UnitGroupAdd(gv_amountofNameks[5], UnitLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnNamek6_Init () {
    gt_SpawnNamek6 = TriggerCreate("gt_SpawnNamek6_Func");
    TriggerAddEventTimePeriodic(gt_SpawnNamek6, 30.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Namek 7
//--------------------------------------------------------------------------------------------------
bool gt_SpawnNamek7_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitIsAlive(UnitFromId(567)) == true) && ((UnitGroupCount(gv_amountofNameks[6], c_unitCountAlive) >= 0) && (UnitGroupCount(gv_amountofNameks[6], c_unitCountAlive) <= 3))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "InfestedTerran", 0, 7, RegionGetCenter(RegionFromId(96)), UnitGetPosition(UnitFromId(567)));
    UnitGroupAdd(gv_amountofNameks[6], UnitLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnNamek7_Init () {
    gt_SpawnNamek7 = TriggerCreate("gt_SpawnNamek7_Func");
    TriggerAddEventTimePeriodic(gt_SpawnNamek7, 30.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Protect transformations from player units
//--------------------------------------------------------------------------------------------------
bool gt_Protecttransformationsfromplayerunits_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) != 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(21)), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Protecttransformationsfromplayerunits_Init () {
    gt_Protecttransformationsfromplayerunits = TriggerCreate("gt_Protecttransformationsfromplayerunits_Func");
    TriggerAddEventUnitRegion(gt_Protecttransformationsfromplayerunits, null, RegionFromId(2), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set original goku value
//--------------------------------------------------------------------------------------------------
bool gt_Setoriginalgokuvalue_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    DataTableSetUnit(true, "Goku", UnitFromId(104));
    DataTableSetUnit(false, "Goku", UnitFromId(104));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Setoriginalgokuvalue_Init () {
    gt_Setoriginalgokuvalue = TriggerCreate("gt_Setoriginalgokuvalue_Func");
    TriggerAddEventMapInit(gt_Setoriginalgokuvalue);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Revert to normal (goku)
//--------------------------------------------------------------------------------------------------
bool gt_Reverttonormalgoku_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(UnitFromId(104)) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    DataTableSetUnit(false, "Goku", UnitFromId(104));
    DataTableSetUnit(true, "Goku New", UnitFromId(104));
    UnitSetOwner(DataTableGetUnit(true, "Goku New"), EventPlayer(), true);
    UnitSetPosition(DataTableGetUnit(true, "Goku New"), UnitGetPosition(DataTableGetUnit(true, "Goku")), false);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), UnitGetPosition(DataTableGetUnit(true, "Goku New")), 1.5);
    while ((UnitGroupCount(gv_transformingAura, c_unitCountAlive) != 1)) {
        UnitCreate(1, "Observer", 0, EventPlayer(), RegionGetCenter(RegionFromId(84)), 270.0);
        UnitGroupAdd(gv_transformingAura, UnitLastCreated());
    }
    UnitGroupLoopBegin(gv_transformingAura);
    for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
        UnitKill(UnitGroupLoopCurrent());
    }
    UnitGroupLoopEnd();
    UnitSetOwner(DataTableGetUnit(true, "Goku"), 0, true);
    UnitSetPosition(DataTableGetUnit(true, "Goku"), UnitGetPosition(UnitFromId(29)), false);
    DataTableSetUnit(true, "Goku", UnitFromId(104));
    RegionAttachToUnit(RegionFromId(84), UnitFromId(104), Point(0.0, 0.0));
    UnitControlGroupAddUnit(EventPlayer(), 1, UnitFromId(104));
    TextTagAttachToUnit(gv_playerNames[0], UnitFromId(104), -1.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Reverttonormalgoku_Init () {
    gt_Reverttonormalgoku = TriggerCreate("gt_Reverttonormalgoku_Func");
    TriggerAddEventUnitRangePoint(gt_Reverttonormalgoku, UnitRefFromUnit(UnitFromId(135)), RegionGetCenter(RegionFromId(22)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transform ssj (goku)
//--------------------------------------------------------------------------------------------------
bool gt_Transformssjgoku_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(UnitFromId(173)) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 15000)) {
        DataTableSetUnit(false, "Goku SSJ", UnitFromId(173));
        DataTableSetUnit(true, "Goku New", UnitFromId(173));
        UnitSetOwner(DataTableGetUnit(true, "Goku New"), EventPlayer(), true);
        UnitSetPosition(DataTableGetUnit(true, "Goku New"), UnitGetPosition(DataTableGetUnit(true, "Goku")), false);
        libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), UnitGetPosition(DataTableGetUnit(true, "Goku New")), 1.5);
        while ((UnitGroupCount(gv_transformingAura, c_unitCountAlive) != 5)) {
            UnitCreate(1, "Observer", 0, EventPlayer(), RegionGetCenter(RegionFromId(84)), 270.0);
            UnitGroupAdd(gv_transformingAura, UnitLastCreated());
        }
        UnitGroupLoopBegin(gv_transformingAura);
        for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
            UnitKill(UnitGroupLoopCurrent());
        }
        UnitGroupLoopEnd();
        UnitSetOwner(DataTableGetUnit(true, "Goku"), 0, true);
        UnitSetPosition(DataTableGetUnit(true, "Goku"), UnitGetPosition(UnitFromId(29)), false);
        DataTableSetUnit(true, "Goku", UnitFromId(173));
        RegionAttachToUnit(RegionFromId(84), UnitFromId(173), Point(0.0, 0.0));
        UnitControlGroupAddUnit(EventPlayer(), 1, UnitFromId(173));
        TextTagAttachToUnit(gv_playerNames[0], UnitFromId(173), -1.0);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Transformssjgoku_Init () {
    gt_Transformssjgoku = TriggerCreate("gt_Transformssjgoku_Func");
    TriggerAddEventUnitRangePoint(gt_Transformssjgoku, UnitRefFromUnit(UnitFromId(135)), RegionGetCenter(RegionFromId(23)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Subtract Gas Goku SSJ
//--------------------------------------------------------------------------------------------------
bool gt_SubtractGasGokuSSJ_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((UnitGetOwner(UnitFromId(173)) == IntLoopCurrent()) && ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) >= 1) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperSubtract, 4);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SubtractGasGokuSSJ_Init () {
    gt_SubtractGasGokuSSJ = TriggerCreate("gt_SubtractGasGokuSSJ_Func");
    TriggerAddEventTimePeriodic(gt_SubtractGasGokuSSJ, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transform ssj2 (goku)
//--------------------------------------------------------------------------------------------------
bool gt_Transformssj2goku_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(UnitFromId(179)) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 150000)) {
        DataTableSetUnit(false, "Goku SSJ2", UnitFromId(179));
        DataTableSetUnit(true, "Goku New", UnitFromId(179));
        UnitSetOwner(DataTableGetUnit(true, "Goku New"), EventPlayer(), true);
        UnitSetPosition(DataTableGetUnit(true, "Goku New"), UnitGetPosition(DataTableGetUnit(true, "Goku")), false);
        libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), UnitGetPosition(DataTableGetUnit(true, "Goku New")), 1.5);
        while ((UnitGroupCount(gv_transformingAura, c_unitCountAlive) != 7)) {
            UnitCreate(1, "Observer", 0, EventPlayer(), RegionGetCenter(RegionFromId(84)), 270.0);
            UnitGroupAdd(gv_transformingAura, UnitLastCreated());
        }
        UnitGroupLoopBegin(gv_transformingAura);
        for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
            UnitKill(UnitGroupLoopCurrent());
        }
        UnitGroupLoopEnd();
        UnitSetOwner(DataTableGetUnit(true, "Goku"), 0, true);
        UnitSetPosition(DataTableGetUnit(true, "Goku"), UnitGetPosition(UnitFromId(29)), false);
        DataTableSetUnit(true, "Goku", UnitFromId(179));
        RegionAttachToUnit(RegionFromId(84), UnitFromId(179), Point(0.0, 0.0));
        UnitControlGroupAddUnit(EventPlayer(), 1, UnitFromId(179));
        TextTagAttachToUnit(gv_playerNames[0], UnitFromId(179), -1.0);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Transformssj2goku_Init () {
    gt_Transformssj2goku = TriggerCreate("gt_Transformssj2goku_Func");
    TriggerAddEventUnitRangePoint(gt_Transformssj2goku, UnitRefFromUnit(UnitFromId(135)), RegionGetCenter(RegionFromId(24)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Subtract Gas Goku SSJ 2
//--------------------------------------------------------------------------------------------------
bool gt_SubtractGasGokuSSJ2_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((UnitGetOwner(UnitFromId(179)) == IntLoopCurrent()) && ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) >= 1) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperSubtract, 7);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SubtractGasGokuSSJ2_Init () {
    gt_SubtractGasGokuSSJ2 = TriggerCreate("gt_SubtractGasGokuSSJ2_Func");
    TriggerAddEventTimePeriodic(gt_SubtractGasGokuSSJ2, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transform ssj3 (goku)
//--------------------------------------------------------------------------------------------------
bool gt_Transformssj3goku_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(UnitFromId(174)) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 250000)) {
        DataTableSetUnit(false, "Goku SSJ3", UnitFromId(174));
        DataTableSetUnit(true, "Goku New", UnitFromId(174));
        UnitSetOwner(DataTableGetUnit(true, "Goku New"), EventPlayer(), true);
        UnitSetPosition(DataTableGetUnit(true, "Goku New"), UnitGetPosition(DataTableGetUnit(true, "Goku")), false);
        libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), UnitGetPosition(DataTableGetUnit(true, "Goku New")), 1.5);
        while ((UnitGroupCount(gv_transformingAura, c_unitCountAlive) != 9)) {
            UnitCreate(1, "Observer", 0, EventPlayer(), RegionGetCenter(RegionFromId(84)), 270.0);
            UnitGroupAdd(gv_transformingAura, UnitLastCreated());
        }
        UnitGroupLoopBegin(gv_transformingAura);
        for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
            UnitKill(UnitGroupLoopCurrent());
        }
        UnitGroupLoopEnd();
        UnitSetOwner(DataTableGetUnit(true, "Goku"), 0, true);
        UnitSetPosition(DataTableGetUnit(true, "Goku"), UnitGetPosition(UnitFromId(29)), false);
        DataTableSetUnit(true, "Goku", UnitFromId(174));
        RegionAttachToUnit(RegionFromId(84), UnitFromId(174), Point(0.0, 0.0));
        UnitControlGroupAddUnit(EventPlayer(), 1, UnitFromId(174));
        TextTagAttachToUnit(gv_playerNames[0], UnitFromId(174), -1.0);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Transformssj3goku_Init () {
    gt_Transformssj3goku = TriggerCreate("gt_Transformssj3goku_Func");
    TriggerAddEventUnitRangePoint(gt_Transformssj3goku, UnitRefFromUnit(UnitFromId(135)), RegionGetCenter(RegionFromId(25)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Subtract Gas Goku SSJ 3
//--------------------------------------------------------------------------------------------------
bool gt_SubtractGasGokuSSJ3_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((UnitGetOwner(UnitFromId(174)) == IntLoopCurrent()) && ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) >= 1) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperSubtract, 10);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SubtractGasGokuSSJ3_Init () {
    gt_SubtractGasGokuSSJ3 = TriggerCreate("gt_SubtractGasGokuSSJ3_Func");
    TriggerAddEventTimePeriodic(gt_SubtractGasGokuSSJ3, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transform ssj4 (goku)
//--------------------------------------------------------------------------------------------------
bool gt_Transformssj4goku_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(UnitFromId(141)) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 750000) && (UnitGroupCount(gv_crystals[UnitGetOwner(RegionGetAttachUnit(RegionFromId(84)))], c_unitCountAlive) >= 8)) {
        DataTableSetUnit(false, "Goku SSJ4", UnitFromId(141));
        DataTableSetUnit(true, "Goku New", UnitFromId(141));
        UnitSetOwner(DataTableGetUnit(true, "Goku New"), EventPlayer(), true);
        UnitSetPosition(DataTableGetUnit(true, "Goku New"), UnitGetPosition(DataTableGetUnit(true, "Goku")), false);
        libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), UnitGetPosition(DataTableGetUnit(true, "Goku New")), 1.5);
        while ((UnitGroupCount(gv_transformingAura, c_unitCountAlive) != 15)) {
            UnitCreate(1, "Observer", 0, EventPlayer(), RegionGetCenter(RegionFromId(84)), 270.0);
            UnitGroupAdd(gv_transformingAura, UnitLastCreated());
        }
        UnitGroupLoopBegin(gv_transformingAura);
        for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
            UnitKill(UnitGroupLoopCurrent());
        }
        UnitGroupLoopEnd();
        UnitSetOwner(DataTableGetUnit(true, "Goku"), 0, true);
        UnitSetPosition(DataTableGetUnit(true, "Goku"), UnitGetPosition(UnitFromId(29)), false);
        DataTableSetUnit(true, "Goku", UnitFromId(141));
        RegionAttachToUnit(RegionFromId(84), UnitFromId(141), Point(0.0, 0.0));
        UnitControlGroupAddUnit(EventPlayer(), 1, UnitFromId(141));
        TextTagAttachToUnit(gv_playerNames[0], UnitFromId(141), -1.0);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Transformssj4goku_Init () {
    gt_Transformssj4goku = TriggerCreate("gt_Transformssj4goku_Func");
    TriggerAddEventUnitRangePoint(gt_Transformssj4goku, UnitRefFromUnit(UnitFromId(135)), RegionGetCenter(RegionFromId(26)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Subtract Gas Goku SSJ 4
//--------------------------------------------------------------------------------------------------
bool gt_SubtractGasGokuSSJ4_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((UnitGetOwner(UnitFromId(141)) == IntLoopCurrent()) && ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) >= 1) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperSubtract, 20);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SubtractGasGokuSSJ4_Init () {
    gt_SubtractGasGokuSSJ4 = TriggerCreate("gt_SubtractGasGokuSSJ4_Func");
    TriggerAddEventTimePeriodic(gt_SubtractGasGokuSSJ4, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transform Vegito (goku)
//--------------------------------------------------------------------------------------------------
bool gt_TransformVegitogoku_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(UnitFromId(167)) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 350000)) {
        DataTableSetUnit(false, "Vegito (Goku)", UnitFromId(167));
        DataTableSetUnit(true, "Goku New", UnitFromId(167));
        UnitSetOwner(DataTableGetUnit(true, "Goku New"), EventPlayer(), true);
        UnitSetPosition(DataTableGetUnit(true, "Goku New"), UnitGetPosition(DataTableGetUnit(true, "Goku")), false);
        libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), UnitGetPosition(DataTableGetUnit(true, "Goku New")), 1.5);
        while ((UnitGroupCount(gv_transformingAura, c_unitCountAlive) != 11)) {
            UnitCreate(1, "Observer", 0, EventPlayer(), RegionGetCenter(RegionFromId(84)), 270.0);
            UnitGroupAdd(gv_transformingAura, UnitLastCreated());
        }
        UnitGroupLoopBegin(gv_transformingAura);
        for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
            UnitKill(UnitGroupLoopCurrent());
        }
        UnitGroupLoopEnd();
        UnitSetOwner(DataTableGetUnit(true, "Goku"), 0, true);
        UnitSetPosition(DataTableGetUnit(true, "Goku"), UnitGetPosition(UnitFromId(29)), false);
        DataTableSetUnit(true, "Goku", UnitFromId(167));
        RegionAttachToUnit(RegionFromId(84), UnitFromId(167), Point(0.0, 0.0));
        UnitControlGroupAddUnit(EventPlayer(), 1, UnitFromId(167));
        TextTagAttachToUnit(gv_playerNames[0], UnitFromId(167), -1.0);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransformVegitogoku_Init () {
    gt_TransformVegitogoku = TriggerCreate("gt_TransformVegitogoku_Func");
    TriggerAddEventUnitRangePoint(gt_TransformVegitogoku, UnitRefFromUnit(UnitFromId(135)), RegionGetCenter(RegionFromId(27)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Subtract Gas Vegito (Goku)
//--------------------------------------------------------------------------------------------------
bool gt_SubtractGasVegitoGoku_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((UnitGetOwner(UnitFromId(167)) == IntLoopCurrent()) && ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) >= 1) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperSubtract, 12);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SubtractGasVegitoGoku_Init () {
    gt_SubtractGasVegitoGoku = TriggerCreate("gt_SubtractGasVegitoGoku_Func");
    TriggerAddEventTimePeriodic(gt_SubtractGasVegitoGoku, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transform ssj Vegito (goku)
//--------------------------------------------------------------------------------------------------
bool gt_TransformssjVegitogoku_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(UnitFromId(161)) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 450000)) {
        DataTableSetUnit(false, "Vegito SSJ (Goku)", UnitFromId(161));
        DataTableSetUnit(true, "Goku New", UnitFromId(161));
        UnitSetOwner(DataTableGetUnit(true, "Goku New"), EventPlayer(), true);
        UnitSetPosition(DataTableGetUnit(true, "Goku New"), UnitGetPosition(DataTableGetUnit(true, "Goku")), false);
        libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), UnitGetPosition(DataTableGetUnit(true, "Goku New")), 1.5);
        while ((UnitGroupCount(gv_transformingAura, c_unitCountAlive) != 13)) {
            UnitCreate(1, "Observer", 0, EventPlayer(), RegionGetCenter(RegionFromId(84)), 270.0);
            UnitGroupAdd(gv_transformingAura, UnitLastCreated());
        }
        UnitGroupLoopBegin(gv_transformingAura);
        for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
            UnitKill(UnitGroupLoopCurrent());
        }
        UnitGroupLoopEnd();
        UnitSetOwner(DataTableGetUnit(true, "Goku"), 0, true);
        UnitSetPosition(DataTableGetUnit(true, "Goku"), UnitGetPosition(UnitFromId(29)), false);
        DataTableSetUnit(true, "Goku", UnitFromId(161));
        RegionAttachToUnit(RegionFromId(84), UnitFromId(161), Point(0.0, 0.0));
        UnitControlGroupAddUnit(EventPlayer(), 1, UnitFromId(161));
        TextTagAttachToUnit(gv_playerNames[0], UnitFromId(161), -1.0);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransformssjVegitogoku_Init () {
    gt_TransformssjVegitogoku = TriggerCreate("gt_TransformssjVegitogoku_Func");
    TriggerAddEventUnitRangePoint(gt_TransformssjVegitogoku, UnitRefFromUnit(UnitFromId(135)), RegionGetCenter(RegionFromId(28)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Subtract Gas Super Vegito (Goku)
//--------------------------------------------------------------------------------------------------
bool gt_SubtractGasSuperVegitoGoku_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((UnitGetOwner(UnitFromId(161)) == IntLoopCurrent()) && ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) >= 1) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperSubtract, 14);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SubtractGasSuperVegitoGoku_Init () {
    gt_SubtractGasSuperVegitoGoku = TriggerCreate("gt_SubtractGasSuperVegitoGoku_Func");
    TriggerAddEventTimePeriodic(gt_SubtractGasSuperVegitoGoku, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set original vegeta value
//--------------------------------------------------------------------------------------------------
bool gt_Setoriginalvegetavalue_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    DataTableSetUnit(true, "Vegeta", UnitFromId(105));
    DataTableSetUnit(false, "Vegeta", UnitFromId(105));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Setoriginalvegetavalue_Init () {
    gt_Setoriginalvegetavalue = TriggerCreate("gt_Setoriginalvegetavalue_Func");
    TriggerAddEventMapInit(gt_Setoriginalvegetavalue);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Revert to normal (vegeta)
//--------------------------------------------------------------------------------------------------
bool gt_Reverttonormalvegeta_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(UnitFromId(105)) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    DataTableSetUnit(false, "Vegeta", UnitFromId(105));
    DataTableSetUnit(true, "Vegeta New", UnitFromId(105));
    UnitSetOwner(DataTableGetUnit(true, "Vegeta New"), EventPlayer(), true);
    UnitSetPosition(DataTableGetUnit(true, "Vegeta New"), UnitGetPosition(DataTableGetUnit(true, "Vegeta")), false);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), UnitGetPosition(DataTableGetUnit(true, "Vegeta New")), 1.5);
    while ((UnitGroupCount(gv_transformingAura, c_unitCountAlive) != 1)) {
        UnitCreate(1, "Observer", 0, EventPlayer(), RegionGetCenter(RegionFromId(85)), 270.0);
        UnitGroupAdd(gv_transformingAura, UnitLastCreated());
    }
    UnitGroupLoopBegin(gv_transformingAura);
    for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
        UnitKill(UnitGroupLoopCurrent());
    }
    UnitGroupLoopEnd();
    UnitSetOwner(DataTableGetUnit(true, "Vegeta"), 0, true);
    UnitSetPosition(DataTableGetUnit(true, "Vegeta"), UnitGetPosition(UnitFromId(29)), false);
    DataTableSetUnit(true, "Vegeta", UnitFromId(105));
    RegionAttachToUnit(RegionFromId(85), UnitFromId(105), Point(0.0, 0.0));
    UnitControlGroupAddUnit(EventPlayer(), 1, UnitFromId(105));
    TextTagAttachToUnit(gv_playerNames[1], UnitFromId(105), -1.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Reverttonormalvegeta_Init () {
    gt_Reverttonormalvegeta = TriggerCreate("gt_Reverttonormalvegeta_Func");
    TriggerAddEventUnitRangePoint(gt_Reverttonormalvegeta, UnitRefFromUnit(UnitFromId(158)), RegionGetCenter(RegionFromId(31)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transform ssj (vegeta)
//--------------------------------------------------------------------------------------------------
bool gt_Transformssjvegeta_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(UnitFromId(187)) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 15000)) {
        DataTableSetUnit(false, "Vegeta", UnitFromId(187));
        DataTableSetUnit(true, "Vegeta New", UnitFromId(187));
        UnitSetOwner(DataTableGetUnit(true, "Vegeta New"), EventPlayer(), true);
        UnitSetPosition(DataTableGetUnit(true, "Vegeta New"), UnitGetPosition(DataTableGetUnit(true, "Vegeta")), false);
        libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), UnitGetPosition(DataTableGetUnit(true, "Vegeta New")), 1.5);
        while ((UnitGroupCount(gv_transformingAura, c_unitCountAlive) != 5)) {
            UnitCreate(1, "Observer", 0, EventPlayer(), RegionGetCenter(RegionFromId(85)), 270.0);
            UnitGroupAdd(gv_transformingAura, UnitLastCreated());
        }
        UnitGroupLoopBegin(gv_transformingAura);
        for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
            UnitKill(UnitGroupLoopCurrent());
        }
        UnitGroupLoopEnd();
        UnitSetOwner(DataTableGetUnit(true, "Vegeta"), 0, true);
        UnitSetPosition(DataTableGetUnit(true, "Vegeta"), UnitGetPosition(UnitFromId(29)), false);
        DataTableSetUnit(true, "Vegeta", UnitFromId(187));
        RegionAttachToUnit(RegionFromId(85), UnitFromId(187), Point(0.0, 0.0));
        UnitControlGroupAddUnit(EventPlayer(), 1, UnitFromId(187));
        TextTagAttachToUnit(gv_playerNames[1], UnitFromId(187), -1.0);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Transformssjvegeta_Init () {
    gt_Transformssjvegeta = TriggerCreate("gt_Transformssjvegeta_Func");
    TriggerAddEventUnitRangePoint(gt_Transformssjvegeta, UnitRefFromUnit(UnitFromId(158)), RegionGetCenter(RegionFromId(32)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Subtract Gas Vegeta SSJ
//--------------------------------------------------------------------------------------------------
bool gt_SubtractGasVegetaSSJ_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((UnitGetOwner(UnitFromId(187)) == IntLoopCurrent()) && ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) >= 1) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperSubtract, 5);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SubtractGasVegetaSSJ_Init () {
    gt_SubtractGasVegetaSSJ = TriggerCreate("gt_SubtractGasVegetaSSJ_Func");
    TriggerAddEventTimePeriodic(gt_SubtractGasVegetaSSJ, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transform ssj2 (vegeta)
//--------------------------------------------------------------------------------------------------
bool gt_Transformssj2vegeta_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(UnitFromId(177)) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 150000)) {
        DataTableSetUnit(false, "Vegeta", UnitFromId(177));
        DataTableSetUnit(true, "Vegeta New", UnitFromId(177));
        UnitSetOwner(DataTableGetUnit(true, "Vegeta New"), EventPlayer(), true);
        UnitSetPosition(DataTableGetUnit(true, "Vegeta New"), UnitGetPosition(DataTableGetUnit(true, "Vegeta")), false);
        libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), UnitGetPosition(DataTableGetUnit(true, "Vegeta New")), 1.5);
        while ((UnitGroupCount(gv_transformingAura, c_unitCountAlive) != 7)) {
            UnitCreate(1, "Observer", 0, EventPlayer(), RegionGetCenter(RegionFromId(85)), 270.0);
            UnitGroupAdd(gv_transformingAura, UnitLastCreated());
        }
        UnitGroupLoopBegin(gv_transformingAura);
        for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
            UnitKill(UnitGroupLoopCurrent());
        }
        UnitGroupLoopEnd();
        UnitSetOwner(DataTableGetUnit(true, "Vegeta"), 0, true);
        UnitSetPosition(DataTableGetUnit(true, "Vegeta"), UnitGetPosition(UnitFromId(29)), false);
        DataTableSetUnit(true, "Vegeta", UnitFromId(177));
        RegionAttachToUnit(RegionFromId(85), UnitFromId(177), Point(0.0, 0.0));
        UnitControlGroupAddUnit(EventPlayer(), 1, UnitFromId(177));
        TextTagAttachToUnit(gv_playerNames[1], UnitFromId(177), -1.0);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Transformssj2vegeta_Init () {
    gt_Transformssj2vegeta = TriggerCreate("gt_Transformssj2vegeta_Func");
    TriggerAddEventUnitRangePoint(gt_Transformssj2vegeta, UnitRefFromUnit(UnitFromId(158)), RegionGetCenter(RegionFromId(33)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Subtract Gas Vegeta SSJ 2
//--------------------------------------------------------------------------------------------------
bool gt_SubtractGasVegetaSSJ2_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((UnitGetOwner(UnitFromId(177)) == IntLoopCurrent()) && ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) >= 1) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperSubtract, 7);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SubtractGasVegetaSSJ2_Init () {
    gt_SubtractGasVegetaSSJ2 = TriggerCreate("gt_SubtractGasVegetaSSJ2_Func");
    TriggerAddEventTimePeriodic(gt_SubtractGasVegetaSSJ2, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transform majin (vegeta)
//--------------------------------------------------------------------------------------------------
bool gt_Transformmajinvegeta_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(UnitFromId(183)) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 250000)) {
        DataTableSetUnit(false, "Vegeta", UnitFromId(183));
        DataTableSetUnit(true, "Vegeta New", UnitFromId(183));
        UnitSetOwner(DataTableGetUnit(true, "Vegeta New"), EventPlayer(), true);
        UnitSetPosition(DataTableGetUnit(true, "Vegeta New"), UnitGetPosition(DataTableGetUnit(true, "Vegeta")), false);
        libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), UnitGetPosition(DataTableGetUnit(true, "Vegeta New")), 1.5);
        while ((UnitGroupCount(gv_transformingAura, c_unitCountAlive) != 8)) {
            UnitCreate(1, "Observer", 0, EventPlayer(), RegionGetCenter(RegionFromId(85)), 270.0);
            UnitGroupAdd(gv_transformingAura, UnitLastCreated());
        }
        UnitGroupLoopBegin(gv_transformingAura);
        for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
            UnitKill(UnitGroupLoopCurrent());
        }
        UnitGroupLoopEnd();
        UnitSetOwner(DataTableGetUnit(true, "Vegeta"), 0, true);
        UnitSetPosition(DataTableGetUnit(true, "Vegeta"), UnitGetPosition(UnitFromId(29)), false);
        DataTableSetUnit(true, "Vegeta", UnitFromId(183));
        RegionAttachToUnit(RegionFromId(85), UnitFromId(183), Point(0.0, 0.0));
        UnitControlGroupAddUnit(EventPlayer(), 1, UnitFromId(183));
        TextTagAttachToUnit(gv_playerNames[1], UnitFromId(183), -1.0);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Transformmajinvegeta_Init () {
    gt_Transformmajinvegeta = TriggerCreate("gt_Transformmajinvegeta_Func");
    TriggerAddEventUnitRangePoint(gt_Transformmajinvegeta, UnitRefFromUnit(UnitFromId(158)), RegionGetCenter(RegionFromId(34)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Subtract Gas Majin Vegeta
//--------------------------------------------------------------------------------------------------
bool gt_SubtractGasMajinVegeta_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((UnitGetOwner(UnitFromId(183)) == IntLoopCurrent()) && ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) >= 1) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperSubtract, 10);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SubtractGasMajinVegeta_Init () {
    gt_SubtractGasMajinVegeta = TriggerCreate("gt_SubtractGasMajinVegeta_Func");
    TriggerAddEventTimePeriodic(gt_SubtractGasMajinVegeta, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transform ssj4 (vegeta)
//--------------------------------------------------------------------------------------------------
bool gt_Transformssj4vegeta_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(UnitFromId(171)) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 750000) && (UnitGroupCount(gv_crystals[UnitGetOwner(RegionGetAttachUnit(RegionFromId(85)))], c_unitCountAlive) >= 8)) {
        DataTableSetUnit(false, "Vegeta", UnitFromId(171));
        DataTableSetUnit(true, "Vegeta New", UnitFromId(171));
        UnitSetOwner(DataTableGetUnit(true, "Vegeta New"), EventPlayer(), true);
        UnitSetPosition(DataTableGetUnit(true, "Vegeta New"), UnitGetPosition(DataTableGetUnit(true, "Vegeta")), false);
        libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), UnitGetPosition(DataTableGetUnit(true, "Vegeta New")), 1.5);
        while ((UnitGroupCount(gv_transformingAura, c_unitCountAlive) != 14)) {
            UnitCreate(1, "Observer", 0, EventPlayer(), RegionGetCenter(RegionFromId(85)), 270.0);
            UnitGroupAdd(gv_transformingAura, UnitLastCreated());
        }
        UnitGroupLoopBegin(gv_transformingAura);
        for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
            UnitKill(UnitGroupLoopCurrent());
        }
        UnitGroupLoopEnd();
        UnitSetOwner(DataTableGetUnit(true, "Vegeta"), 0, true);
        UnitSetPosition(DataTableGetUnit(true, "Vegeta"), UnitGetPosition(UnitFromId(29)), false);
        DataTableSetUnit(true, "Vegeta", UnitFromId(171));
        RegionAttachToUnit(RegionFromId(85), UnitFromId(171), Point(0.0, 0.0));
        UnitControlGroupAddUnit(EventPlayer(), 1, UnitFromId(171));
        TextTagAttachToUnit(gv_playerNames[1], UnitFromId(171), -1.0);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Transformssj4vegeta_Init () {
    gt_Transformssj4vegeta = TriggerCreate("gt_Transformssj4vegeta_Func");
    TriggerAddEventUnitRangePoint(gt_Transformssj4vegeta, UnitRefFromUnit(UnitFromId(158)), RegionGetCenter(RegionFromId(35)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Subtract Gas Vegeta SSJ 4
//--------------------------------------------------------------------------------------------------
bool gt_SubtractGasVegetaSSJ4_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((UnitGetOwner(UnitFromId(171)) == IntLoopCurrent()) && ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) >= 1) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperSubtract, 20);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SubtractGasVegetaSSJ4_Init () {
    gt_SubtractGasVegetaSSJ4 = TriggerCreate("gt_SubtractGasVegetaSSJ4_Func");
    TriggerAddEventTimePeriodic(gt_SubtractGasVegetaSSJ4, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transform Vegito (vegeta)
//--------------------------------------------------------------------------------------------------
bool gt_TransformVegitovegeta_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(UnitFromId(168)) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 350000)) {
        DataTableSetUnit(false, "Vegeta", UnitFromId(168));
        DataTableSetUnit(true, "Vegeta New", UnitFromId(168));
        UnitSetOwner(DataTableGetUnit(true, "Vegeta New"), EventPlayer(), true);
        UnitSetPosition(DataTableGetUnit(true, "Vegeta New"), UnitGetPosition(DataTableGetUnit(true, "Vegeta")), false);
        libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), UnitGetPosition(DataTableGetUnit(true, "Vegeta New")), 1.5);
        while ((UnitGroupCount(gv_transformingAura, c_unitCountAlive) != 11)) {
            UnitCreate(1, "Observer", 0, EventPlayer(), RegionGetCenter(RegionFromId(85)), 270.0);
            UnitGroupAdd(gv_transformingAura, UnitLastCreated());
        }
        UnitGroupLoopBegin(gv_transformingAura);
        for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
            UnitKill(UnitGroupLoopCurrent());
        }
        UnitGroupLoopEnd();
        UnitSetOwner(DataTableGetUnit(true, "Vegeta"), 0, true);
        UnitSetPosition(DataTableGetUnit(true, "Vegeta"), UnitGetPosition(UnitFromId(29)), false);
        DataTableSetUnit(true, "Vegeta", UnitFromId(168));
        RegionAttachToUnit(RegionFromId(85), UnitFromId(168), Point(0.0, 0.0));
        UnitControlGroupAddUnit(EventPlayer(), 1, UnitFromId(168));
        TextTagAttachToUnit(gv_playerNames[1], UnitFromId(168), -1.0);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransformVegitovegeta_Init () {
    gt_TransformVegitovegeta = TriggerCreate("gt_TransformVegitovegeta_Func");
    TriggerAddEventUnitRangePoint(gt_TransformVegitovegeta, UnitRefFromUnit(UnitFromId(158)), RegionGetCenter(RegionFromId(36)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Subtract Gas Vegito (Vegeta)
//--------------------------------------------------------------------------------------------------
bool gt_SubtractGasVegitoVegeta_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((UnitGetOwner(UnitFromId(168)) == IntLoopCurrent()) && ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) >= 1) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperSubtract, 12);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SubtractGasVegitoVegeta_Init () {
    gt_SubtractGasVegitoVegeta = TriggerCreate("gt_SubtractGasVegitoVegeta_Func");
    TriggerAddEventTimePeriodic(gt_SubtractGasVegitoVegeta, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transform ssj Vegito (vegeta)
//--------------------------------------------------------------------------------------------------
bool gt_TransformssjVegitovegeta_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(UnitFromId(146)) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 450000)) {
        DataTableSetUnit(false, "Vegeta", UnitFromId(146));
        DataTableSetUnit(true, "Vegeta New", UnitFromId(146));
        UnitSetOwner(DataTableGetUnit(true, "Vegeta New"), EventPlayer(), true);
        UnitSetPosition(DataTableGetUnit(true, "Vegeta New"), UnitGetPosition(DataTableGetUnit(true, "Vegeta")), false);
        libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), UnitGetPosition(DataTableGetUnit(true, "Vegeta New")), 1.5);
        while ((UnitGroupCount(gv_transformingAura, c_unitCountAlive) != 13)) {
            UnitCreate(1, "Observer", 0, EventPlayer(), RegionGetCenter(RegionFromId(85)), 270.0);
            UnitGroupAdd(gv_transformingAura, UnitLastCreated());
        }
        UnitGroupLoopBegin(gv_transformingAura);
        for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
            UnitKill(UnitGroupLoopCurrent());
        }
        UnitGroupLoopEnd();
        UnitSetOwner(DataTableGetUnit(true, "Vegeta"), 0, true);
        UnitSetPosition(DataTableGetUnit(true, "Vegeta"), UnitGetPosition(UnitFromId(29)), false);
        DataTableSetUnit(true, "Vegeta", UnitFromId(146));
        RegionAttachToUnit(RegionFromId(85), UnitFromId(146), Point(0.0, 0.0));
        UnitControlGroupAddUnit(EventPlayer(), 1, UnitFromId(146));
        TextTagAttachToUnit(gv_playerNames[1], UnitFromId(146), -1.0);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransformssjVegitovegeta_Init () {
    gt_TransformssjVegitovegeta = TriggerCreate("gt_TransformssjVegitovegeta_Func");
    TriggerAddEventUnitRangePoint(gt_TransformssjVegitovegeta, UnitRefFromUnit(UnitFromId(158)), RegionGetCenter(RegionFromId(37)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Subtract Gas Super Vegito (Vegeta)
//--------------------------------------------------------------------------------------------------
bool gt_SubtractGasSuperVegitoVegeta_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((UnitGetOwner(UnitFromId(146)) == IntLoopCurrent()) && ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) >= 1) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperSubtract, 14);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SubtractGasSuperVegitoVegeta_Init () {
    gt_SubtractGasSuperVegitoVegeta = TriggerCreate("gt_SubtractGasSuperVegitoVegeta_Func");
    TriggerAddEventTimePeriodic(gt_SubtractGasSuperVegitoVegeta, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set original piccolo value
//--------------------------------------------------------------------------------------------------
bool gt_Setoriginalpiccolovalue_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    DataTableSetUnit(true, "Piccolo", UnitFromId(106));
    DataTableSetUnit(false, "Piccolo", UnitFromId(106));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Setoriginalpiccolovalue_Init () {
    gt_Setoriginalpiccolovalue = TriggerCreate("gt_Setoriginalpiccolovalue_Func");
    TriggerAddEventMapInit(gt_Setoriginalpiccolovalue);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Revert to normal (piccolo)
//--------------------------------------------------------------------------------------------------
bool gt_Reverttonormalpiccolo_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(UnitFromId(106)) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    DataTableSetUnit(false, "Piccolo", UnitFromId(106));
    DataTableSetUnit(true, "Piccolo New", UnitFromId(106));
    UnitSetOwner(DataTableGetUnit(true, "Piccolo New"), EventPlayer(), true);
    UnitSetPosition(DataTableGetUnit(true, "Piccolo New"), UnitGetPosition(DataTableGetUnit(true, "Piccolo")), false);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), UnitGetPosition(DataTableGetUnit(true, "Piccolo New")), 1.5);
    while ((UnitGroupCount(gv_transformingAura, c_unitCountAlive) != 1)) {
        UnitCreate(1, "Observer", 0, EventPlayer(), RegionGetCenter(RegionFromId(86)), 270.0);
        UnitGroupAdd(gv_transformingAura, UnitLastCreated());
    }
    UnitGroupLoopBegin(gv_transformingAura);
    for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
        UnitKill(UnitGroupLoopCurrent());
    }
    UnitGroupLoopEnd();
    UnitSetOwner(DataTableGetUnit(true, "Piccolo"), 0, true);
    UnitSetPosition(DataTableGetUnit(true, "Piccolo"), UnitGetPosition(UnitFromId(29)), false);
    DataTableSetUnit(true, "Piccolo", UnitFromId(106));
    RegionAttachToUnit(RegionFromId(86), UnitFromId(106), Point(0.0, 0.0));
    UnitControlGroupAddUnit(EventPlayer(), 1, UnitFromId(106));
    TextTagAttachToUnit(gv_playerNames[2], UnitFromId(106), -1.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Reverttonormalpiccolo_Init () {
    gt_Reverttonormalpiccolo = TriggerCreate("gt_Reverttonormalpiccolo_Func");
    TriggerAddEventUnitRangePoint(gt_Reverttonormalpiccolo, UnitRefFromUnit(UnitFromId(159)), RegionGetCenter(RegionFromId(38)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transform Fuse with Nail (piccolo)
//--------------------------------------------------------------------------------------------------
bool gt_TransformFusewithNailpiccolo_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(UnitFromId(178)) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 12000)) {
        DataTableSetUnit(false, "Piccolo", UnitFromId(178));
        DataTableSetUnit(true, "Piccolo New", UnitFromId(178));
        UnitSetOwner(DataTableGetUnit(true, "Piccolo New"), EventPlayer(), true);
        UnitSetPosition(DataTableGetUnit(true, "Piccolo New"), UnitGetPosition(DataTableGetUnit(true, "Piccolo")), false);
        libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), UnitGetPosition(DataTableGetUnit(true, "Piccolo New")), 1.5);
        while ((UnitGroupCount(gv_transformingAura, c_unitCountAlive) != 3)) {
            UnitCreate(1, "Observer", 0, EventPlayer(), RegionGetCenter(RegionFromId(86)), 270.0);
            UnitGroupAdd(gv_transformingAura, UnitLastCreated());
        }
        UnitGroupLoopBegin(gv_transformingAura);
        for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
            UnitKill(UnitGroupLoopCurrent());
        }
        UnitGroupLoopEnd();
        UnitSetOwner(DataTableGetUnit(true, "Piccolo"), 0, true);
        UnitSetPosition(DataTableGetUnit(true, "Piccolo"), UnitGetPosition(UnitFromId(29)), false);
        DataTableSetUnit(true, "Piccolo", UnitFromId(178));
        RegionAttachToUnit(RegionFromId(86), UnitFromId(178), Point(0.0, 0.0));
        UnitControlGroupAddUnit(EventPlayer(), 1, UnitFromId(178));
        TextTagAttachToUnit(gv_playerNames[2], UnitFromId(178), -1.0);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransformFusewithNailpiccolo_Init () {
    gt_TransformFusewithNailpiccolo = TriggerCreate("gt_TransformFusewithNailpiccolo_Func");
    TriggerAddEventUnitRangePoint(gt_TransformFusewithNailpiccolo, UnitRefFromUnit(UnitFromId(159)), RegionGetCenter(RegionFromId(39)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Subtract Gas Piccolo Fused (Nail)
//--------------------------------------------------------------------------------------------------
bool gt_SubtractGasPiccoloFusedNail_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((UnitGetOwner(UnitFromId(178)) == IntLoopCurrent()) && ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) >= 1) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperSubtract, 4);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SubtractGasPiccoloFusedNail_Init () {
    gt_SubtractGasPiccoloFusedNail = TriggerCreate("gt_SubtractGasPiccoloFusedNail_Func");
    TriggerAddEventTimePeriodic(gt_SubtractGasPiccoloFusedNail, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transform Fuse with Kamil (piccolo)
//--------------------------------------------------------------------------------------------------
bool gt_TransformFusewithKamilpiccolo_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(UnitFromId(180)) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 100000)) {
        DataTableSetUnit(false, "Piccolo", UnitFromId(180));
        DataTableSetUnit(true, "Piccolo New", UnitFromId(180));
        UnitSetOwner(DataTableGetUnit(true, "Piccolo New"), EventPlayer(), true);
        UnitSetPosition(DataTableGetUnit(true, "Piccolo New"), UnitGetPosition(DataTableGetUnit(true, "Piccolo")), false);
        libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), UnitGetPosition(DataTableGetUnit(true, "Piccolo New")), 1.5);
        while ((UnitGroupCount(gv_transformingAura, c_unitCountAlive) != 5)) {
            UnitCreate(1, "Observer", 0, EventPlayer(), RegionGetCenter(RegionFromId(86)), 270.0);
            UnitGroupAdd(gv_transformingAura, UnitLastCreated());
        }
        UnitGroupLoopBegin(gv_transformingAura);
        for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
            UnitKill(UnitGroupLoopCurrent());
        }
        UnitGroupLoopEnd();
        UnitSetOwner(DataTableGetUnit(true, "Piccolo"), 0, true);
        UnitSetPosition(DataTableGetUnit(true, "Piccolo"), UnitGetPosition(UnitFromId(29)), false);
        DataTableSetUnit(true, "Piccolo", UnitFromId(180));
        RegionAttachToUnit(RegionFromId(86), UnitFromId(180), Point(0.0, 0.0));
        UnitControlGroupAddUnit(EventPlayer(), 1, UnitFromId(180));
        TextTagAttachToUnit(gv_playerNames[2], UnitFromId(180), -1.0);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransformFusewithKamilpiccolo_Init () {
    gt_TransformFusewithKamilpiccolo = TriggerCreate("gt_TransformFusewithKamilpiccolo_Func");
    TriggerAddEventUnitRangePoint(gt_TransformFusewithKamilpiccolo, UnitRefFromUnit(UnitFromId(159)), RegionGetCenter(RegionFromId(40)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Subtract Gas Piccolo 2 Fused (Kami)
//--------------------------------------------------------------------------------------------------
bool gt_SubtractGasPiccolo2FusedKami_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((UnitGetOwner(UnitFromId(180)) == IntLoopCurrent()) && ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) >= 1) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperSubtract, 6);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SubtractGasPiccolo2FusedKami_Init () {
    gt_SubtractGasPiccolo2FusedKami = TriggerCreate("gt_SubtractGasPiccolo2FusedKami_Func");
    TriggerAddEventTimePeriodic(gt_SubtractGasPiccolo2FusedKami, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transform Evil King (piccolo)
//--------------------------------------------------------------------------------------------------
bool gt_TransformEvilKingpiccolo_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(UnitFromId(170)) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 250000)) {
        DataTableSetUnit(false, "Piccolo", UnitFromId(170));
        DataTableSetUnit(true, "Piccolo New", UnitFromId(170));
        UnitSetOwner(DataTableGetUnit(true, "Piccolo New"), EventPlayer(), true);
        UnitSetPosition(DataTableGetUnit(true, "Piccolo New"), UnitGetPosition(DataTableGetUnit(true, "Piccolo")), false);
        libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), UnitGetPosition(DataTableGetUnit(true, "Piccolo New")), 1.5);
        while ((UnitGroupCount(gv_transformingAura, c_unitCountAlive) != 7)) {
            UnitCreate(1, "Observer", 0, EventPlayer(), RegionGetCenter(RegionFromId(86)), 270.0);
            UnitGroupAdd(gv_transformingAura, UnitLastCreated());
        }
        UnitGroupLoopBegin(gv_transformingAura);
        for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
            UnitKill(UnitGroupLoopCurrent());
        }
        UnitGroupLoopEnd();
        UnitSetOwner(DataTableGetUnit(true, "Piccolo"), 0, true);
        UnitSetPosition(DataTableGetUnit(true, "Piccolo"), UnitGetPosition(UnitFromId(29)), false);
        DataTableSetUnit(true, "Piccolo", UnitFromId(170));
        RegionAttachToUnit(RegionFromId(86), UnitFromId(170), Point(0.0, 0.0));
        UnitControlGroupAddUnit(EventPlayer(), 1, UnitFromId(170));
        TextTagAttachToUnit(gv_playerNames[2], UnitFromId(170), -1.0);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TransformEvilKingpiccolo_Init () {
    gt_TransformEvilKingpiccolo = TriggerCreate("gt_TransformEvilKingpiccolo_Func");
    TriggerAddEventUnitRangePoint(gt_TransformEvilKingpiccolo, UnitRefFromUnit(UnitFromId(159)), RegionGetCenter(RegionFromId(41)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Subtract Gas Evil King Piccolo
//--------------------------------------------------------------------------------------------------
bool gt_SubtractGasEvilKingPiccolo_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((UnitGetOwner(UnitFromId(170)) == IntLoopCurrent()) && ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) >= 1) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperSubtract, 9);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SubtractGasEvilKingPiccolo_Init () {
    gt_SubtractGasEvilKingPiccolo = TriggerCreate("gt_SubtractGasEvilKingPiccolo_Func");
    TriggerAddEventTimePeriodic(gt_SubtractGasEvilKingPiccolo, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set original trunks value
//--------------------------------------------------------------------------------------------------
bool gt_Setoriginaltrunksvalue_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    DataTableSetUnit(true, "Trunks", UnitFromId(107));
    DataTableSetUnit(false, "Trunks", UnitFromId(107));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Setoriginaltrunksvalue_Init () {
    gt_Setoriginaltrunksvalue = TriggerCreate("gt_Setoriginaltrunksvalue_Func");
    TriggerAddEventMapInit(gt_Setoriginaltrunksvalue);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Revert to normal (trunks)
//--------------------------------------------------------------------------------------------------
bool gt_Reverttonormaltrunks_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(UnitFromId(107)) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    DataTableSetUnit(false, "Trunks", UnitFromId(107));
    DataTableSetUnit(true, "Trunks New", UnitFromId(107));
    UnitSetOwner(DataTableGetUnit(true, "Trunks New"), EventPlayer(), true);
    UnitSetPosition(DataTableGetUnit(true, "Trunks New"), UnitGetPosition(DataTableGetUnit(true, "Trunks")), false);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), UnitGetPosition(DataTableGetUnit(true, "Trunks New")), 1.5);
    while ((UnitGroupCount(gv_transformingAura, c_unitCountAlive) != 1)) {
        UnitCreate(1, "Observer", 0, EventPlayer(), RegionGetCenter(RegionFromId(87)), 270.0);
        UnitGroupAdd(gv_transformingAura, UnitLastCreated());
    }
    UnitGroupLoopBegin(gv_transformingAura);
    for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
        UnitKill(UnitGroupLoopCurrent());
    }
    UnitGroupLoopEnd();
    UnitSetOwner(DataTableGetUnit(true, "Trunks"), 0, true);
    UnitSetPosition(DataTableGetUnit(true, "Trunks"), UnitGetPosition(UnitFromId(29)), false);
    DataTableSetUnit(true, "Trunks", UnitFromId(107));
    RegionAttachToUnit(RegionFromId(87), UnitFromId(107), Point(0.0, 0.0));
    UnitControlGroupAddUnit(EventPlayer(), 1, UnitFromId(107));
    TextTagAttachToUnit(gv_playerNames[3], UnitFromId(107), -1.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Reverttonormaltrunks_Init () {
    gt_Reverttonormaltrunks = TriggerCreate("gt_Reverttonormaltrunks_Func");
    TriggerAddEventUnitRangePoint(gt_Reverttonormaltrunks, UnitRefFromUnit(UnitFromId(160)), RegionGetCenter(RegionFromId(46)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transform ssj (trunks)
//--------------------------------------------------------------------------------------------------
bool gt_Transformssjtrunks_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(UnitFromId(176)) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 15000)) {
        DataTableSetUnit(false, "Trunks", UnitFromId(176));
        DataTableSetUnit(true, "Trunks New", UnitFromId(176));
        UnitSetOwner(DataTableGetUnit(true, "Trunks New"), EventPlayer(), true);
        UnitSetPosition(DataTableGetUnit(true, "Trunks New"), UnitGetPosition(DataTableGetUnit(true, "Trunks")), false);
        libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), UnitGetPosition(DataTableGetUnit(true, "Trunks New")), 1.5);
        while ((UnitGroupCount(gv_transformingAura, c_unitCountAlive) != 5)) {
            UnitCreate(1, "Observer", 0, EventPlayer(), RegionGetCenter(RegionFromId(87)), 270.0);
            UnitGroupAdd(gv_transformingAura, UnitLastCreated());
        }
        UnitGroupLoopBegin(gv_transformingAura);
        for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
            UnitKill(UnitGroupLoopCurrent());
        }
        UnitGroupLoopEnd();
        UnitSetOwner(DataTableGetUnit(true, "Trunks"), 0, true);
        UnitSetPosition(DataTableGetUnit(true, "Trunks"), UnitGetPosition(UnitFromId(29)), false);
        DataTableSetUnit(true, "Trunks", UnitFromId(176));
        RegionAttachToUnit(RegionFromId(87), UnitFromId(176), Point(0.0, 0.0));
        UnitControlGroupAddUnit(EventPlayer(), 1, UnitFromId(176));
        TextTagAttachToUnit(gv_playerNames[3], UnitFromId(176), -1.0);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Transformssjtrunks_Init () {
    gt_Transformssjtrunks = TriggerCreate("gt_Transformssjtrunks_Func");
    TriggerAddEventUnitRangePoint(gt_Transformssjtrunks, UnitRefFromUnit(UnitFromId(160)), RegionGetCenter(RegionFromId(47)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Subtract Gas Trunks SSJ
//--------------------------------------------------------------------------------------------------
bool gt_SubtractGasTrunksSSJ_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((UnitGetOwner(UnitFromId(176)) == IntLoopCurrent()) && ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) >= 1) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperSubtract, 5);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SubtractGasTrunksSSJ_Init () {
    gt_SubtractGasTrunksSSJ = TriggerCreate("gt_SubtractGasTrunksSSJ_Func");
    TriggerAddEventTimePeriodic(gt_SubtractGasTrunksSSJ, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transform gotenks (trunks)
//--------------------------------------------------------------------------------------------------
bool gt_Transformgotenkstrunks_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(UnitFromId(181)) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 150000)) {
        DataTableSetUnit(false, "Trunks", UnitFromId(181));
        DataTableSetUnit(true, "Trunks New", UnitFromId(181));
        UnitSetOwner(DataTableGetUnit(true, "Trunks New"), EventPlayer(), true);
        UnitSetPosition(DataTableGetUnit(true, "Trunks New"), UnitGetPosition(DataTableGetUnit(true, "Trunks")), false);
        libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), UnitGetPosition(DataTableGetUnit(true, "Trunks New")), 1.5);
        while ((UnitGroupCount(gv_transformingAura, c_unitCountAlive) != 7)) {
            UnitCreate(1, "Observer", 0, EventPlayer(), RegionGetCenter(RegionFromId(87)), 270.0);
            UnitGroupAdd(gv_transformingAura, UnitLastCreated());
        }
        UnitGroupLoopBegin(gv_transformingAura);
        for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
            UnitKill(UnitGroupLoopCurrent());
        }
        UnitGroupLoopEnd();
        UnitSetOwner(DataTableGetUnit(true, "Trunks"), 0, true);
        UnitSetPosition(DataTableGetUnit(true, "Trunks"), UnitGetPosition(UnitFromId(29)), false);
        DataTableSetUnit(true, "Trunks", UnitFromId(181));
        RegionAttachToUnit(RegionFromId(87), UnitFromId(181), Point(0.0, 0.0));
        UnitControlGroupAddUnit(EventPlayer(), 1, UnitFromId(181));
        TextTagAttachToUnit(gv_playerNames[3], UnitFromId(181), -1.0);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Transformgotenkstrunks_Init () {
    gt_Transformgotenkstrunks = TriggerCreate("gt_Transformgotenkstrunks_Func");
    TriggerAddEventUnitRangePoint(gt_Transformgotenkstrunks, UnitRefFromUnit(UnitFromId(160)), RegionGetCenter(RegionFromId(48)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Subtract Gas Gotenks (Trunks)
//--------------------------------------------------------------------------------------------------
bool gt_SubtractGasGotenksTrunks_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((UnitGetOwner(UnitFromId(181)) == IntLoopCurrent()) && ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) >= 1) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperSubtract, 7);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SubtractGasGotenksTrunks_Init () {
    gt_SubtractGasGotenksTrunks = TriggerCreate("gt_SubtractGasGotenksTrunks_Func");
    TriggerAddEventTimePeriodic(gt_SubtractGasGotenksTrunks, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transform ssj gotenks (trunks)
//--------------------------------------------------------------------------------------------------
bool gt_Transformssjgotenkstrunks_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(UnitFromId(139)) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 250000)) {
        DataTableSetUnit(false, "Trunks", UnitFromId(139));
        DataTableSetUnit(true, "Trunks New", UnitFromId(139));
        UnitSetOwner(DataTableGetUnit(true, "Trunks New"), EventPlayer(), true);
        UnitSetPosition(DataTableGetUnit(true, "Trunks New"), UnitGetPosition(DataTableGetUnit(true, "Trunks")), false);
        libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), UnitGetPosition(DataTableGetUnit(true, "Trunks New")), 1.5);
        while ((UnitGroupCount(gv_transformingAura, c_unitCountAlive) != 9)) {
            UnitCreate(1, "Observer", 0, EventPlayer(), RegionGetCenter(RegionFromId(87)), 270.0);
            UnitGroupAdd(gv_transformingAura, UnitLastCreated());
        }
        UnitGroupLoopBegin(gv_transformingAura);
        for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
            UnitKill(UnitGroupLoopCurrent());
        }
        UnitGroupLoopEnd();
        UnitSetOwner(DataTableGetUnit(true, "Trunks"), 0, true);
        UnitSetPosition(DataTableGetUnit(true, "Trunks"), UnitGetPosition(UnitFromId(29)), false);
        DataTableSetUnit(true, "Trunks", UnitFromId(139));
        RegionAttachToUnit(RegionFromId(87), UnitFromId(139), Point(0.0, 0.0));
        UnitControlGroupAddUnit(EventPlayer(), 1, UnitFromId(139));
        TextTagAttachToUnit(gv_playerNames[3], UnitFromId(139), -1.0);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Transformssjgotenkstrunks_Init () {
    gt_Transformssjgotenkstrunks = TriggerCreate("gt_Transformssjgotenkstrunks_Func");
    TriggerAddEventUnitRangePoint(gt_Transformssjgotenkstrunks, UnitRefFromUnit(UnitFromId(160)), RegionGetCenter(RegionFromId(49)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Subtract Gas Gotenks SSJ (Trunks)
//--------------------------------------------------------------------------------------------------
bool gt_SubtractGasGotenksSSJTrunks_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((UnitGetOwner(UnitFromId(139)) == IntLoopCurrent()) && ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) >= 1) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperSubtract, 9);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SubtractGasGotenksSSJTrunks_Init () {
    gt_SubtractGasGotenksSSJTrunks = TriggerCreate("gt_SubtractGasGotenksSSJTrunks_Func");
    TriggerAddEventTimePeriodic(gt_SubtractGasGotenksSSJTrunks, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transform ssj3 gotenks (trunks)
//--------------------------------------------------------------------------------------------------
bool gt_Transformssj3gotenkstrunks_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(UnitFromId(185)) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 350000)) {
        DataTableSetUnit(false, "Trunks", UnitFromId(185));
        DataTableSetUnit(true, "Trunks New", UnitFromId(185));
        UnitSetOwner(DataTableGetUnit(true, "Trunks New"), EventPlayer(), true);
        UnitSetPosition(DataTableGetUnit(true, "Trunks New"), UnitGetPosition(DataTableGetUnit(true, "Trunks")), false);
        libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), UnitGetPosition(DataTableGetUnit(true, "Trunks New")), 1.5);
        while ((UnitGroupCount(gv_transformingAura, c_unitCountAlive) != 11)) {
            UnitCreate(1, "Observer", 0, EventPlayer(), RegionGetCenter(RegionFromId(87)), 270.0);
            UnitGroupAdd(gv_transformingAura, UnitLastCreated());
        }
        UnitGroupLoopBegin(gv_transformingAura);
        for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
            UnitKill(UnitGroupLoopCurrent());
        }
        UnitGroupLoopEnd();
        UnitSetOwner(DataTableGetUnit(true, "Trunks"), 0, true);
        UnitSetPosition(DataTableGetUnit(true, "Trunks"), UnitGetPosition(UnitFromId(29)), false);
        DataTableSetUnit(true, "Trunks", UnitFromId(185));
        RegionAttachToUnit(RegionFromId(87), UnitFromId(185), Point(0.0, 0.0));
        UnitControlGroupAddUnit(EventPlayer(), 1, UnitFromId(185));
        TextTagAttachToUnit(gv_playerNames[3], UnitFromId(185), -1.0);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Transformssj3gotenkstrunks_Init () {
    gt_Transformssj3gotenkstrunks = TriggerCreate("gt_Transformssj3gotenkstrunks_Func");
    TriggerAddEventUnitRangePoint(gt_Transformssj3gotenkstrunks, UnitRefFromUnit(UnitFromId(160)), RegionGetCenter(RegionFromId(50)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Subtract Gas Gotenks SSJ 3 (Trunks)
//--------------------------------------------------------------------------------------------------
bool gt_SubtractGasGotenksSSJ3Trunks_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((UnitGetOwner(UnitFromId(185)) == IntLoopCurrent()) && ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) >= 1) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperSubtract, 12);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SubtractGasGotenksSSJ3Trunks_Init () {
    gt_SubtractGasGotenksSSJ3Trunks = TriggerCreate("gt_SubtractGasGotenksSSJ3Trunks_Func");
    TriggerAddEventTimePeriodic(gt_SubtractGasGotenksSSJ3Trunks, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set original goten value
//--------------------------------------------------------------------------------------------------
bool gt_Setoriginalgotenvalue_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    DataTableSetUnit(true, "Goten", UnitFromId(108));
    DataTableSetUnit(false, "Goten", UnitFromId(108));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Setoriginalgotenvalue_Init () {
    gt_Setoriginalgotenvalue = TriggerCreate("gt_Setoriginalgotenvalue_Func");
    TriggerAddEventMapInit(gt_Setoriginalgotenvalue);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Revert to normal (goten)
//--------------------------------------------------------------------------------------------------
bool gt_Reverttonormalgoten_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(UnitFromId(108)) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    DataTableSetUnit(false, "Goten", UnitFromId(108));
    DataTableSetUnit(true, "Goten New", UnitFromId(108));
    UnitSetOwner(DataTableGetUnit(true, "Goten New"), EventPlayer(), true);
    UnitSetPosition(DataTableGetUnit(true, "Goten New"), UnitGetPosition(DataTableGetUnit(true, "Goten")), false);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), UnitGetPosition(DataTableGetUnit(true, "Goten New")), 1.5);
    while ((UnitGroupCount(gv_transformingAura, c_unitCountAlive) != 1)) {
        UnitCreate(1, "Observer", 0, EventPlayer(), RegionGetCenter(RegionFromId(88)), 270.0);
        UnitGroupAdd(gv_transformingAura, UnitLastCreated());
    }
    UnitGroupLoopBegin(gv_transformingAura);
    for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
        UnitKill(UnitGroupLoopCurrent());
    }
    UnitGroupLoopEnd();
    UnitSetOwner(DataTableGetUnit(true, "Goten"), 0, true);
    UnitSetPosition(DataTableGetUnit(true, "Goten"), UnitGetPosition(UnitFromId(29)), false);
    DataTableSetUnit(true, "Goten", UnitFromId(108));
    RegionAttachToUnit(RegionFromId(88), UnitFromId(108), Point(0.0, 0.0));
    UnitControlGroupAddUnit(EventPlayer(), 1, UnitFromId(108));
    TextTagAttachToUnit(gv_playerNames[4], UnitFromId(108), -1.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Reverttonormalgoten_Init () {
    gt_Reverttonormalgoten = TriggerCreate("gt_Reverttonormalgoten_Func");
    TriggerAddEventUnitRangePoint(gt_Reverttonormalgoten, UnitRefFromUnit(UnitFromId(162)), RegionGetCenter(RegionFromId(51)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transform ssj (goten)
//--------------------------------------------------------------------------------------------------
bool gt_Transformssjgoten_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(UnitFromId(175)) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 15000)) {
        DataTableSetUnit(false, "Goten", UnitFromId(175));
        DataTableSetUnit(true, "Goten New", UnitFromId(175));
        UnitSetOwner(DataTableGetUnit(true, "Goten New"), EventPlayer(), true);
        UnitSetPosition(DataTableGetUnit(true, "Goten New"), UnitGetPosition(DataTableGetUnit(true, "Goten")), false);
        libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), UnitGetPosition(DataTableGetUnit(true, "Goten New")), 1.5);
        while ((UnitGroupCount(gv_transformingAura, c_unitCountAlive) != 5)) {
            UnitCreate(1, "Observer", 0, EventPlayer(), RegionGetCenter(RegionFromId(88)), 270.0);
            UnitGroupAdd(gv_transformingAura, UnitLastCreated());
        }
        UnitGroupLoopBegin(gv_transformingAura);
        for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
            UnitKill(UnitGroupLoopCurrent());
        }
        UnitGroupLoopEnd();
        UnitSetOwner(DataTableGetUnit(true, "Goten"), 0, true);
        UnitSetPosition(DataTableGetUnit(true, "Goten"), UnitGetPosition(UnitFromId(29)), false);
        DataTableSetUnit(true, "Goten", UnitFromId(175));
        RegionAttachToUnit(RegionFromId(88), UnitFromId(175), Point(0.0, 0.0));
        UnitControlGroupAddUnit(EventPlayer(), 1, UnitFromId(175));
        TextTagAttachToUnit(gv_playerNames[4], UnitFromId(175), -1.0);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Transformssjgoten_Init () {
    gt_Transformssjgoten = TriggerCreate("gt_Transformssjgoten_Func");
    TriggerAddEventUnitRangePoint(gt_Transformssjgoten, UnitRefFromUnit(UnitFromId(162)), RegionGetCenter(RegionFromId(52)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Subtract Gas Goten SSJ
//--------------------------------------------------------------------------------------------------
bool gt_SubtractGasGotenSSJ_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((UnitGetOwner(UnitFromId(175)) == IntLoopCurrent()) && ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) >= 1) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperSubtract, 4);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SubtractGasGotenSSJ_Init () {
    gt_SubtractGasGotenSSJ = TriggerCreate("gt_SubtractGasGotenSSJ_Func");
    TriggerAddEventTimePeriodic(gt_SubtractGasGotenSSJ, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transform gotenks (goten)
//--------------------------------------------------------------------------------------------------
bool gt_Transformgotenksgoten_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(UnitFromId(182)) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 150000)) {
        DataTableSetUnit(false, "Goten", UnitFromId(182));
        DataTableSetUnit(true, "Goten New", UnitFromId(182));
        UnitSetOwner(DataTableGetUnit(true, "Goten New"), EventPlayer(), true);
        UnitSetPosition(DataTableGetUnit(true, "Goten New"), UnitGetPosition(DataTableGetUnit(true, "Goten")), false);
        libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), UnitGetPosition(DataTableGetUnit(true, "Goten New")), 1.5);
        while ((UnitGroupCount(gv_transformingAura, c_unitCountAlive) != 7)) {
            UnitCreate(1, "Observer", 0, EventPlayer(), RegionGetCenter(RegionFromId(88)), 270.0);
            UnitGroupAdd(gv_transformingAura, UnitLastCreated());
        }
        UnitGroupLoopBegin(gv_transformingAura);
        for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
            UnitKill(UnitGroupLoopCurrent());
        }
        UnitGroupLoopEnd();
        UnitSetOwner(DataTableGetUnit(true, "Goten"), 0, true);
        UnitSetPosition(DataTableGetUnit(true, "Goten"), UnitGetPosition(UnitFromId(29)), false);
        DataTableSetUnit(true, "Goten", UnitFromId(182));
        RegionAttachToUnit(RegionFromId(88), UnitFromId(182), Point(0.0, 0.0));
        UnitControlGroupAddUnit(EventPlayer(), 1, UnitFromId(182));
        TextTagAttachToUnit(gv_playerNames[4], UnitFromId(182), -1.0);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Transformgotenksgoten_Init () {
    gt_Transformgotenksgoten = TriggerCreate("gt_Transformgotenksgoten_Func");
    TriggerAddEventUnitRangePoint(gt_Transformgotenksgoten, UnitRefFromUnit(UnitFromId(162)), RegionGetCenter(RegionFromId(53)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Subtract Gas Gotenks (Goten)
//--------------------------------------------------------------------------------------------------
bool gt_SubtractGasGotenksGoten_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((UnitGetOwner(UnitFromId(182)) == IntLoopCurrent()) && ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) >= 1) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperSubtract, 7);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SubtractGasGotenksGoten_Init () {
    gt_SubtractGasGotenksGoten = TriggerCreate("gt_SubtractGasGotenksGoten_Func");
    TriggerAddEventTimePeriodic(gt_SubtractGasGotenksGoten, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transform ssj gotenks (goten)
//--------------------------------------------------------------------------------------------------
bool gt_Transformssjgotenksgoten_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(UnitFromId(140)) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 250000)) {
        DataTableSetUnit(false, "Goten", UnitFromId(140));
        DataTableSetUnit(true, "Goten New", UnitFromId(140));
        UnitSetOwner(DataTableGetUnit(true, "Goten New"), EventPlayer(), true);
        UnitSetPosition(DataTableGetUnit(true, "Goten New"), UnitGetPosition(DataTableGetUnit(true, "Goten")), false);
        libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), UnitGetPosition(DataTableGetUnit(true, "Goten New")), 1.5);
        while ((UnitGroupCount(gv_transformingAura, c_unitCountAlive) != 9)) {
            UnitCreate(1, "Observer", 0, EventPlayer(), RegionGetCenter(RegionFromId(88)), 270.0);
            UnitGroupAdd(gv_transformingAura, UnitLastCreated());
        }
        UnitGroupLoopBegin(gv_transformingAura);
        for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
            UnitKill(UnitGroupLoopCurrent());
        }
        UnitGroupLoopEnd();
        UnitSetOwner(DataTableGetUnit(true, "Goten"), 0, true);
        UnitSetPosition(DataTableGetUnit(true, "Goten"), UnitGetPosition(UnitFromId(29)), false);
        DataTableSetUnit(true, "Goten", UnitFromId(140));
        RegionAttachToUnit(RegionFromId(88), UnitFromId(140), Point(0.0, 0.0));
        UnitControlGroupAddUnit(EventPlayer(), 1, UnitFromId(140));
        TextTagAttachToUnit(gv_playerNames[4], UnitFromId(140), -1.0);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Transformssjgotenksgoten_Init () {
    gt_Transformssjgotenksgoten = TriggerCreate("gt_Transformssjgotenksgoten_Func");
    TriggerAddEventUnitRangePoint(gt_Transformssjgotenksgoten, UnitRefFromUnit(UnitFromId(162)), RegionGetCenter(RegionFromId(54)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Subtract Gas Gotenks SSJ (Goten)
//--------------------------------------------------------------------------------------------------
bool gt_SubtractGasGotenksSSJGoten_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((UnitGetOwner(UnitFromId(140)) == IntLoopCurrent()) && ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) >= 1) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperSubtract, 9);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SubtractGasGotenksSSJGoten_Init () {
    gt_SubtractGasGotenksSSJGoten = TriggerCreate("gt_SubtractGasGotenksSSJGoten_Func");
    TriggerAddEventTimePeriodic(gt_SubtractGasGotenksSSJGoten, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transform ssj3 gotenks (goten)
//--------------------------------------------------------------------------------------------------
bool gt_Transformssj3gotenksgoten_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(UnitFromId(184)) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 350000)) {
        DataTableSetUnit(false, "Goten", UnitFromId(184));
        DataTableSetUnit(true, "Goten New", UnitFromId(184));
        UnitSetOwner(DataTableGetUnit(true, "Goten New"), EventPlayer(), true);
        UnitSetPosition(DataTableGetUnit(true, "Goten New"), UnitGetPosition(DataTableGetUnit(true, "Goten")), false);
        libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), UnitGetPosition(DataTableGetUnit(true, "Goten New")), 1.5);
        while ((UnitGroupCount(gv_transformingAura, c_unitCountAlive) != 11)) {
            UnitCreate(1, "Observer", 0, EventPlayer(), RegionGetCenter(RegionFromId(88)), 270.0);
            UnitGroupAdd(gv_transformingAura, UnitLastCreated());
        }
        UnitGroupLoopBegin(gv_transformingAura);
        for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
            UnitKill(UnitGroupLoopCurrent());
        }
        UnitGroupLoopEnd();
        UnitSetOwner(DataTableGetUnit(true, "Goten"), 0, true);
        UnitSetPosition(DataTableGetUnit(true, "Goten"), UnitGetPosition(UnitFromId(29)), false);
        DataTableSetUnit(true, "Goten", UnitFromId(184));
        RegionAttachToUnit(RegionFromId(88), UnitFromId(184), Point(0.0, 0.0));
        UnitControlGroupAddUnit(EventPlayer(), 1, UnitFromId(184));
        TextTagAttachToUnit(gv_playerNames[4], UnitFromId(184), -1.0);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Transformssj3gotenksgoten_Init () {
    gt_Transformssj3gotenksgoten = TriggerCreate("gt_Transformssj3gotenksgoten_Func");
    TriggerAddEventUnitRangePoint(gt_Transformssj3gotenksgoten, UnitRefFromUnit(UnitFromId(162)), RegionGetCenter(RegionFromId(55)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Subtract Gas Gotenks SSJ 3 (Goten)
//--------------------------------------------------------------------------------------------------
bool gt_SubtractGasGotenksSSJ3Goten_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((UnitGetOwner(UnitFromId(184)) == IntLoopCurrent()) && ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) >= 1) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperSubtract, 12);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SubtractGasGotenksSSJ3Goten_Init () {
    gt_SubtractGasGotenksSSJ3Goten = TriggerCreate("gt_SubtractGasGotenksSSJ3Goten_Func");
    TriggerAddEventTimePeriodic(gt_SubtractGasGotenksSSJ3Goten, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set original gohan value
//--------------------------------------------------------------------------------------------------
bool gt_Setoriginalgohanvalue_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    DataTableSetUnit(true, "Gohan", UnitFromId(109));
    DataTableSetUnit(false, "Gohan", UnitFromId(109));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Setoriginalgohanvalue_Init () {
    gt_Setoriginalgohanvalue = TriggerCreate("gt_Setoriginalgohanvalue_Func");
    TriggerAddEventMapInit(gt_Setoriginalgohanvalue);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Revert to normal (gohan)
//--------------------------------------------------------------------------------------------------
bool gt_Reverttonormalgohan_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(UnitFromId(109)) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    DataTableSetUnit(false, "Gohan", UnitFromId(109));
    DataTableSetUnit(true, "Gohan New", UnitFromId(109));
    UnitSetOwner(DataTableGetUnit(true, "Gohan New"), EventPlayer(), true);
    UnitSetPosition(DataTableGetUnit(true, "Gohan New"), UnitGetPosition(DataTableGetUnit(true, "Gohan")), false);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), UnitGetPosition(DataTableGetUnit(true, "Gohan New")), 1.5);
    while ((UnitGroupCount(gv_transformingAura, c_unitCountAlive) != 1)) {
        UnitCreate(1, "Observer", 0, EventPlayer(), RegionGetCenter(RegionFromId(89)), 270.0);
        UnitGroupAdd(gv_transformingAura, UnitLastCreated());
    }
    UnitGroupLoopBegin(gv_transformingAura);
    for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
        UnitKill(UnitGroupLoopCurrent());
    }
    UnitGroupLoopEnd();
    UnitSetOwner(DataTableGetUnit(true, "Gohan"), 0, true);
    UnitSetPosition(DataTableGetUnit(true, "Gohan"), UnitGetPosition(UnitFromId(29)), false);
    DataTableSetUnit(true, "Gohan", UnitFromId(109));
    RegionAttachToUnit(RegionFromId(89), UnitFromId(109), Point(0.0, 0.0));
    UnitControlGroupAddUnit(EventPlayer(), 1, UnitFromId(109));
    TextTagAttachToUnit(gv_playerNames[5], UnitFromId(109), -1.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Reverttonormalgohan_Init () {
    gt_Reverttonormalgohan = TriggerCreate("gt_Reverttonormalgohan_Func");
    TriggerAddEventUnitRangePoint(gt_Reverttonormalgohan, UnitRefFromUnit(UnitFromId(163)), RegionGetCenter(RegionFromId(42)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transform ssj (gohan)
//--------------------------------------------------------------------------------------------------
bool gt_Transformssjgohan_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(UnitFromId(172)) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 15000)) {
        DataTableSetUnit(false, "Gohan", UnitFromId(172));
        DataTableSetUnit(true, "Gohan New", UnitFromId(172));
        UnitSetOwner(DataTableGetUnit(true, "Gohan New"), EventPlayer(), true);
        UnitSetPosition(DataTableGetUnit(true, "Gohan New"), UnitGetPosition(DataTableGetUnit(true, "Gohan")), false);
        libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), UnitGetPosition(DataTableGetUnit(true, "Gohan New")), 1.5);
        while ((UnitGroupCount(gv_transformingAura, c_unitCountAlive) != 5)) {
            UnitCreate(1, "Observer", 0, EventPlayer(), RegionGetCenter(RegionFromId(89)), 270.0);
            UnitGroupAdd(gv_transformingAura, UnitLastCreated());
        }
        UnitGroupLoopBegin(gv_transformingAura);
        for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
            UnitKill(UnitGroupLoopCurrent());
        }
        UnitGroupLoopEnd();
        UnitSetOwner(DataTableGetUnit(true, "Gohan"), 0, true);
        UnitSetPosition(DataTableGetUnit(true, "Gohan"), UnitGetPosition(UnitFromId(29)), false);
        DataTableSetUnit(true, "Gohan", UnitFromId(172));
        RegionAttachToUnit(RegionFromId(89), UnitFromId(172), Point(0.0, 0.0));
        UnitControlGroupAddUnit(EventPlayer(), 1, UnitFromId(172));
        TextTagAttachToUnit(gv_playerNames[5], UnitFromId(172), -1.0);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Transformssjgohan_Init () {
    gt_Transformssjgohan = TriggerCreate("gt_Transformssjgohan_Func");
    TriggerAddEventUnitRangePoint(gt_Transformssjgohan, UnitRefFromUnit(UnitFromId(163)), RegionGetCenter(RegionFromId(43)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Subtract Gas Gohan SSJ
//--------------------------------------------------------------------------------------------------
bool gt_SubtractGasGohanSSJ_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((UnitGetOwner(UnitFromId(172)) == IntLoopCurrent()) && ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) >= 1) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperSubtract, 4);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SubtractGasGohanSSJ_Init () {
    gt_SubtractGasGohanSSJ = TriggerCreate("gt_SubtractGasGohanSSJ_Func");
    TriggerAddEventTimePeriodic(gt_SubtractGasGohanSSJ, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transform ssj2 (gohan)
//--------------------------------------------------------------------------------------------------
bool gt_Transformssj2gohan_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(UnitFromId(186)) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 140000)) {
        DataTableSetUnit(false, "Gohan", UnitFromId(186));
        DataTableSetUnit(true, "Gohan New", UnitFromId(186));
        UnitSetOwner(DataTableGetUnit(true, "Gohan New"), EventPlayer(), true);
        UnitSetPosition(DataTableGetUnit(true, "Gohan New"), UnitGetPosition(DataTableGetUnit(true, "Gohan")), false);
        libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), UnitGetPosition(DataTableGetUnit(true, "Gohan New")), 1.5);
        while ((UnitGroupCount(gv_transformingAura, c_unitCountAlive) != 8)) {
            UnitCreate(1, "Observer", 0, EventPlayer(), RegionGetCenter(RegionFromId(89)), 270.0);
            UnitGroupAdd(gv_transformingAura, UnitLastCreated());
        }
        UnitGroupLoopBegin(gv_transformingAura);
        for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
            UnitKill(UnitGroupLoopCurrent());
        }
        UnitGroupLoopEnd();
        UnitSetOwner(DataTableGetUnit(true, "Gohan"), 0, true);
        UnitSetPosition(DataTableGetUnit(true, "Gohan"), UnitGetPosition(UnitFromId(29)), false);
        DataTableSetUnit(true, "Gohan", UnitFromId(186));
        RegionAttachToUnit(RegionFromId(89), UnitFromId(186), Point(0.0, 0.0));
        UnitControlGroupAddUnit(EventPlayer(), 1, UnitFromId(186));
        TextTagAttachToUnit(gv_playerNames[5], UnitFromId(186), -1.0);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Transformssj2gohan_Init () {
    gt_Transformssj2gohan = TriggerCreate("gt_Transformssj2gohan_Func");
    TriggerAddEventUnitRangePoint(gt_Transformssj2gohan, UnitRefFromUnit(UnitFromId(163)), RegionGetCenter(RegionFromId(44)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Subtract Gas Gohan SSJ 2
//--------------------------------------------------------------------------------------------------
bool gt_SubtractGasGohanSSJ2_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((UnitGetOwner(UnitFromId(186)) == IntLoopCurrent()) && ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) >= 1) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperSubtract, 7);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SubtractGasGohanSSJ2_Init () {
    gt_SubtractGasGohanSSJ2 = TriggerCreate("gt_SubtractGasGohanSSJ2_Func");
    TriggerAddEventTimePeriodic(gt_SubtractGasGohanSSJ2, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Transform mystic (gohan)
//--------------------------------------------------------------------------------------------------
bool gt_Transformmysticgohan_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(UnitFromId(169)) == 0))) {
            return false;
        }

        if (!((UnitIsAlive(UnitFromId(647)) == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 300000)) {
        DataTableSetUnit(false, "Gohan", UnitFromId(169));
        DataTableSetUnit(true, "Gohan New", UnitFromId(169));
        UnitSetOwner(DataTableGetUnit(true, "Gohan New"), EventPlayer(), true);
        UnitSetPosition(DataTableGetUnit(true, "Gohan New"), UnitGetPosition(DataTableGetUnit(true, "Gohan")), false);
        libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), UnitGetPosition(DataTableGetUnit(true, "Gohan New")), 1.5);
        while ((UnitGroupCount(gv_transformingAura, c_unitCountAlive) != 11)) {
            UnitCreate(1, "Observer", 0, EventPlayer(), RegionGetCenter(RegionFromId(89)), 270.0);
            UnitGroupAdd(gv_transformingAura, UnitLastCreated());
        }
        UnitGroupLoopBegin(gv_transformingAura);
        for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
            UnitKill(UnitGroupLoopCurrent());
        }
        UnitGroupLoopEnd();
        UnitSetOwner(DataTableGetUnit(true, "Gohan"), 0, true);
        UnitSetPosition(DataTableGetUnit(true, "Gohan"), UnitGetPosition(UnitFromId(29)), false);
        DataTableSetUnit(true, "Gohan", UnitFromId(169));
        RegionAttachToUnit(RegionFromId(89), UnitFromId(169), Point(0.0, 0.0));
        UnitControlGroupAddUnit(EventPlayer(), 1, UnitFromId(169));
        TextTagAttachToUnit(gv_playerNames[5], UnitFromId(169), -1.0);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Transformmysticgohan_Init () {
    gt_Transformmysticgohan = TriggerCreate("gt_Transformmysticgohan_Func");
    TriggerAddEventUnitRangePoint(gt_Transformmysticgohan, UnitRefFromUnit(UnitFromId(163)), RegionGetCenter(RegionFromId(45)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Subtract Gas Mystic Gohan
//--------------------------------------------------------------------------------------------------
bool gt_SubtractGasMysticGohan_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    IntLoopBegin(1, 6);
    for ( ; !IntLoopDone() ; IntLoopStep() ) {
        if ((UnitGetOwner(UnitFromId(169)) == IntLoopCurrent()) && ((PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) >= 1) && (PlayerGetPropertyInt(IntLoopCurrent(), c_playerPropTerrazine) <= 500))) {
            PlayerModifyPropertyInt(IntLoopCurrent(), c_playerPropTerrazine, c_playerPropOperSubtract, 9);
        }
        else {
        }
    }
    IntLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SubtractGasMysticGohan_Init () {
    gt_SubtractGasMysticGohan = TriggerCreate("gt_SubtractGasMysticGohan_Func");
    TriggerAddEventTimePeriodic(gt_SubtractGasMysticGohan, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Fix stuck units
//--------------------------------------------------------------------------------------------------
bool gt_Fixstuckunits_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    if (((UnitGetOwner(UnitFromId(104)) == 0) && (libNtve_gf_UnitInRegion(UnitFromId(104), RegionFromId(143)) == true))) {
        UnitSetPosition(UnitFromId(104), RegionGetCenter(RegionFromId(2)), false);
    }
    else {
    }
    if (((UnitGetOwner(UnitFromId(173)) == 0) && (libNtve_gf_UnitInRegion(UnitFromId(173), RegionFromId(143)) == true))) {
        UnitSetPosition(UnitFromId(173), RegionGetCenter(RegionFromId(2)), false);
    }
    else {
    }
    if (((UnitGetOwner(UnitFromId(179)) == 0) && (libNtve_gf_UnitInRegion(UnitFromId(179), RegionFromId(143)) == true))) {
        UnitSetPosition(UnitFromId(179), RegionGetCenter(RegionFromId(2)), false);
    }
    else {
    }
    if (((UnitGetOwner(UnitFromId(174)) == 0) && (libNtve_gf_UnitInRegion(UnitFromId(174), RegionFromId(143)) == true))) {
        UnitSetPosition(UnitFromId(174), RegionGetCenter(RegionFromId(2)), false);
    }
    else {
    }
    if (((UnitGetOwner(UnitFromId(141)) == 0) && (libNtve_gf_UnitInRegion(UnitFromId(141), RegionFromId(143)) == true))) {
        UnitSetPosition(UnitFromId(141), RegionGetCenter(RegionFromId(2)), false);
    }
    else {
    }
    if (((UnitGetOwner(UnitFromId(105)) == 0) && (libNtve_gf_UnitInRegion(UnitFromId(105), RegionFromId(143)) == true))) {
        UnitSetPosition(UnitFromId(105), RegionGetCenter(RegionFromId(2)), false);
    }
    else {
    }
    if (((UnitGetOwner(UnitFromId(187)) == 0) && (libNtve_gf_UnitInRegion(UnitFromId(187), RegionFromId(143)) == true))) {
        UnitSetPosition(UnitFromId(187), RegionGetCenter(RegionFromId(2)), false);
    }
    else {
    }
    if (((UnitGetOwner(UnitFromId(177)) == 0) && (libNtve_gf_UnitInRegion(UnitFromId(177), RegionFromId(143)) == true))) {
        UnitSetPosition(UnitFromId(177), RegionGetCenter(RegionFromId(2)), false);
    }
    else {
    }
    if (((UnitGetOwner(UnitFromId(183)) == 0) && (libNtve_gf_UnitInRegion(UnitFromId(183), RegionFromId(143)) == true))) {
        UnitSetPosition(UnitFromId(183), RegionGetCenter(RegionFromId(2)), false);
    }
    else {
    }
    if (((UnitGetOwner(UnitFromId(171)) == 0) && (libNtve_gf_UnitInRegion(UnitFromId(171), RegionFromId(143)) == true))) {
        UnitSetPosition(UnitFromId(171), RegionGetCenter(RegionFromId(2)), false);
    }
    else {
    }
    if (((UnitGetOwner(UnitFromId(106)) == 0) && (libNtve_gf_UnitInRegion(UnitFromId(106), RegionFromId(143)) == true))) {
        UnitSetPosition(UnitFromId(106), RegionGetCenter(RegionFromId(2)), false);
    }
    else {
    }
    if (((UnitGetOwner(UnitFromId(178)) == 0) && (libNtve_gf_UnitInRegion(UnitFromId(178), RegionFromId(143)) == true))) {
        UnitSetPosition(UnitFromId(178), RegionGetCenter(RegionFromId(2)), false);
    }
    else {
    }
    if (((UnitGetOwner(UnitFromId(180)) == 0) && (libNtve_gf_UnitInRegion(UnitFromId(180), RegionFromId(143)) == true))) {
        UnitSetPosition(UnitFromId(180), RegionGetCenter(RegionFromId(2)), false);
    }
    else {
    }
    if (((UnitGetOwner(UnitFromId(170)) == 0) && (libNtve_gf_UnitInRegion(UnitFromId(170), RegionFromId(143)) == true))) {
        UnitSetPosition(UnitFromId(170), RegionGetCenter(RegionFromId(2)), false);
    }
    else {
    }
    if (((UnitGetOwner(UnitFromId(107)) == 0) && (libNtve_gf_UnitInRegion(UnitFromId(107), RegionFromId(143)) == true))) {
        UnitSetPosition(UnitFromId(107), RegionGetCenter(RegionFromId(2)), false);
    }
    else {
    }
    if (((UnitGetOwner(UnitFromId(176)) == 0) && (libNtve_gf_UnitInRegion(UnitFromId(176), RegionFromId(143)) == true))) {
        UnitSetPosition(UnitFromId(176), RegionGetCenter(RegionFromId(2)), false);
    }
    else {
    }
    if (((UnitGetOwner(UnitFromId(108)) == 0) && (libNtve_gf_UnitInRegion(UnitFromId(108), RegionFromId(143)) == true))) {
        UnitSetPosition(UnitFromId(108), RegionGetCenter(RegionFromId(2)), false);
    }
    else {
    }
    if (((UnitGetOwner(UnitFromId(175)) == 0) && (libNtve_gf_UnitInRegion(UnitFromId(175), RegionFromId(143)) == true))) {
        UnitSetPosition(UnitFromId(175), RegionGetCenter(RegionFromId(2)), false);
    }
    else {
    }
    if (((UnitGetOwner(UnitFromId(109)) == 0) && (libNtve_gf_UnitInRegion(UnitFromId(109), RegionFromId(143)) == true))) {
        UnitSetPosition(UnitFromId(109), RegionGetCenter(RegionFromId(2)), false);
    }
    else {
    }
    if (((UnitGetOwner(UnitFromId(172)) == 0) && (libNtve_gf_UnitInRegion(UnitFromId(172), RegionFromId(143)) == true))) {
        UnitSetPosition(UnitFromId(172), RegionGetCenter(RegionFromId(2)), false);
    }
    else {
    }
    if (((UnitGetOwner(UnitFromId(186)) == 0) && (libNtve_gf_UnitInRegion(UnitFromId(186), RegionFromId(143)) == true))) {
        UnitSetPosition(UnitFromId(186), RegionGetCenter(RegionFromId(2)), false);
    }
    else {
    }
    if (((UnitGetOwner(UnitFromId(169)) == 0) && (libNtve_gf_UnitInRegion(UnitFromId(169), RegionFromId(143)) == true))) {
        UnitSetPosition(UnitFromId(169), RegionGetCenter(RegionFromId(2)), false);
    }
    else {
    }
    if (((UnitGetOwner(UnitFromId(182)) == 0) && (libNtve_gf_UnitInRegion(UnitFromId(182), RegionFromId(143)) == true))) {
        UnitSetPosition(UnitFromId(182), RegionGetCenter(RegionFromId(2)), false);
    }
    else {
    }
    if (((UnitGetOwner(UnitFromId(181)) == 0) && (libNtve_gf_UnitInRegion(UnitFromId(181), RegionFromId(143)) == true))) {
        UnitSetPosition(UnitFromId(181), RegionGetCenter(RegionFromId(2)), false);
    }
    else {
    }
    if (((UnitGetOwner(UnitFromId(139)) == 0) && (libNtve_gf_UnitInRegion(UnitFromId(139), RegionFromId(143)) == true))) {
        UnitSetPosition(UnitFromId(139), RegionGetCenter(RegionFromId(2)), false);
    }
    else {
    }
    if (((UnitGetOwner(UnitFromId(140)) == 0) && (libNtve_gf_UnitInRegion(UnitFromId(140), RegionFromId(143)) == true))) {
        UnitSetPosition(UnitFromId(140), RegionGetCenter(RegionFromId(2)), false);
    }
    else {
    }
    if (((UnitGetOwner(UnitFromId(185)) == 0) && (libNtve_gf_UnitInRegion(UnitFromId(185), RegionFromId(143)) == true))) {
        UnitSetPosition(UnitFromId(185), RegionGetCenter(RegionFromId(2)), false);
    }
    else {
    }
    if (((UnitGetOwner(UnitFromId(184)) == 0) && (libNtve_gf_UnitInRegion(UnitFromId(184), RegionFromId(143)) == true))) {
        UnitSetPosition(UnitFromId(184), RegionGetCenter(RegionFromId(2)), false);
    }
    else {
    }
    if (((UnitGetOwner(UnitFromId(167)) == 0) && (libNtve_gf_UnitInRegion(UnitFromId(167), RegionFromId(143)) == true))) {
        UnitSetPosition(UnitFromId(167), RegionGetCenter(RegionFromId(2)), false);
    }
    else {
    }
    if (((UnitGetOwner(UnitFromId(168)) == 0) && (libNtve_gf_UnitInRegion(UnitFromId(168), RegionFromId(143)) == true))) {
        UnitSetPosition(UnitFromId(168), RegionGetCenter(RegionFromId(2)), false);
    }
    else {
    }
    if (((UnitGetOwner(UnitFromId(161)) == 0) && (libNtve_gf_UnitInRegion(UnitFromId(161), RegionFromId(143)) == true))) {
        UnitSetPosition(UnitFromId(161), RegionGetCenter(RegionFromId(2)), false);
    }
    else {
    }
    if (((UnitGetOwner(UnitFromId(146)) == 0) && (libNtve_gf_UnitInRegion(UnitFromId(146), RegionFromId(143)) == true))) {
        UnitSetPosition(UnitFromId(146), RegionGetCenter(RegionFromId(2)), false);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Fixstuckunits_Init () {
    gt_Fixstuckunits = TriggerCreate("gt_Fixstuckunits_Func");
    TriggerAddEventTimePeriodic(gt_Fixstuckunits, 30.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Fix multiple units
//--------------------------------------------------------------------------------------------------
bool gt_Fixmultipleunits_Func (bool testConds, bool runActions) {
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Fixmultipleunits_Init () {
    gt_Fixmultipleunits = TriggerCreate("gt_Fixmultipleunits_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro music
//--------------------------------------------------------------------------------------------------
bool gt_Intromusic_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    SoundChannelSetVolume(PlayerGroupAll(), c_soundCategoryAlert, 10.0, 0.0);
    SoundChannelMute(PlayerGroupSingle(EventPlayer()), c_soundCategoryMusic, true);
    PlayerGroupLoopBegin(PlayerGroupActive());
    for ( ; !PlayerGroupLoopDone() ; PlayerGroupLoopStep() ) {
        if ((gv_flag6MenuFlag[PlayerGroupLoopCurrent()] == true)) {
            gv_introMusicArray[1] = SoundLink("IntroMain", -1);
            gv_introMusicArray[2] = SoundLink("IntroBudokai2nolyrics", -1);
            gv_introMusicArray[3] = SoundLink("IntroBudokai2lyrics", -1);
            gv_introMusicArray[4] = SoundLink("IntroBudokai3", -1);
            SoundPlay(gv_introMusicArray[RandomInt(1, 4)], PlayerGroupSingle(PlayerGroupLoopCurrent()), 100.0, 0.0);
        }
        else {
            gv_introMusicArray[1] = SoundLink("IntroMain", -1);
            gv_introMusicArray[2] = SoundLink("IntroBudokai2nolyrics", -1);
            gv_introMusicArray[3] = SoundLink("IntroBudokai2lyrics", -1);
            gv_introMusicArray[4] = SoundLink("IntroBudokai3", -1);
        }
    }
    PlayerGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Intromusic_Init () {
    gt_Intromusic = TriggerCreate("gt_Intromusic_Func");
    TriggerAddEventMapInit(gt_Intromusic);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Mute button for music
//--------------------------------------------------------------------------------------------------
bool gt_Mutebuttonformusic_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    DialogCreate(50, 50, c_anchorTopLeft, 25, 10, true);
    gv_muteMusicDialog = DialogLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_muteMusicDialog, 45, 45, c_anchorCenter, 0, 0, StringExternal("Param/Value/BE995F93"), StringExternal("Param/Value/5EB5B4E1"), "");
    gv_mutemusic = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_muteMusicDialog, 45, 45, c_anchorCenter, 0, 0, StringExternal("Param/Value/82AF58B5"), StringExternal("Param/Value/673078AF"), "");
    gv_unmuteMusic = DialogControlLastCreated();
    DialogControlSetVisible(gv_unmuteMusic, PlayerGroupAll(), false);
    PlayerGroupLoopBegin(PlayerGroupActive());
    for ( ; !PlayerGroupLoopDone() ; PlayerGroupLoopStep() ) {
        if ((gv_flag1MenuFlag[PlayerGroupLoopCurrent()] == true)) {
            DialogSetVisible(gv_muteMusicDialog, PlayerGroupSingle(PlayerGroupLoopCurrent()), true);
        }
        else {
        }
    }
    PlayerGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Mutebuttonformusic_Init () {
    gt_Mutebuttonformusic = TriggerCreate("gt_Mutebuttonformusic_Func");
    TriggerAddEventTimeElapsed(gt_Mutebuttonformusic, 1.0, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Volume Down
//--------------------------------------------------------------------------------------------------
bool gt_VolumeDown_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    DialogCreate(50, 50, c_anchorTopLeft, 75, 10, true);
    gv_volume[0] = DialogLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_volume[0], 45, 45, c_anchorCenter, 0, 0, StringExternal("Param/Value/7985ED39"), StringExternal("Param/Value/6FCC98E3"), "");
    gv_volumeDown = DialogControlLastCreated();
    PlayerGroupLoopBegin(PlayerGroupActive());
    for ( ; !PlayerGroupLoopDone() ; PlayerGroupLoopStep() ) {
        if ((gv_flag1MenuFlag[PlayerGroupLoopCurrent()] == true)) {
            DialogSetVisible(gv_volume[0], PlayerGroupSingle(PlayerGroupLoopCurrent()), true);
        }
        else {
        }
    }
    PlayerGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_VolumeDown_Init () {
    gt_VolumeDown = TriggerCreate("gt_VolumeDown_Func");
    TriggerAddEventTimeElapsed(gt_VolumeDown, 1.0, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Volume Up
//--------------------------------------------------------------------------------------------------
bool gt_VolumeUp_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    DialogCreate(50, 50, c_anchorTopLeft, 125, 10, true);
    gv_volume[1] = DialogLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_volume[1], 45, 45, c_anchorCenter, 0, 0, StringExternal("Param/Value/B2A4D54F"), StringExternal("Param/Value/A6579428"), "");
    gv_volumeUp = DialogControlLastCreated();
    PlayerGroupLoopBegin(PlayerGroupActive());
    for ( ; !PlayerGroupLoopDone() ; PlayerGroupLoopStep() ) {
        if ((gv_flag1MenuFlag[PlayerGroupLoopCurrent()] == true)) {
            DialogSetVisible(gv_volume[1], PlayerGroupSingle(PlayerGroupLoopCurrent()), true);
        }
        else {
        }
    }
    PlayerGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_VolumeUp_Init () {
    gt_VolumeUp = TriggerCreate("gt_VolumeUp_Func");
    TriggerAddEventTimeElapsed(gt_VolumeUp, 1.0, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Create Play/Pause button for music
//--------------------------------------------------------------------------------------------------
bool gt_CreatePlayPausebuttonformusic_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    DialogCreate(150, 50, c_anchorTopLeft, 175, 10, true);
    gv_playPauseMusic = DialogLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_playPauseMusic, 145, 45, c_anchorCenter, 0, 0, StringExternal("Param/Value/3EE78B51"), StringExternal("Param/Value/5EC7B942"), "");
    gv_playMusic = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_playPauseMusic, 145, 45, c_anchorCenter, 0, 0, StringExternal("Param/Value/3FDE74E3"), StringExternal("Param/Value/719B5E89"), "");
    gv_pauseMusic = DialogControlLastCreated();
    DialogControlSetVisible(gv_pauseMusic, PlayerGroupAll(), false);
    PlayerGroupLoopBegin(PlayerGroupActive());
    for ( ; !PlayerGroupLoopDone() ; PlayerGroupLoopStep() ) {
        if ((gv_flag1MenuFlag[PlayerGroupLoopCurrent()] == true)) {
            DialogSetVisible(gv_playPauseMusic, PlayerGroupSingle(PlayerGroupLoopCurrent()), true);
        }
        else {
        }
    }
    PlayerGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CreatePlayPausebuttonformusic_Init () {
    gt_CreatePlayPausebuttonformusic = TriggerCreate("gt_CreatePlayPausebuttonformusic_Func");
    TriggerAddEventTimeElapsed(gt_CreatePlayPausebuttonformusic, 90.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Mute Music
//--------------------------------------------------------------------------------------------------
bool gt_MuteMusic_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((EventDialogControl() == gv_mutemusic)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    DialogControlSetVisible(gv_mutemusic, PlayerGroupSingle(EventPlayer()), false);
    SoundChannelMute(PlayerGroupSingle(EventPlayer()), c_soundCategoryVoice, true);
    SoundChannelMute(PlayerGroupSingle(EventPlayer()), c_soundCategoryMusic, false);
    DialogControlSetVisible(gv_unmuteMusic, PlayerGroupSingle(EventPlayer()), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MuteMusic_Init () {
    gt_MuteMusic = TriggerCreate("gt_MuteMusic_Func");
    TriggerAddEventDialogControl(gt_MuteMusic, EventPlayer(), c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Volume up clicked
//--------------------------------------------------------------------------------------------------
bool gt_Volumeupclicked_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((EventDialogControl() == gv_volumeUp)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if (((gv_volumeVariable >= 0.0) && (gv_volumeVariable <= 95.0))) {
        gv_volumeVariable += 5.0;
        SoundChannelSetVolume(PlayerGroupSingle(EventPlayer()), c_soundCategoryVoice, gv_volumeVariable, 0.0);
        SoundChannelSetVolume(PlayerGroupSingle(EventPlayer()), c_soundCategoryMusic, gv_volumeVariable, 0.0);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Volumeupclicked_Init () {
    gt_Volumeupclicked = TriggerCreate("gt_Volumeupclicked_Func");
    TriggerAddEventDialogControl(gt_Volumeupclicked, EventPlayer(), c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Volume down clicked
//--------------------------------------------------------------------------------------------------
bool gt_Volumedownclicked_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((EventDialogControl() == gv_volumeDown)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if (((gv_volumeVariable >= 5.0) && (gv_volumeVariable <= 100.0))) {
        gv_volumeVariable -= 5.0;
        SoundChannelSetVolume(PlayerGroupSingle(EventPlayer()), c_soundCategoryVoice, gv_volumeVariable, 0.0);
        SoundChannelSetVolume(PlayerGroupSingle(EventPlayer()), c_soundCategoryMusic, gv_volumeVariable, 0.0);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Volumedownclicked_Init () {
    gt_Volumedownclicked = TriggerCreate("gt_Volumedownclicked_Func");
    TriggerAddEventDialogControl(gt_Volumedownclicked, EventPlayer(), c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Unmute Music
//--------------------------------------------------------------------------------------------------
bool gt_UnmuteMusic_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((EventDialogControl() == gv_unmuteMusic)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    DialogControlSetVisible(gv_unmuteMusic, PlayerGroupSingle(EventPlayer()), false);
    SoundChannelMute(PlayerGroupSingle(EventPlayer()), c_soundCategoryVoice, false);
    SoundChannelMute(PlayerGroupSingle(EventPlayer()), c_soundCategoryMusic, true);
    DialogControlSetVisible(gv_mutemusic, PlayerGroupSingle(EventPlayer()), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UnmuteMusic_Init () {
    gt_UnmuteMusic = TriggerCreate("gt_UnmuteMusic_Func");
    TriggerAddEventDialogControl(gt_UnmuteMusic, EventPlayer(), c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Play music
//--------------------------------------------------------------------------------------------------
bool gt_Playmusic_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == gv_playMusic))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    DialogControlSetVisible(gv_playMusic, PlayerGroupSingle(EventPlayer()), false);
    SoundtrackPlay(PlayerGroupSingle(EventPlayer()), c_soundtrackCategoryMusic, "IntroMusic", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    SoundtrackSetShuffle(PlayerGroupSingle(EventPlayer()), c_soundtrackCategoryMusic, true, true);
    SoundChannelMute(PlayerGroupSingle(EventPlayer()), c_soundCategoryMusic, true);
    DialogControlSetVisible(gv_pauseMusic, PlayerGroupSingle(EventPlayer()), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Playmusic_Init () {
    gt_Playmusic = TriggerCreate("gt_Playmusic_Func");
    TriggerAddEventDialogControl(gt_Playmusic, EventPlayer(), c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Pause Music
//--------------------------------------------------------------------------------------------------
bool gt_PauseMusic_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == gv_pauseMusic))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    DialogControlSetVisible(gv_pauseMusic, PlayerGroupSingle(EventPlayer()), false);
    SoundtrackPause(PlayerGroupSingle(EventPlayer()), c_soundtrackCategoryMusic, true, true);
    SoundChannelMute(PlayerGroupSingle(EventPlayer()), c_soundCategoryMusic, false);
    DialogControlSetVisible(gv_playMusic, PlayerGroupSingle(EventPlayer()), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_PauseMusic_Init () {
    gt_PauseMusic = TriggerCreate("gt_PauseMusic_Func");
    TriggerAddEventDialogControl(gt_PauseMusic, EventPlayer(), c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Enemy Goku
//--------------------------------------------------------------------------------------------------
bool gt_SpawnEnemyGoku_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) != 7) && (UnitCount("Ghost", 14, RegionFromId(56), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1) && (UnitGetType(EventUnit()) != "Beacon_Protoss") && ((libNtve_gf_UnitInRegion(UnitFromId(104), RegionFromId(56)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(173), RegionFromId(56)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(179), RegionFromId(56)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(174), RegionFromId(56)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(141), RegionFromId(56)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(167), RegionFromId(56)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(161), RegionFromId(56)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(105), RegionFromId(56)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(187), RegionFromId(56)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(177), RegionFromId(56)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(183), RegionFromId(56)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(171), RegionFromId(56)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(168), RegionFromId(56)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(146), RegionFromId(56)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(106), RegionFromId(56)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(178), RegionFromId(56)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(180), RegionFromId(56)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(170), RegionFromId(56)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(107), RegionFromId(56)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(176), RegionFromId(56)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(181), RegionFromId(56)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(139), RegionFromId(56)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(185), RegionFromId(56)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(108), RegionFromId(56)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(175), RegionFromId(56)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(182), RegionFromId(56)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(140), RegionFromId(56)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(184), RegionFromId(56)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(109), RegionFromId(56)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(172), RegionFromId(56)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(186), RegionFromId(56)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(169), RegionFromId(56)) == true))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "Ghost", c_unitCreateIgnorePlacement, 14, RegionGetCenter(RegionFromId(56)), UnitGetPosition(EventUnit()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnEnemyGoku_Init () {
    gt_SpawnEnemyGoku = TriggerCreate("gt_SpawnEnemyGoku_Func");
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoku, UnitRefFromUnit(UnitFromId(104)), RegionFromId(56), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoku, UnitRefFromUnit(UnitFromId(173)), RegionFromId(56), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoku, UnitRefFromUnit(UnitFromId(179)), RegionFromId(56), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoku, UnitRefFromUnit(UnitFromId(174)), RegionFromId(56), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoku, UnitRefFromUnit(UnitFromId(141)), RegionFromId(56), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoku, UnitRefFromUnit(UnitFromId(167)), RegionFromId(56), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoku, UnitRefFromUnit(UnitFromId(161)), RegionFromId(56), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoku, UnitRefFromUnit(UnitFromId(105)), RegionFromId(56), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoku, UnitRefFromUnit(UnitFromId(187)), RegionFromId(56), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoku, UnitRefFromUnit(UnitFromId(177)), RegionFromId(56), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoku, UnitRefFromUnit(UnitFromId(183)), RegionFromId(56), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoku, UnitRefFromUnit(UnitFromId(171)), RegionFromId(56), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoku, UnitRefFromUnit(UnitFromId(168)), RegionFromId(56), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoku, UnitRefFromUnit(UnitFromId(146)), RegionFromId(56), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoku, UnitRefFromUnit(UnitFromId(106)), RegionFromId(56), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoku, UnitRefFromUnit(UnitFromId(178)), RegionFromId(56), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoku, UnitRefFromUnit(UnitFromId(180)), RegionFromId(56), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoku, UnitRefFromUnit(UnitFromId(170)), RegionFromId(56), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoku, UnitRefFromUnit(UnitFromId(107)), RegionFromId(56), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoku, UnitRefFromUnit(UnitFromId(176)), RegionFromId(56), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoku, UnitRefFromUnit(UnitFromId(181)), RegionFromId(56), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoku, UnitRefFromUnit(UnitFromId(139)), RegionFromId(56), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoku, UnitRefFromUnit(UnitFromId(185)), RegionFromId(56), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoku, UnitRefFromUnit(UnitFromId(108)), RegionFromId(56), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoku, UnitRefFromUnit(UnitFromId(175)), RegionFromId(56), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoku, UnitRefFromUnit(UnitFromId(182)), RegionFromId(56), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoku, UnitRefFromUnit(UnitFromId(140)), RegionFromId(56), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoku, UnitRefFromUnit(UnitFromId(184)), RegionFromId(56), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoku, UnitRefFromUnit(UnitFromId(109)), RegionFromId(56), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoku, UnitRefFromUnit(UnitFromId(172)), RegionFromId(56), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoku, UnitRefFromUnit(UnitFromId(186)), RegionFromId(56), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoku, UnitRefFromUnit(UnitFromId(169)), RegionFromId(56), true);
    TriggerAddEventUnitDied(gt_SpawnEnemyGoku, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Enemy Vegeta
//--------------------------------------------------------------------------------------------------
bool gt_SpawnEnemyVegeta_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) != 7) && (UnitCount("DarkTemplar", 14, RegionFromId(57), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1) && (UnitGetType(EventUnit()) != "Beacon_Protoss") && ((libNtve_gf_UnitInRegion(UnitFromId(104), RegionFromId(57)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(173), RegionFromId(57)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(179), RegionFromId(57)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(174), RegionFromId(57)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(141), RegionFromId(57)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(167), RegionFromId(57)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(161), RegionFromId(57)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(105), RegionFromId(57)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(187), RegionFromId(57)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(177), RegionFromId(57)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(183), RegionFromId(57)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(171), RegionFromId(57)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(168), RegionFromId(57)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(146), RegionFromId(57)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(106), RegionFromId(57)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(178), RegionFromId(57)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(180), RegionFromId(57)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(170), RegionFromId(57)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(107), RegionFromId(57)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(176), RegionFromId(57)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(181), RegionFromId(57)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(139), RegionFromId(57)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(185), RegionFromId(57)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(108), RegionFromId(57)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(175), RegionFromId(57)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(182), RegionFromId(57)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(140), RegionFromId(57)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(184), RegionFromId(57)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(109), RegionFromId(57)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(172), RegionFromId(57)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(186), RegionFromId(57)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(169), RegionFromId(57)) == true))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "DarkTemplar", c_unitCreateIgnorePlacement, 14, RegionGetCenter(RegionFromId(57)), UnitGetPosition(EventUnit()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnEnemyVegeta_Init () {
    gt_SpawnEnemyVegeta = TriggerCreate("gt_SpawnEnemyVegeta_Func");
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegeta, UnitRefFromUnit(UnitFromId(104)), RegionFromId(57), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegeta, UnitRefFromUnit(UnitFromId(173)), RegionFromId(57), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegeta, UnitRefFromUnit(UnitFromId(179)), RegionFromId(57), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegeta, UnitRefFromUnit(UnitFromId(174)), RegionFromId(57), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegeta, UnitRefFromUnit(UnitFromId(141)), RegionFromId(57), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegeta, UnitRefFromUnit(UnitFromId(167)), RegionFromId(57), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegeta, UnitRefFromUnit(UnitFromId(161)), RegionFromId(57), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegeta, UnitRefFromUnit(UnitFromId(105)), RegionFromId(57), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegeta, UnitRefFromUnit(UnitFromId(187)), RegionFromId(57), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegeta, UnitRefFromUnit(UnitFromId(177)), RegionFromId(57), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegeta, UnitRefFromUnit(UnitFromId(183)), RegionFromId(57), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegeta, UnitRefFromUnit(UnitFromId(171)), RegionFromId(57), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegeta, UnitRefFromUnit(UnitFromId(168)), RegionFromId(57), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegeta, UnitRefFromUnit(UnitFromId(146)), RegionFromId(57), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegeta, UnitRefFromUnit(UnitFromId(106)), RegionFromId(57), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegeta, UnitRefFromUnit(UnitFromId(178)), RegionFromId(57), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegeta, UnitRefFromUnit(UnitFromId(180)), RegionFromId(57), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegeta, UnitRefFromUnit(UnitFromId(170)), RegionFromId(57), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegeta, UnitRefFromUnit(UnitFromId(107)), RegionFromId(57), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegeta, UnitRefFromUnit(UnitFromId(176)), RegionFromId(57), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegeta, UnitRefFromUnit(UnitFromId(181)), RegionFromId(57), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegeta, UnitRefFromUnit(UnitFromId(139)), RegionFromId(57), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegeta, UnitRefFromUnit(UnitFromId(185)), RegionFromId(57), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegeta, UnitRefFromUnit(UnitFromId(108)), RegionFromId(57), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegeta, UnitRefFromUnit(UnitFromId(175)), RegionFromId(57), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegeta, UnitRefFromUnit(UnitFromId(182)), RegionFromId(57), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegeta, UnitRefFromUnit(UnitFromId(140)), RegionFromId(57), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegeta, UnitRefFromUnit(UnitFromId(184)), RegionFromId(57), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegeta, UnitRefFromUnit(UnitFromId(109)), RegionFromId(57), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegeta, UnitRefFromUnit(UnitFromId(172)), RegionFromId(57), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegeta, UnitRefFromUnit(UnitFromId(186)), RegionFromId(57), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegeta, UnitRefFromUnit(UnitFromId(169)), RegionFromId(57), true);
    TriggerAddEventUnitDied(gt_SpawnEnemyVegeta, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Enemy Gohan
//--------------------------------------------------------------------------------------------------
bool gt_SpawnEnemyGohan_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) != 7) && (UnitCount("Zergling", 14, RegionFromId(59), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1) && (UnitGetType(EventUnit()) != "Beacon_Protoss") && ((libNtve_gf_UnitInRegion(UnitFromId(104), RegionFromId(59)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(173), RegionFromId(59)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(179), RegionFromId(59)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(174), RegionFromId(59)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(141), RegionFromId(59)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(167), RegionFromId(59)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(161), RegionFromId(59)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(105), RegionFromId(59)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(187), RegionFromId(59)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(177), RegionFromId(59)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(183), RegionFromId(59)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(171), RegionFromId(59)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(168), RegionFromId(59)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(146), RegionFromId(59)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(106), RegionFromId(59)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(178), RegionFromId(59)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(180), RegionFromId(59)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(170), RegionFromId(59)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(107), RegionFromId(59)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(176), RegionFromId(59)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(181), RegionFromId(59)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(139), RegionFromId(59)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(185), RegionFromId(59)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(108), RegionFromId(59)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(175), RegionFromId(59)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(182), RegionFromId(59)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(140), RegionFromId(59)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(184), RegionFromId(59)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(109), RegionFromId(59)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(172), RegionFromId(59)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(186), RegionFromId(59)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(169), RegionFromId(59)) == true))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "Zergling", c_unitCreateIgnorePlacement, 14, RegionGetCenter(RegionFromId(59)), UnitGetPosition(EventUnit()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnEnemyGohan_Init () {
    gt_SpawnEnemyGohan = TriggerCreate("gt_SpawnEnemyGohan_Func");
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohan, UnitRefFromUnit(UnitFromId(104)), RegionFromId(59), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohan, UnitRefFromUnit(UnitFromId(173)), RegionFromId(59), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohan, UnitRefFromUnit(UnitFromId(179)), RegionFromId(59), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohan, UnitRefFromUnit(UnitFromId(174)), RegionFromId(59), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohan, UnitRefFromUnit(UnitFromId(141)), RegionFromId(59), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohan, UnitRefFromUnit(UnitFromId(167)), RegionFromId(59), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohan, UnitRefFromUnit(UnitFromId(161)), RegionFromId(59), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohan, UnitRefFromUnit(UnitFromId(105)), RegionFromId(59), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohan, UnitRefFromUnit(UnitFromId(187)), RegionFromId(59), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohan, UnitRefFromUnit(UnitFromId(177)), RegionFromId(59), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohan, UnitRefFromUnit(UnitFromId(183)), RegionFromId(59), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohan, UnitRefFromUnit(UnitFromId(171)), RegionFromId(59), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohan, UnitRefFromUnit(UnitFromId(168)), RegionFromId(59), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohan, UnitRefFromUnit(UnitFromId(146)), RegionFromId(59), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohan, UnitRefFromUnit(UnitFromId(106)), RegionFromId(59), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohan, UnitRefFromUnit(UnitFromId(178)), RegionFromId(59), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohan, UnitRefFromUnit(UnitFromId(180)), RegionFromId(59), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohan, UnitRefFromUnit(UnitFromId(170)), RegionFromId(59), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohan, UnitRefFromUnit(UnitFromId(107)), RegionFromId(59), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohan, UnitRefFromUnit(UnitFromId(176)), RegionFromId(59), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohan, UnitRefFromUnit(UnitFromId(181)), RegionFromId(59), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohan, UnitRefFromUnit(UnitFromId(139)), RegionFromId(59), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohan, UnitRefFromUnit(UnitFromId(185)), RegionFromId(59), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohan, UnitRefFromUnit(UnitFromId(108)), RegionFromId(59), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohan, UnitRefFromUnit(UnitFromId(175)), RegionFromId(59), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohan, UnitRefFromUnit(UnitFromId(182)), RegionFromId(59), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohan, UnitRefFromUnit(UnitFromId(140)), RegionFromId(59), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohan, UnitRefFromUnit(UnitFromId(184)), RegionFromId(59), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohan, UnitRefFromUnit(UnitFromId(109)), RegionFromId(59), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohan, UnitRefFromUnit(UnitFromId(172)), RegionFromId(59), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohan, UnitRefFromUnit(UnitFromId(186)), RegionFromId(59), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohan, UnitRefFromUnit(UnitFromId(169)), RegionFromId(59), true);
    TriggerAddEventUnitDied(gt_SpawnEnemyGohan, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Enemy Trunks
//--------------------------------------------------------------------------------------------------
bool gt_SpawnEnemyTrunks_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) != 7) && (UnitCount("HighTemplar", 14, RegionFromId(60), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1) && (UnitGetType(EventUnit()) != "Beacon_Protoss") && ((libNtve_gf_UnitInRegion(UnitFromId(104), RegionFromId(60)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(173), RegionFromId(60)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(179), RegionFromId(60)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(174), RegionFromId(60)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(141), RegionFromId(60)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(167), RegionFromId(60)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(161), RegionFromId(60)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(105), RegionFromId(60)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(187), RegionFromId(60)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(177), RegionFromId(60)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(183), RegionFromId(60)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(171), RegionFromId(60)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(168), RegionFromId(60)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(146), RegionFromId(60)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(106), RegionFromId(60)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(178), RegionFromId(60)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(180), RegionFromId(60)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(170), RegionFromId(60)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(107), RegionFromId(60)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(176), RegionFromId(60)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(181), RegionFromId(60)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(139), RegionFromId(60)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(185), RegionFromId(60)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(108), RegionFromId(60)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(175), RegionFromId(60)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(182), RegionFromId(60)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(140), RegionFromId(60)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(184), RegionFromId(60)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(109), RegionFromId(60)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(172), RegionFromId(60)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(186), RegionFromId(60)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(169), RegionFromId(60)) == true))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "HighTemplar", c_unitCreateIgnorePlacement, 14, RegionGetCenter(RegionFromId(60)), UnitGetPosition(EventUnit()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnEnemyTrunks_Init () {
    gt_SpawnEnemyTrunks = TriggerCreate("gt_SpawnEnemyTrunks_Func");
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunks, UnitRefFromUnit(UnitFromId(104)), RegionFromId(60), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunks, UnitRefFromUnit(UnitFromId(173)), RegionFromId(60), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunks, UnitRefFromUnit(UnitFromId(179)), RegionFromId(60), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunks, UnitRefFromUnit(UnitFromId(174)), RegionFromId(60), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunks, UnitRefFromUnit(UnitFromId(141)), RegionFromId(60), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunks, UnitRefFromUnit(UnitFromId(167)), RegionFromId(60), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunks, UnitRefFromUnit(UnitFromId(161)), RegionFromId(60), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunks, UnitRefFromUnit(UnitFromId(105)), RegionFromId(60), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunks, UnitRefFromUnit(UnitFromId(187)), RegionFromId(60), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunks, UnitRefFromUnit(UnitFromId(177)), RegionFromId(60), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunks, UnitRefFromUnit(UnitFromId(183)), RegionFromId(60), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunks, UnitRefFromUnit(UnitFromId(171)), RegionFromId(60), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunks, UnitRefFromUnit(UnitFromId(168)), RegionFromId(60), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunks, UnitRefFromUnit(UnitFromId(146)), RegionFromId(60), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunks, UnitRefFromUnit(UnitFromId(106)), RegionFromId(60), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunks, UnitRefFromUnit(UnitFromId(178)), RegionFromId(60), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunks, UnitRefFromUnit(UnitFromId(180)), RegionFromId(60), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunks, UnitRefFromUnit(UnitFromId(170)), RegionFromId(60), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunks, UnitRefFromUnit(UnitFromId(107)), RegionFromId(60), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunks, UnitRefFromUnit(UnitFromId(176)), RegionFromId(60), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunks, UnitRefFromUnit(UnitFromId(181)), RegionFromId(60), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunks, UnitRefFromUnit(UnitFromId(139)), RegionFromId(60), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunks, UnitRefFromUnit(UnitFromId(185)), RegionFromId(60), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunks, UnitRefFromUnit(UnitFromId(108)), RegionFromId(60), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunks, UnitRefFromUnit(UnitFromId(175)), RegionFromId(60), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunks, UnitRefFromUnit(UnitFromId(182)), RegionFromId(60), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunks, UnitRefFromUnit(UnitFromId(140)), RegionFromId(60), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunks, UnitRefFromUnit(UnitFromId(184)), RegionFromId(60), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunks, UnitRefFromUnit(UnitFromId(109)), RegionFromId(60), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunks, UnitRefFromUnit(UnitFromId(172)), RegionFromId(60), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunks, UnitRefFromUnit(UnitFromId(186)), RegionFromId(60), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunks, UnitRefFromUnit(UnitFromId(169)), RegionFromId(60), true);
    TriggerAddEventUnitDied(gt_SpawnEnemyTrunks, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Enemy Goten
//--------------------------------------------------------------------------------------------------
bool gt_SpawnEnemyGoten_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) != 7) && (UnitCount("Firebat", 14, RegionFromId(61), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1) && (UnitGetType(EventUnit()) != "Beacon_Protoss") && ((libNtve_gf_UnitInRegion(UnitFromId(104), RegionFromId(61)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(173), RegionFromId(61)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(179), RegionFromId(61)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(174), RegionFromId(61)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(141), RegionFromId(61)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(167), RegionFromId(61)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(161), RegionFromId(61)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(105), RegionFromId(61)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(187), RegionFromId(61)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(177), RegionFromId(61)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(183), RegionFromId(61)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(171), RegionFromId(61)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(168), RegionFromId(61)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(146), RegionFromId(61)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(106), RegionFromId(61)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(178), RegionFromId(61)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(180), RegionFromId(61)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(170), RegionFromId(61)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(107), RegionFromId(61)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(176), RegionFromId(61)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(181), RegionFromId(61)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(139), RegionFromId(61)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(185), RegionFromId(61)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(108), RegionFromId(61)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(175), RegionFromId(61)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(182), RegionFromId(61)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(140), RegionFromId(61)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(184), RegionFromId(61)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(109), RegionFromId(61)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(172), RegionFromId(61)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(186), RegionFromId(61)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(169), RegionFromId(61)) == true))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "Firebat", c_unitCreateIgnorePlacement, 14, RegionGetCenter(RegionFromId(61)), UnitGetPosition(EventUnit()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnEnemyGoten_Init () {
    gt_SpawnEnemyGoten = TriggerCreate("gt_SpawnEnemyGoten_Func");
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoten, UnitRefFromUnit(UnitFromId(104)), RegionFromId(61), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoten, UnitRefFromUnit(UnitFromId(173)), RegionFromId(61), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoten, UnitRefFromUnit(UnitFromId(179)), RegionFromId(61), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoten, UnitRefFromUnit(UnitFromId(174)), RegionFromId(61), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoten, UnitRefFromUnit(UnitFromId(141)), RegionFromId(61), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoten, UnitRefFromUnit(UnitFromId(167)), RegionFromId(61), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoten, UnitRefFromUnit(UnitFromId(161)), RegionFromId(61), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoten, UnitRefFromUnit(UnitFromId(105)), RegionFromId(61), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoten, UnitRefFromUnit(UnitFromId(187)), RegionFromId(61), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoten, UnitRefFromUnit(UnitFromId(177)), RegionFromId(61), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoten, UnitRefFromUnit(UnitFromId(183)), RegionFromId(61), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoten, UnitRefFromUnit(UnitFromId(171)), RegionFromId(61), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoten, UnitRefFromUnit(UnitFromId(168)), RegionFromId(61), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoten, UnitRefFromUnit(UnitFromId(146)), RegionFromId(61), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoten, UnitRefFromUnit(UnitFromId(106)), RegionFromId(61), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoten, UnitRefFromUnit(UnitFromId(178)), RegionFromId(61), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoten, UnitRefFromUnit(UnitFromId(180)), RegionFromId(61), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoten, UnitRefFromUnit(UnitFromId(170)), RegionFromId(61), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoten, UnitRefFromUnit(UnitFromId(107)), RegionFromId(61), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoten, UnitRefFromUnit(UnitFromId(176)), RegionFromId(61), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoten, UnitRefFromUnit(UnitFromId(181)), RegionFromId(61), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoten, UnitRefFromUnit(UnitFromId(139)), RegionFromId(61), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoten, UnitRefFromUnit(UnitFromId(185)), RegionFromId(61), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoten, UnitRefFromUnit(UnitFromId(108)), RegionFromId(61), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoten, UnitRefFromUnit(UnitFromId(175)), RegionFromId(61), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoten, UnitRefFromUnit(UnitFromId(182)), RegionFromId(61), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoten, UnitRefFromUnit(UnitFromId(140)), RegionFromId(61), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoten, UnitRefFromUnit(UnitFromId(184)), RegionFromId(61), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoten, UnitRefFromUnit(UnitFromId(109)), RegionFromId(61), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoten, UnitRefFromUnit(UnitFromId(172)), RegionFromId(61), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoten, UnitRefFromUnit(UnitFromId(186)), RegionFromId(61), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGoten, UnitRefFromUnit(UnitFromId(169)), RegionFromId(61), true);
    TriggerAddEventUnitDied(gt_SpawnEnemyGoten, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Enemy Piccolo
//--------------------------------------------------------------------------------------------------
bool gt_SpawnEnemyPiccolo_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) != 7) && (UnitCount("Spectre", 14, RegionFromId(62), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1) && (UnitGetType(EventUnit()) != "Beacon_Protoss") && ((libNtve_gf_UnitInRegion(UnitFromId(104), RegionFromId(62)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(173), RegionFromId(62)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(179), RegionFromId(62)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(174), RegionFromId(62)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(141), RegionFromId(62)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(167), RegionFromId(62)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(161), RegionFromId(62)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(105), RegionFromId(62)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(187), RegionFromId(62)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(177), RegionFromId(62)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(183), RegionFromId(62)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(171), RegionFromId(62)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(168), RegionFromId(62)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(146), RegionFromId(62)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(106), RegionFromId(62)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(178), RegionFromId(62)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(180), RegionFromId(62)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(170), RegionFromId(62)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(107), RegionFromId(62)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(176), RegionFromId(62)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(181), RegionFromId(62)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(139), RegionFromId(62)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(185), RegionFromId(62)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(108), RegionFromId(62)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(175), RegionFromId(62)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(182), RegionFromId(62)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(140), RegionFromId(62)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(184), RegionFromId(62)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(109), RegionFromId(62)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(172), RegionFromId(62)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(186), RegionFromId(62)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(169), RegionFromId(62)) == true))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "Spectre", c_unitCreateIgnorePlacement, 14, RegionGetCenter(RegionFromId(62)), UnitGetPosition(EventUnit()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnEnemyPiccolo_Init () {
    gt_SpawnEnemyPiccolo = TriggerCreate("gt_SpawnEnemyPiccolo_Func");
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccolo, UnitRefFromUnit(UnitFromId(104)), RegionFromId(62), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccolo, UnitRefFromUnit(UnitFromId(173)), RegionFromId(62), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccolo, UnitRefFromUnit(UnitFromId(179)), RegionFromId(62), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccolo, UnitRefFromUnit(UnitFromId(174)), RegionFromId(62), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccolo, UnitRefFromUnit(UnitFromId(141)), RegionFromId(62), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccolo, UnitRefFromUnit(UnitFromId(167)), RegionFromId(62), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccolo, UnitRefFromUnit(UnitFromId(161)), RegionFromId(62), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccolo, UnitRefFromUnit(UnitFromId(105)), RegionFromId(62), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccolo, UnitRefFromUnit(UnitFromId(187)), RegionFromId(62), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccolo, UnitRefFromUnit(UnitFromId(177)), RegionFromId(62), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccolo, UnitRefFromUnit(UnitFromId(183)), RegionFromId(62), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccolo, UnitRefFromUnit(UnitFromId(171)), RegionFromId(62), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccolo, UnitRefFromUnit(UnitFromId(168)), RegionFromId(62), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccolo, UnitRefFromUnit(UnitFromId(146)), RegionFromId(62), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccolo, UnitRefFromUnit(UnitFromId(106)), RegionFromId(62), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccolo, UnitRefFromUnit(UnitFromId(178)), RegionFromId(62), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccolo, UnitRefFromUnit(UnitFromId(180)), RegionFromId(62), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccolo, UnitRefFromUnit(UnitFromId(170)), RegionFromId(62), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccolo, UnitRefFromUnit(UnitFromId(107)), RegionFromId(62), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccolo, UnitRefFromUnit(UnitFromId(176)), RegionFromId(62), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccolo, UnitRefFromUnit(UnitFromId(181)), RegionFromId(62), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccolo, UnitRefFromUnit(UnitFromId(139)), RegionFromId(62), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccolo, UnitRefFromUnit(UnitFromId(185)), RegionFromId(62), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccolo, UnitRefFromUnit(UnitFromId(108)), RegionFromId(62), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccolo, UnitRefFromUnit(UnitFromId(175)), RegionFromId(62), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccolo, UnitRefFromUnit(UnitFromId(182)), RegionFromId(62), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccolo, UnitRefFromUnit(UnitFromId(140)), RegionFromId(62), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccolo, UnitRefFromUnit(UnitFromId(184)), RegionFromId(62), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccolo, UnitRefFromUnit(UnitFromId(109)), RegionFromId(62), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccolo, UnitRefFromUnit(UnitFromId(172)), RegionFromId(62), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccolo, UnitRefFromUnit(UnitFromId(186)), RegionFromId(62), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccolo, UnitRefFromUnit(UnitFromId(169)), RegionFromId(62), true);
    TriggerAddEventUnitDied(gt_SpawnEnemyPiccolo, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Enemy Namekian Warrior
//--------------------------------------------------------------------------------------------------
bool gt_SpawnEnemyNamekianWarrior_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) != 7) && (TechTreeUnitCount(14, "InfestedTerran", c_techCountQueuedOrBetter) < 1) && (UnitGetType(EventUnit()) != "Beacon_Protoss") && ((libNtve_gf_UnitInRegion(UnitFromId(104), RegionFromId(120)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(173), RegionFromId(120)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(179), RegionFromId(120)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(174), RegionFromId(120)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(141), RegionFromId(120)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(167), RegionFromId(120)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(161), RegionFromId(120)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(105), RegionFromId(120)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(187), RegionFromId(120)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(177), RegionFromId(120)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(183), RegionFromId(120)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(171), RegionFromId(120)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(168), RegionFromId(120)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(146), RegionFromId(120)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(106), RegionFromId(120)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(178), RegionFromId(120)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(180), RegionFromId(120)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(170), RegionFromId(120)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(107), RegionFromId(120)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(176), RegionFromId(120)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(181), RegionFromId(120)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(139), RegionFromId(120)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(185), RegionFromId(120)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(108), RegionFromId(120)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(175), RegionFromId(120)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(182), RegionFromId(120)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(140), RegionFromId(120)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(184), RegionFromId(120)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(109), RegionFromId(120)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(172), RegionFromId(120)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(186), RegionFromId(120)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(169), RegionFromId(120)) == true))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "InfestedTerran", c_unitCreateIgnorePlacement, 14, RegionGetCenter(RegionFromId(120)), UnitGetPosition(EventUnit()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnEnemyNamekianWarrior_Init () {
    gt_SpawnEnemyNamekianWarrior = TriggerCreate("gt_SpawnEnemyNamekianWarrior_Func");
    TriggerAddEventUnitRegion(gt_SpawnEnemyNamekianWarrior, UnitRefFromUnit(UnitFromId(104)), RegionFromId(120), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyNamekianWarrior, UnitRefFromUnit(UnitFromId(173)), RegionFromId(120), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyNamekianWarrior, UnitRefFromUnit(UnitFromId(179)), RegionFromId(120), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyNamekianWarrior, UnitRefFromUnit(UnitFromId(174)), RegionFromId(120), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyNamekianWarrior, UnitRefFromUnit(UnitFromId(141)), RegionFromId(120), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyNamekianWarrior, UnitRefFromUnit(UnitFromId(167)), RegionFromId(120), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyNamekianWarrior, UnitRefFromUnit(UnitFromId(161)), RegionFromId(120), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyNamekianWarrior, UnitRefFromUnit(UnitFromId(105)), RegionFromId(120), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyNamekianWarrior, UnitRefFromUnit(UnitFromId(187)), RegionFromId(120), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyNamekianWarrior, UnitRefFromUnit(UnitFromId(177)), RegionFromId(120), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyNamekianWarrior, UnitRefFromUnit(UnitFromId(183)), RegionFromId(120), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyNamekianWarrior, UnitRefFromUnit(UnitFromId(171)), RegionFromId(120), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyNamekianWarrior, UnitRefFromUnit(UnitFromId(168)), RegionFromId(120), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyNamekianWarrior, UnitRefFromUnit(UnitFromId(146)), RegionFromId(120), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyNamekianWarrior, UnitRefFromUnit(UnitFromId(106)), RegionFromId(120), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyNamekianWarrior, UnitRefFromUnit(UnitFromId(178)), RegionFromId(120), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyNamekianWarrior, UnitRefFromUnit(UnitFromId(180)), RegionFromId(120), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyNamekianWarrior, UnitRefFromUnit(UnitFromId(170)), RegionFromId(120), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyNamekianWarrior, UnitRefFromUnit(UnitFromId(107)), RegionFromId(120), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyNamekianWarrior, UnitRefFromUnit(UnitFromId(176)), RegionFromId(120), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyNamekianWarrior, UnitRefFromUnit(UnitFromId(181)), RegionFromId(120), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyNamekianWarrior, UnitRefFromUnit(UnitFromId(139)), RegionFromId(120), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyNamekianWarrior, UnitRefFromUnit(UnitFromId(185)), RegionFromId(120), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyNamekianWarrior, UnitRefFromUnit(UnitFromId(108)), RegionFromId(120), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyNamekianWarrior, UnitRefFromUnit(UnitFromId(175)), RegionFromId(120), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyNamekianWarrior, UnitRefFromUnit(UnitFromId(182)), RegionFromId(120), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyNamekianWarrior, UnitRefFromUnit(UnitFromId(140)), RegionFromId(120), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyNamekianWarrior, UnitRefFromUnit(UnitFromId(184)), RegionFromId(120), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyNamekianWarrior, UnitRefFromUnit(UnitFromId(109)), RegionFromId(120), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyNamekianWarrior, UnitRefFromUnit(UnitFromId(172)), RegionFromId(120), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyNamekianWarrior, UnitRefFromUnit(UnitFromId(186)), RegionFromId(120), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyNamekianWarrior, UnitRefFromUnit(UnitFromId(169)), RegionFromId(120), true);
    TriggerAddEventUnitDied(gt_SpawnEnemyNamekianWarrior, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Enemy Goku SSJ
//--------------------------------------------------------------------------------------------------
bool gt_SpawnEnemyGokuSSJ_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) != 7) && (UnitCount("Marauder", 14, RegionFromId(63), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1) && (UnitGetType(EventUnit()) != "Beacon_Protoss") && ((libNtve_gf_UnitInRegion(UnitFromId(104), RegionFromId(63)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(173), RegionFromId(63)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(179), RegionFromId(63)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(174), RegionFromId(63)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(141), RegionFromId(63)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(167), RegionFromId(63)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(161), RegionFromId(63)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(105), RegionFromId(63)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(187), RegionFromId(63)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(177), RegionFromId(63)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(183), RegionFromId(63)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(171), RegionFromId(63)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(168), RegionFromId(63)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(146), RegionFromId(63)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(106), RegionFromId(63)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(178), RegionFromId(63)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(180), RegionFromId(63)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(170), RegionFromId(63)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(107), RegionFromId(63)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(176), RegionFromId(63)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(181), RegionFromId(63)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(139), RegionFromId(63)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(185), RegionFromId(63)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(108), RegionFromId(63)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(175), RegionFromId(63)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(182), RegionFromId(63)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(140), RegionFromId(63)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(184), RegionFromId(63)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(109), RegionFromId(63)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(172), RegionFromId(63)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(186), RegionFromId(63)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(169), RegionFromId(63)) == true))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "Marauder", c_unitCreateIgnorePlacement, 14, RegionGetCenter(RegionFromId(63)), UnitGetPosition(EventUnit()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnEnemyGokuSSJ_Init () {
    gt_SpawnEnemyGokuSSJ = TriggerCreate("gt_SpawnEnemyGokuSSJ_Func");
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ, UnitRefFromUnit(UnitFromId(104)), RegionFromId(63), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ, UnitRefFromUnit(UnitFromId(173)), RegionFromId(63), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ, UnitRefFromUnit(UnitFromId(179)), RegionFromId(63), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ, UnitRefFromUnit(UnitFromId(174)), RegionFromId(63), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ, UnitRefFromUnit(UnitFromId(141)), RegionFromId(63), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ, UnitRefFromUnit(UnitFromId(167)), RegionFromId(63), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ, UnitRefFromUnit(UnitFromId(161)), RegionFromId(63), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ, UnitRefFromUnit(UnitFromId(105)), RegionFromId(63), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ, UnitRefFromUnit(UnitFromId(187)), RegionFromId(63), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ, UnitRefFromUnit(UnitFromId(177)), RegionFromId(63), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ, UnitRefFromUnit(UnitFromId(183)), RegionFromId(63), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ, UnitRefFromUnit(UnitFromId(171)), RegionFromId(63), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ, UnitRefFromUnit(UnitFromId(168)), RegionFromId(63), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ, UnitRefFromUnit(UnitFromId(146)), RegionFromId(63), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ, UnitRefFromUnit(UnitFromId(106)), RegionFromId(63), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ, UnitRefFromUnit(UnitFromId(178)), RegionFromId(63), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ, UnitRefFromUnit(UnitFromId(180)), RegionFromId(63), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ, UnitRefFromUnit(UnitFromId(170)), RegionFromId(63), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ, UnitRefFromUnit(UnitFromId(107)), RegionFromId(63), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ, UnitRefFromUnit(UnitFromId(176)), RegionFromId(63), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ, UnitRefFromUnit(UnitFromId(181)), RegionFromId(63), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ, UnitRefFromUnit(UnitFromId(139)), RegionFromId(63), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ, UnitRefFromUnit(UnitFromId(185)), RegionFromId(63), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ, UnitRefFromUnit(UnitFromId(108)), RegionFromId(63), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ, UnitRefFromUnit(UnitFromId(175)), RegionFromId(63), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ, UnitRefFromUnit(UnitFromId(182)), RegionFromId(63), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ, UnitRefFromUnit(UnitFromId(140)), RegionFromId(63), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ, UnitRefFromUnit(UnitFromId(184)), RegionFromId(63), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ, UnitRefFromUnit(UnitFromId(109)), RegionFromId(63), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ, UnitRefFromUnit(UnitFromId(172)), RegionFromId(63), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ, UnitRefFromUnit(UnitFromId(186)), RegionFromId(63), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ, UnitRefFromUnit(UnitFromId(169)), RegionFromId(63), true);
    TriggerAddEventUnitDied(gt_SpawnEnemyGokuSSJ, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Enemy Vegeta SSJ
//--------------------------------------------------------------------------------------------------
bool gt_SpawnEnemyVegetaSSJ_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) != 7) && (UnitCount("Zealot", 14, RegionFromId(64), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1) && (UnitGetType(EventUnit()) != "Beacon_Protoss") && ((libNtve_gf_UnitInRegion(UnitFromId(104), RegionFromId(64)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(173), RegionFromId(64)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(179), RegionFromId(64)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(174), RegionFromId(64)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(141), RegionFromId(64)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(167), RegionFromId(64)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(161), RegionFromId(64)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(105), RegionFromId(64)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(187), RegionFromId(64)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(177), RegionFromId(64)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(183), RegionFromId(64)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(171), RegionFromId(64)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(168), RegionFromId(64)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(146), RegionFromId(64)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(106), RegionFromId(64)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(178), RegionFromId(64)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(180), RegionFromId(64)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(170), RegionFromId(64)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(107), RegionFromId(64)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(176), RegionFromId(64)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(181), RegionFromId(64)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(139), RegionFromId(64)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(185), RegionFromId(64)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(108), RegionFromId(64)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(175), RegionFromId(64)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(182), RegionFromId(64)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(140), RegionFromId(64)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(184), RegionFromId(64)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(109), RegionFromId(64)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(172), RegionFromId(64)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(186), RegionFromId(64)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(169), RegionFromId(64)) == true))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "Zealot", c_unitCreateIgnorePlacement, 14, RegionGetCenter(RegionFromId(64)), UnitGetPosition(EventUnit()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnEnemyVegetaSSJ_Init () {
    gt_SpawnEnemyVegetaSSJ = TriggerCreate("gt_SpawnEnemyVegetaSSJ_Func");
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ, UnitRefFromUnit(UnitFromId(104)), RegionFromId(64), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ, UnitRefFromUnit(UnitFromId(173)), RegionFromId(64), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ, UnitRefFromUnit(UnitFromId(179)), RegionFromId(64), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ, UnitRefFromUnit(UnitFromId(174)), RegionFromId(64), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ, UnitRefFromUnit(UnitFromId(141)), RegionFromId(64), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ, UnitRefFromUnit(UnitFromId(167)), RegionFromId(64), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ, UnitRefFromUnit(UnitFromId(161)), RegionFromId(64), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ, UnitRefFromUnit(UnitFromId(105)), RegionFromId(64), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ, UnitRefFromUnit(UnitFromId(187)), RegionFromId(64), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ, UnitRefFromUnit(UnitFromId(177)), RegionFromId(64), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ, UnitRefFromUnit(UnitFromId(183)), RegionFromId(64), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ, UnitRefFromUnit(UnitFromId(171)), RegionFromId(64), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ, UnitRefFromUnit(UnitFromId(168)), RegionFromId(64), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ, UnitRefFromUnit(UnitFromId(146)), RegionFromId(64), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ, UnitRefFromUnit(UnitFromId(106)), RegionFromId(64), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ, UnitRefFromUnit(UnitFromId(178)), RegionFromId(64), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ, UnitRefFromUnit(UnitFromId(180)), RegionFromId(64), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ, UnitRefFromUnit(UnitFromId(170)), RegionFromId(64), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ, UnitRefFromUnit(UnitFromId(107)), RegionFromId(64), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ, UnitRefFromUnit(UnitFromId(176)), RegionFromId(64), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ, UnitRefFromUnit(UnitFromId(181)), RegionFromId(64), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ, UnitRefFromUnit(UnitFromId(139)), RegionFromId(64), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ, UnitRefFromUnit(UnitFromId(185)), RegionFromId(64), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ, UnitRefFromUnit(UnitFromId(108)), RegionFromId(64), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ, UnitRefFromUnit(UnitFromId(175)), RegionFromId(64), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ, UnitRefFromUnit(UnitFromId(182)), RegionFromId(64), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ, UnitRefFromUnit(UnitFromId(140)), RegionFromId(64), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ, UnitRefFromUnit(UnitFromId(184)), RegionFromId(64), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ, UnitRefFromUnit(UnitFromId(109)), RegionFromId(64), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ, UnitRefFromUnit(UnitFromId(172)), RegionFromId(64), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ, UnitRefFromUnit(UnitFromId(186)), RegionFromId(64), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ, UnitRefFromUnit(UnitFromId(169)), RegionFromId(64), true);
    TriggerAddEventUnitDied(gt_SpawnEnemyVegetaSSJ, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Enemy Gohan SSJ
//--------------------------------------------------------------------------------------------------
bool gt_SpawnEnemyGohanSSJ_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) != 7) && (UnitCount("InfestedAbomination", 14, RegionFromId(65), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1) && (UnitGetType(EventUnit()) != "Beacon_Protoss") && ((libNtve_gf_UnitInRegion(UnitFromId(104), RegionFromId(65)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(173), RegionFromId(65)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(179), RegionFromId(65)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(174), RegionFromId(65)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(141), RegionFromId(65)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(167), RegionFromId(65)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(161), RegionFromId(65)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(105), RegionFromId(65)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(187), RegionFromId(65)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(177), RegionFromId(65)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(183), RegionFromId(65)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(171), RegionFromId(65)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(168), RegionFromId(65)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(146), RegionFromId(65)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(106), RegionFromId(65)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(178), RegionFromId(65)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(180), RegionFromId(65)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(170), RegionFromId(65)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(107), RegionFromId(65)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(176), RegionFromId(65)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(181), RegionFromId(65)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(139), RegionFromId(65)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(185), RegionFromId(65)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(108), RegionFromId(65)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(175), RegionFromId(65)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(182), RegionFromId(65)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(140), RegionFromId(65)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(184), RegionFromId(65)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(109), RegionFromId(65)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(172), RegionFromId(65)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(186), RegionFromId(65)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(169), RegionFromId(65)) == true))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "InfestedAbomination", c_unitCreateIgnorePlacement, 14, RegionGetCenter(RegionFromId(65)), UnitGetPosition(EventUnit()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnEnemyGohanSSJ_Init () {
    gt_SpawnEnemyGohanSSJ = TriggerCreate("gt_SpawnEnemyGohanSSJ_Func");
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ, UnitRefFromUnit(UnitFromId(104)), RegionFromId(65), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ, UnitRefFromUnit(UnitFromId(173)), RegionFromId(65), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ, UnitRefFromUnit(UnitFromId(179)), RegionFromId(65), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ, UnitRefFromUnit(UnitFromId(174)), RegionFromId(65), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ, UnitRefFromUnit(UnitFromId(141)), RegionFromId(65), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ, UnitRefFromUnit(UnitFromId(167)), RegionFromId(65), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ, UnitRefFromUnit(UnitFromId(161)), RegionFromId(65), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ, UnitRefFromUnit(UnitFromId(105)), RegionFromId(65), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ, UnitRefFromUnit(UnitFromId(187)), RegionFromId(65), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ, UnitRefFromUnit(UnitFromId(177)), RegionFromId(65), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ, UnitRefFromUnit(UnitFromId(183)), RegionFromId(65), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ, UnitRefFromUnit(UnitFromId(171)), RegionFromId(65), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ, UnitRefFromUnit(UnitFromId(168)), RegionFromId(65), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ, UnitRefFromUnit(UnitFromId(146)), RegionFromId(65), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ, UnitRefFromUnit(UnitFromId(106)), RegionFromId(65), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ, UnitRefFromUnit(UnitFromId(178)), RegionFromId(65), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ, UnitRefFromUnit(UnitFromId(180)), RegionFromId(65), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ, UnitRefFromUnit(UnitFromId(170)), RegionFromId(65), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ, UnitRefFromUnit(UnitFromId(107)), RegionFromId(65), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ, UnitRefFromUnit(UnitFromId(176)), RegionFromId(65), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ, UnitRefFromUnit(UnitFromId(181)), RegionFromId(65), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ, UnitRefFromUnit(UnitFromId(139)), RegionFromId(65), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ, UnitRefFromUnit(UnitFromId(185)), RegionFromId(65), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ, UnitRefFromUnit(UnitFromId(108)), RegionFromId(65), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ, UnitRefFromUnit(UnitFromId(175)), RegionFromId(65), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ, UnitRefFromUnit(UnitFromId(182)), RegionFromId(65), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ, UnitRefFromUnit(UnitFromId(140)), RegionFromId(65), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ, UnitRefFromUnit(UnitFromId(184)), RegionFromId(65), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ, UnitRefFromUnit(UnitFromId(109)), RegionFromId(65), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ, UnitRefFromUnit(UnitFromId(172)), RegionFromId(65), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ, UnitRefFromUnit(UnitFromId(186)), RegionFromId(65), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ, UnitRefFromUnit(UnitFromId(169)), RegionFromId(65), true);
    TriggerAddEventUnitDied(gt_SpawnEnemyGohanSSJ, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Enemy Trunks SSJ
//--------------------------------------------------------------------------------------------------
bool gt_SpawnEnemyTrunksSSJ_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) != 7) && (UnitCount("Tassadar", 14, RegionFromId(66), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1) && (UnitGetType(EventUnit()) != "Beacon_Protoss") && ((libNtve_gf_UnitInRegion(UnitFromId(104), RegionFromId(66)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(173), RegionFromId(66)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(179), RegionFromId(66)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(174), RegionFromId(66)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(141), RegionFromId(66)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(167), RegionFromId(66)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(161), RegionFromId(66)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(105), RegionFromId(66)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(187), RegionFromId(66)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(177), RegionFromId(66)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(183), RegionFromId(66)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(171), RegionFromId(66)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(168), RegionFromId(66)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(146), RegionFromId(66)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(106), RegionFromId(66)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(178), RegionFromId(66)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(180), RegionFromId(66)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(170), RegionFromId(66)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(107), RegionFromId(66)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(176), RegionFromId(66)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(181), RegionFromId(66)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(139), RegionFromId(66)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(185), RegionFromId(66)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(108), RegionFromId(66)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(175), RegionFromId(66)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(182), RegionFromId(66)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(140), RegionFromId(66)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(184), RegionFromId(66)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(109), RegionFromId(66)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(172), RegionFromId(66)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(186), RegionFromId(66)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(169), RegionFromId(66)) == true))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "Tassadar", c_unitCreateIgnorePlacement, 14, RegionGetCenter(RegionFromId(66)), UnitGetPosition(EventUnit()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnEnemyTrunksSSJ_Init () {
    gt_SpawnEnemyTrunksSSJ = TriggerCreate("gt_SpawnEnemyTrunksSSJ_Func");
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunksSSJ, UnitRefFromUnit(UnitFromId(104)), RegionFromId(66), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunksSSJ, UnitRefFromUnit(UnitFromId(173)), RegionFromId(66), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunksSSJ, UnitRefFromUnit(UnitFromId(179)), RegionFromId(66), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunksSSJ, UnitRefFromUnit(UnitFromId(174)), RegionFromId(66), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunksSSJ, UnitRefFromUnit(UnitFromId(141)), RegionFromId(66), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunksSSJ, UnitRefFromUnit(UnitFromId(167)), RegionFromId(66), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunksSSJ, UnitRefFromUnit(UnitFromId(161)), RegionFromId(66), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunksSSJ, UnitRefFromUnit(UnitFromId(105)), RegionFromId(66), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunksSSJ, UnitRefFromUnit(UnitFromId(187)), RegionFromId(66), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunksSSJ, UnitRefFromUnit(UnitFromId(177)), RegionFromId(66), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunksSSJ, UnitRefFromUnit(UnitFromId(183)), RegionFromId(66), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunksSSJ, UnitRefFromUnit(UnitFromId(171)), RegionFromId(66), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunksSSJ, UnitRefFromUnit(UnitFromId(168)), RegionFromId(66), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunksSSJ, UnitRefFromUnit(UnitFromId(146)), RegionFromId(66), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunksSSJ, UnitRefFromUnit(UnitFromId(106)), RegionFromId(66), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunksSSJ, UnitRefFromUnit(UnitFromId(178)), RegionFromId(66), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunksSSJ, UnitRefFromUnit(UnitFromId(180)), RegionFromId(66), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunksSSJ, UnitRefFromUnit(UnitFromId(170)), RegionFromId(66), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunksSSJ, UnitRefFromUnit(UnitFromId(107)), RegionFromId(66), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunksSSJ, UnitRefFromUnit(UnitFromId(176)), RegionFromId(66), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunksSSJ, UnitRefFromUnit(UnitFromId(181)), RegionFromId(66), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunksSSJ, UnitRefFromUnit(UnitFromId(139)), RegionFromId(66), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunksSSJ, UnitRefFromUnit(UnitFromId(185)), RegionFromId(66), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunksSSJ, UnitRefFromUnit(UnitFromId(108)), RegionFromId(66), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunksSSJ, UnitRefFromUnit(UnitFromId(175)), RegionFromId(66), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunksSSJ, UnitRefFromUnit(UnitFromId(182)), RegionFromId(66), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunksSSJ, UnitRefFromUnit(UnitFromId(140)), RegionFromId(66), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunksSSJ, UnitRefFromUnit(UnitFromId(184)), RegionFromId(66), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunksSSJ, UnitRefFromUnit(UnitFromId(109)), RegionFromId(66), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunksSSJ, UnitRefFromUnit(UnitFromId(172)), RegionFromId(66), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunksSSJ, UnitRefFromUnit(UnitFromId(186)), RegionFromId(66), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyTrunksSSJ, UnitRefFromUnit(UnitFromId(169)), RegionFromId(66), true);
    TriggerAddEventUnitDied(gt_SpawnEnemyTrunksSSJ, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Enemy Goten SSJ
//--------------------------------------------------------------------------------------------------
bool gt_SpawnEnemyGotenSSJ_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) != 7) && (UnitCount("Predator", 14, RegionFromId(67), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1) && (UnitGetType(EventUnit()) != "Beacon_Protoss") && ((libNtve_gf_UnitInRegion(UnitFromId(104), RegionFromId(67)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(173), RegionFromId(67)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(179), RegionFromId(67)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(174), RegionFromId(67)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(141), RegionFromId(67)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(167), RegionFromId(67)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(161), RegionFromId(67)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(105), RegionFromId(67)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(187), RegionFromId(67)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(177), RegionFromId(67)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(183), RegionFromId(67)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(171), RegionFromId(67)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(168), RegionFromId(67)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(146), RegionFromId(67)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(106), RegionFromId(67)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(178), RegionFromId(67)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(180), RegionFromId(67)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(170), RegionFromId(67)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(107), RegionFromId(67)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(176), RegionFromId(67)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(181), RegionFromId(67)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(139), RegionFromId(67)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(185), RegionFromId(67)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(108), RegionFromId(67)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(175), RegionFromId(67)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(182), RegionFromId(67)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(140), RegionFromId(67)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(184), RegionFromId(67)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(109), RegionFromId(67)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(172), RegionFromId(67)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(186), RegionFromId(67)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(169), RegionFromId(67)) == true))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "Predator", c_unitCreateIgnorePlacement, 14, RegionGetCenter(RegionFromId(67)), UnitGetPosition(EventUnit()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnEnemyGotenSSJ_Init () {
    gt_SpawnEnemyGotenSSJ = TriggerCreate("gt_SpawnEnemyGotenSSJ_Func");
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenSSJ, UnitRefFromUnit(UnitFromId(104)), RegionFromId(67), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenSSJ, UnitRefFromUnit(UnitFromId(173)), RegionFromId(67), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenSSJ, UnitRefFromUnit(UnitFromId(179)), RegionFromId(67), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenSSJ, UnitRefFromUnit(UnitFromId(174)), RegionFromId(67), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenSSJ, UnitRefFromUnit(UnitFromId(141)), RegionFromId(67), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenSSJ, UnitRefFromUnit(UnitFromId(167)), RegionFromId(67), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenSSJ, UnitRefFromUnit(UnitFromId(161)), RegionFromId(67), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenSSJ, UnitRefFromUnit(UnitFromId(105)), RegionFromId(67), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenSSJ, UnitRefFromUnit(UnitFromId(187)), RegionFromId(67), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenSSJ, UnitRefFromUnit(UnitFromId(177)), RegionFromId(67), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenSSJ, UnitRefFromUnit(UnitFromId(183)), RegionFromId(67), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenSSJ, UnitRefFromUnit(UnitFromId(171)), RegionFromId(67), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenSSJ, UnitRefFromUnit(UnitFromId(168)), RegionFromId(67), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenSSJ, UnitRefFromUnit(UnitFromId(146)), RegionFromId(67), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenSSJ, UnitRefFromUnit(UnitFromId(106)), RegionFromId(67), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenSSJ, UnitRefFromUnit(UnitFromId(178)), RegionFromId(67), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenSSJ, UnitRefFromUnit(UnitFromId(180)), RegionFromId(67), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenSSJ, UnitRefFromUnit(UnitFromId(170)), RegionFromId(67), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenSSJ, UnitRefFromUnit(UnitFromId(107)), RegionFromId(67), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenSSJ, UnitRefFromUnit(UnitFromId(176)), RegionFromId(67), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenSSJ, UnitRefFromUnit(UnitFromId(181)), RegionFromId(67), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenSSJ, UnitRefFromUnit(UnitFromId(139)), RegionFromId(67), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenSSJ, UnitRefFromUnit(UnitFromId(185)), RegionFromId(67), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenSSJ, UnitRefFromUnit(UnitFromId(108)), RegionFromId(67), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenSSJ, UnitRefFromUnit(UnitFromId(175)), RegionFromId(67), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenSSJ, UnitRefFromUnit(UnitFromId(182)), RegionFromId(67), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenSSJ, UnitRefFromUnit(UnitFromId(140)), RegionFromId(67), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenSSJ, UnitRefFromUnit(UnitFromId(184)), RegionFromId(67), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenSSJ, UnitRefFromUnit(UnitFromId(109)), RegionFromId(67), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenSSJ, UnitRefFromUnit(UnitFromId(172)), RegionFromId(67), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenSSJ, UnitRefFromUnit(UnitFromId(186)), RegionFromId(67), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenSSJ, UnitRefFromUnit(UnitFromId(169)), RegionFromId(67), true);
    TriggerAddEventUnitDied(gt_SpawnEnemyGotenSSJ, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Enemy Piccolo Fused (Nail)
//--------------------------------------------------------------------------------------------------
bool gt_SpawnEnemyPiccoloFusedNail_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) != 7) && (UnitCount("Queen", 14, RegionFromId(68), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1) && (UnitGetType(EventUnit()) != "Beacon_Protoss") && ((libNtve_gf_UnitInRegion(UnitFromId(104), RegionFromId(68)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(173), RegionFromId(68)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(179), RegionFromId(68)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(174), RegionFromId(68)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(141), RegionFromId(68)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(167), RegionFromId(68)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(161), RegionFromId(68)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(105), RegionFromId(68)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(187), RegionFromId(68)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(177), RegionFromId(68)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(183), RegionFromId(68)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(171), RegionFromId(68)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(168), RegionFromId(68)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(146), RegionFromId(68)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(106), RegionFromId(68)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(178), RegionFromId(68)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(180), RegionFromId(68)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(170), RegionFromId(68)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(107), RegionFromId(68)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(176), RegionFromId(68)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(181), RegionFromId(68)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(139), RegionFromId(68)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(185), RegionFromId(68)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(108), RegionFromId(68)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(175), RegionFromId(68)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(182), RegionFromId(68)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(140), RegionFromId(68)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(184), RegionFromId(68)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(109), RegionFromId(68)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(172), RegionFromId(68)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(186), RegionFromId(68)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(169), RegionFromId(68)) == true))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "Queen", c_unitCreateIgnorePlacement, 14, RegionGetCenter(RegionFromId(68)), UnitGetPosition(EventUnit()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnEnemyPiccoloFusedNail_Init () {
    gt_SpawnEnemyPiccoloFusedNail = TriggerCreate("gt_SpawnEnemyPiccoloFusedNail_Func");
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedNail, UnitRefFromUnit(UnitFromId(104)), RegionFromId(68), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedNail, UnitRefFromUnit(UnitFromId(173)), RegionFromId(68), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedNail, UnitRefFromUnit(UnitFromId(179)), RegionFromId(68), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedNail, UnitRefFromUnit(UnitFromId(174)), RegionFromId(68), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedNail, UnitRefFromUnit(UnitFromId(141)), RegionFromId(68), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedNail, UnitRefFromUnit(UnitFromId(167)), RegionFromId(68), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedNail, UnitRefFromUnit(UnitFromId(161)), RegionFromId(68), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedNail, UnitRefFromUnit(UnitFromId(105)), RegionFromId(68), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedNail, UnitRefFromUnit(UnitFromId(187)), RegionFromId(68), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedNail, UnitRefFromUnit(UnitFromId(177)), RegionFromId(68), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedNail, UnitRefFromUnit(UnitFromId(183)), RegionFromId(68), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedNail, UnitRefFromUnit(UnitFromId(171)), RegionFromId(68), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedNail, UnitRefFromUnit(UnitFromId(168)), RegionFromId(68), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedNail, UnitRefFromUnit(UnitFromId(146)), RegionFromId(68), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedNail, UnitRefFromUnit(UnitFromId(106)), RegionFromId(68), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedNail, UnitRefFromUnit(UnitFromId(178)), RegionFromId(68), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedNail, UnitRefFromUnit(UnitFromId(180)), RegionFromId(68), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedNail, UnitRefFromUnit(UnitFromId(170)), RegionFromId(68), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedNail, UnitRefFromUnit(UnitFromId(107)), RegionFromId(68), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedNail, UnitRefFromUnit(UnitFromId(176)), RegionFromId(68), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedNail, UnitRefFromUnit(UnitFromId(181)), RegionFromId(68), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedNail, UnitRefFromUnit(UnitFromId(139)), RegionFromId(68), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedNail, UnitRefFromUnit(UnitFromId(185)), RegionFromId(68), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedNail, UnitRefFromUnit(UnitFromId(108)), RegionFromId(68), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedNail, UnitRefFromUnit(UnitFromId(175)), RegionFromId(68), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedNail, UnitRefFromUnit(UnitFromId(182)), RegionFromId(68), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedNail, UnitRefFromUnit(UnitFromId(140)), RegionFromId(68), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedNail, UnitRefFromUnit(UnitFromId(184)), RegionFromId(68), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedNail, UnitRefFromUnit(UnitFromId(109)), RegionFromId(68), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedNail, UnitRefFromUnit(UnitFromId(172)), RegionFromId(68), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedNail, UnitRefFromUnit(UnitFromId(186)), RegionFromId(68), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedNail, UnitRefFromUnit(UnitFromId(169)), RegionFromId(68), true);
    TriggerAddEventUnitDied(gt_SpawnEnemyPiccoloFusedNail, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Enemy Goku SSJ 2
//--------------------------------------------------------------------------------------------------
bool gt_SpawnEnemyGokuSSJ2_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) != 7) && (UnitCount("Reaper", 14, RegionFromId(69), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1) && (UnitGetType(EventUnit()) != "Beacon_Protoss") && ((libNtve_gf_UnitInRegion(UnitFromId(104), RegionFromId(69)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(173), RegionFromId(69)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(179), RegionFromId(69)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(174), RegionFromId(69)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(141), RegionFromId(69)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(167), RegionFromId(69)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(161), RegionFromId(69)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(105), RegionFromId(69)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(187), RegionFromId(69)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(177), RegionFromId(69)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(183), RegionFromId(69)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(171), RegionFromId(69)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(168), RegionFromId(69)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(146), RegionFromId(69)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(106), RegionFromId(69)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(178), RegionFromId(69)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(180), RegionFromId(69)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(170), RegionFromId(69)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(107), RegionFromId(69)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(176), RegionFromId(69)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(181), RegionFromId(69)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(139), RegionFromId(69)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(185), RegionFromId(69)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(108), RegionFromId(69)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(175), RegionFromId(69)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(182), RegionFromId(69)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(140), RegionFromId(69)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(184), RegionFromId(69)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(109), RegionFromId(69)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(172), RegionFromId(69)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(186), RegionFromId(69)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(169), RegionFromId(69)) == true))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "Reaper", c_unitCreateIgnorePlacement, 14, RegionGetCenter(RegionFromId(69)), UnitGetPosition(EventUnit()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnEnemyGokuSSJ2_Init () {
    gt_SpawnEnemyGokuSSJ2 = TriggerCreate("gt_SpawnEnemyGokuSSJ2_Func");
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ2, UnitRefFromUnit(UnitFromId(104)), RegionFromId(69), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ2, UnitRefFromUnit(UnitFromId(173)), RegionFromId(69), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ2, UnitRefFromUnit(UnitFromId(179)), RegionFromId(69), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ2, UnitRefFromUnit(UnitFromId(174)), RegionFromId(69), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ2, UnitRefFromUnit(UnitFromId(141)), RegionFromId(69), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ2, UnitRefFromUnit(UnitFromId(167)), RegionFromId(69), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ2, UnitRefFromUnit(UnitFromId(161)), RegionFromId(69), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ2, UnitRefFromUnit(UnitFromId(105)), RegionFromId(69), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ2, UnitRefFromUnit(UnitFromId(187)), RegionFromId(69), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ2, UnitRefFromUnit(UnitFromId(177)), RegionFromId(69), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ2, UnitRefFromUnit(UnitFromId(183)), RegionFromId(69), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ2, UnitRefFromUnit(UnitFromId(171)), RegionFromId(69), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ2, UnitRefFromUnit(UnitFromId(168)), RegionFromId(69), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ2, UnitRefFromUnit(UnitFromId(146)), RegionFromId(69), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ2, UnitRefFromUnit(UnitFromId(106)), RegionFromId(69), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ2, UnitRefFromUnit(UnitFromId(178)), RegionFromId(69), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ2, UnitRefFromUnit(UnitFromId(180)), RegionFromId(69), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ2, UnitRefFromUnit(UnitFromId(170)), RegionFromId(69), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ2, UnitRefFromUnit(UnitFromId(107)), RegionFromId(69), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ2, UnitRefFromUnit(UnitFromId(176)), RegionFromId(69), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ2, UnitRefFromUnit(UnitFromId(181)), RegionFromId(69), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ2, UnitRefFromUnit(UnitFromId(139)), RegionFromId(69), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ2, UnitRefFromUnit(UnitFromId(185)), RegionFromId(69), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ2, UnitRefFromUnit(UnitFromId(108)), RegionFromId(69), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ2, UnitRefFromUnit(UnitFromId(175)), RegionFromId(69), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ2, UnitRefFromUnit(UnitFromId(182)), RegionFromId(69), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ2, UnitRefFromUnit(UnitFromId(140)), RegionFromId(69), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ2, UnitRefFromUnit(UnitFromId(184)), RegionFromId(69), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ2, UnitRefFromUnit(UnitFromId(109)), RegionFromId(69), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ2, UnitRefFromUnit(UnitFromId(172)), RegionFromId(69), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ2, UnitRefFromUnit(UnitFromId(186)), RegionFromId(69), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ2, UnitRefFromUnit(UnitFromId(169)), RegionFromId(69), true);
    TriggerAddEventUnitDied(gt_SpawnEnemyGokuSSJ2, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Enemy Vegeta SSJ 2
//--------------------------------------------------------------------------------------------------
bool gt_SpawnEnemyVegetaSSJ2_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) != 7) && (UnitCount("PrisonZealot", 14, RegionFromId(70), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1) && (UnitGetType(EventUnit()) != "Beacon_Protoss") && ((libNtve_gf_UnitInRegion(UnitFromId(104), RegionFromId(70)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(173), RegionFromId(70)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(179), RegionFromId(70)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(174), RegionFromId(70)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(141), RegionFromId(70)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(167), RegionFromId(70)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(161), RegionFromId(70)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(105), RegionFromId(70)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(187), RegionFromId(70)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(177), RegionFromId(70)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(183), RegionFromId(70)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(171), RegionFromId(70)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(168), RegionFromId(70)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(146), RegionFromId(70)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(106), RegionFromId(70)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(178), RegionFromId(70)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(180), RegionFromId(70)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(170), RegionFromId(70)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(107), RegionFromId(70)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(176), RegionFromId(70)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(181), RegionFromId(70)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(139), RegionFromId(70)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(185), RegionFromId(70)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(108), RegionFromId(70)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(175), RegionFromId(70)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(182), RegionFromId(70)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(140), RegionFromId(70)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(184), RegionFromId(70)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(109), RegionFromId(70)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(172), RegionFromId(70)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(186), RegionFromId(70)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(169), RegionFromId(70)) == true))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "PrisonZealot", c_unitCreateIgnorePlacement, 14, RegionGetCenter(RegionFromId(70)), UnitGetPosition(EventUnit()));
    UnitBehaviorRemove(UnitLastCreated(), "HeroDeathPrevention", 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnEnemyVegetaSSJ2_Init () {
    gt_SpawnEnemyVegetaSSJ2 = TriggerCreate("gt_SpawnEnemyVegetaSSJ2_Func");
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ2, UnitRefFromUnit(UnitFromId(104)), RegionFromId(70), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ2, UnitRefFromUnit(UnitFromId(173)), RegionFromId(70), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ2, UnitRefFromUnit(UnitFromId(179)), RegionFromId(70), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ2, UnitRefFromUnit(UnitFromId(174)), RegionFromId(70), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ2, UnitRefFromUnit(UnitFromId(141)), RegionFromId(70), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ2, UnitRefFromUnit(UnitFromId(167)), RegionFromId(70), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ2, UnitRefFromUnit(UnitFromId(161)), RegionFromId(70), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ2, UnitRefFromUnit(UnitFromId(105)), RegionFromId(70), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ2, UnitRefFromUnit(UnitFromId(187)), RegionFromId(70), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ2, UnitRefFromUnit(UnitFromId(177)), RegionFromId(70), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ2, UnitRefFromUnit(UnitFromId(183)), RegionFromId(70), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ2, UnitRefFromUnit(UnitFromId(171)), RegionFromId(70), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ2, UnitRefFromUnit(UnitFromId(168)), RegionFromId(70), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ2, UnitRefFromUnit(UnitFromId(146)), RegionFromId(70), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ2, UnitRefFromUnit(UnitFromId(106)), RegionFromId(70), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ2, UnitRefFromUnit(UnitFromId(178)), RegionFromId(70), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ2, UnitRefFromUnit(UnitFromId(180)), RegionFromId(70), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ2, UnitRefFromUnit(UnitFromId(170)), RegionFromId(70), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ2, UnitRefFromUnit(UnitFromId(107)), RegionFromId(70), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ2, UnitRefFromUnit(UnitFromId(176)), RegionFromId(70), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ2, UnitRefFromUnit(UnitFromId(181)), RegionFromId(70), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ2, UnitRefFromUnit(UnitFromId(139)), RegionFromId(70), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ2, UnitRefFromUnit(UnitFromId(185)), RegionFromId(70), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ2, UnitRefFromUnit(UnitFromId(108)), RegionFromId(70), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ2, UnitRefFromUnit(UnitFromId(175)), RegionFromId(70), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ2, UnitRefFromUnit(UnitFromId(182)), RegionFromId(70), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ2, UnitRefFromUnit(UnitFromId(140)), RegionFromId(70), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ2, UnitRefFromUnit(UnitFromId(184)), RegionFromId(70), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ2, UnitRefFromUnit(UnitFromId(109)), RegionFromId(70), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ2, UnitRefFromUnit(UnitFromId(172)), RegionFromId(70), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ2, UnitRefFromUnit(UnitFromId(186)), RegionFromId(70), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ2, UnitRefFromUnit(UnitFromId(169)), RegionFromId(70), true);
    TriggerAddEventUnitDied(gt_SpawnEnemyVegetaSSJ2, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Enemy Gohan SSJ 2
//--------------------------------------------------------------------------------------------------
bool gt_SpawnEnemyGohanSSJ2_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) != 7) && (UnitCount("Ultralisk", 14, RegionFromId(71), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1) && (UnitGetType(EventUnit()) != "Beacon_Protoss") && ((libNtve_gf_UnitInRegion(UnitFromId(104), RegionFromId(71)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(173), RegionFromId(71)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(179), RegionFromId(71)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(174), RegionFromId(71)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(141), RegionFromId(71)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(167), RegionFromId(71)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(161), RegionFromId(71)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(105), RegionFromId(71)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(187), RegionFromId(71)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(177), RegionFromId(71)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(183), RegionFromId(71)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(171), RegionFromId(71)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(168), RegionFromId(71)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(146), RegionFromId(71)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(106), RegionFromId(71)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(178), RegionFromId(71)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(180), RegionFromId(71)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(170), RegionFromId(71)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(107), RegionFromId(71)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(176), RegionFromId(71)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(181), RegionFromId(71)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(139), RegionFromId(71)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(185), RegionFromId(71)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(108), RegionFromId(71)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(175), RegionFromId(71)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(182), RegionFromId(71)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(140), RegionFromId(71)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(184), RegionFromId(71)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(109), RegionFromId(71)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(172), RegionFromId(71)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(186), RegionFromId(71)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(169), RegionFromId(71)) == true))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "Ultralisk", c_unitCreateIgnorePlacement, 14, RegionGetCenter(RegionFromId(71)), UnitGetPosition(EventUnit()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnEnemyGohanSSJ2_Init () {
    gt_SpawnEnemyGohanSSJ2 = TriggerCreate("gt_SpawnEnemyGohanSSJ2_Func");
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ2, UnitRefFromUnit(UnitFromId(104)), RegionFromId(71), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ2, UnitRefFromUnit(UnitFromId(173)), RegionFromId(71), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ2, UnitRefFromUnit(UnitFromId(179)), RegionFromId(71), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ2, UnitRefFromUnit(UnitFromId(174)), RegionFromId(71), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ2, UnitRefFromUnit(UnitFromId(141)), RegionFromId(71), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ2, UnitRefFromUnit(UnitFromId(167)), RegionFromId(71), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ2, UnitRefFromUnit(UnitFromId(161)), RegionFromId(71), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ2, UnitRefFromUnit(UnitFromId(105)), RegionFromId(71), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ2, UnitRefFromUnit(UnitFromId(187)), RegionFromId(71), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ2, UnitRefFromUnit(UnitFromId(177)), RegionFromId(71), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ2, UnitRefFromUnit(UnitFromId(183)), RegionFromId(71), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ2, UnitRefFromUnit(UnitFromId(171)), RegionFromId(71), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ2, UnitRefFromUnit(UnitFromId(168)), RegionFromId(71), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ2, UnitRefFromUnit(UnitFromId(146)), RegionFromId(71), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ2, UnitRefFromUnit(UnitFromId(106)), RegionFromId(71), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ2, UnitRefFromUnit(UnitFromId(178)), RegionFromId(71), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ2, UnitRefFromUnit(UnitFromId(180)), RegionFromId(71), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ2, UnitRefFromUnit(UnitFromId(170)), RegionFromId(71), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ2, UnitRefFromUnit(UnitFromId(107)), RegionFromId(71), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ2, UnitRefFromUnit(UnitFromId(176)), RegionFromId(71), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ2, UnitRefFromUnit(UnitFromId(181)), RegionFromId(71), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ2, UnitRefFromUnit(UnitFromId(139)), RegionFromId(71), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ2, UnitRefFromUnit(UnitFromId(185)), RegionFromId(71), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ2, UnitRefFromUnit(UnitFromId(108)), RegionFromId(71), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ2, UnitRefFromUnit(UnitFromId(175)), RegionFromId(71), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ2, UnitRefFromUnit(UnitFromId(182)), RegionFromId(71), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ2, UnitRefFromUnit(UnitFromId(140)), RegionFromId(71), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ2, UnitRefFromUnit(UnitFromId(184)), RegionFromId(71), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ2, UnitRefFromUnit(UnitFromId(109)), RegionFromId(71), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ2, UnitRefFromUnit(UnitFromId(172)), RegionFromId(71), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ2, UnitRefFromUnit(UnitFromId(186)), RegionFromId(71), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGohanSSJ2, UnitRefFromUnit(UnitFromId(169)), RegionFromId(71), true);
    TriggerAddEventUnitDied(gt_SpawnEnemyGohanSSJ2, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Enemy Gotenks
//--------------------------------------------------------------------------------------------------
bool gt_SpawnEnemyGotenks_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) != 7) && (UnitCount("Sentry", 14, RegionFromId(72), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1) && (UnitGetType(EventUnit()) != "Beacon_Protoss") && ((libNtve_gf_UnitInRegion(UnitFromId(104), RegionFromId(72)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(173), RegionFromId(72)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(179), RegionFromId(72)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(174), RegionFromId(72)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(141), RegionFromId(72)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(167), RegionFromId(72)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(161), RegionFromId(72)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(105), RegionFromId(72)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(187), RegionFromId(72)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(177), RegionFromId(72)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(183), RegionFromId(72)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(171), RegionFromId(72)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(168), RegionFromId(72)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(146), RegionFromId(72)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(106), RegionFromId(72)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(178), RegionFromId(72)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(180), RegionFromId(72)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(170), RegionFromId(72)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(107), RegionFromId(72)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(176), RegionFromId(72)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(181), RegionFromId(72)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(139), RegionFromId(72)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(185), RegionFromId(72)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(108), RegionFromId(72)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(175), RegionFromId(72)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(182), RegionFromId(72)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(140), RegionFromId(72)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(184), RegionFromId(72)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(109), RegionFromId(72)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(172), RegionFromId(72)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(186), RegionFromId(72)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(169), RegionFromId(72)) == true))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "Sentry", c_unitCreateIgnorePlacement, 14, RegionGetCenter(RegionFromId(72)), UnitGetPosition(EventUnit()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnEnemyGotenks_Init () {
    gt_SpawnEnemyGotenks = TriggerCreate("gt_SpawnEnemyGotenks_Func");
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenks, UnitRefFromUnit(UnitFromId(104)), RegionFromId(72), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenks, UnitRefFromUnit(UnitFromId(173)), RegionFromId(72), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenks, UnitRefFromUnit(UnitFromId(179)), RegionFromId(72), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenks, UnitRefFromUnit(UnitFromId(174)), RegionFromId(72), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenks, UnitRefFromUnit(UnitFromId(141)), RegionFromId(72), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenks, UnitRefFromUnit(UnitFromId(167)), RegionFromId(72), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenks, UnitRefFromUnit(UnitFromId(161)), RegionFromId(72), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenks, UnitRefFromUnit(UnitFromId(105)), RegionFromId(72), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenks, UnitRefFromUnit(UnitFromId(187)), RegionFromId(72), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenks, UnitRefFromUnit(UnitFromId(177)), RegionFromId(72), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenks, UnitRefFromUnit(UnitFromId(183)), RegionFromId(72), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenks, UnitRefFromUnit(UnitFromId(171)), RegionFromId(72), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenks, UnitRefFromUnit(UnitFromId(168)), RegionFromId(72), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenks, UnitRefFromUnit(UnitFromId(146)), RegionFromId(72), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenks, UnitRefFromUnit(UnitFromId(106)), RegionFromId(72), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenks, UnitRefFromUnit(UnitFromId(178)), RegionFromId(72), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenks, UnitRefFromUnit(UnitFromId(180)), RegionFromId(72), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenks, UnitRefFromUnit(UnitFromId(170)), RegionFromId(72), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenks, UnitRefFromUnit(UnitFromId(107)), RegionFromId(72), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenks, UnitRefFromUnit(UnitFromId(176)), RegionFromId(72), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenks, UnitRefFromUnit(UnitFromId(181)), RegionFromId(72), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenks, UnitRefFromUnit(UnitFromId(139)), RegionFromId(72), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenks, UnitRefFromUnit(UnitFromId(185)), RegionFromId(72), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenks, UnitRefFromUnit(UnitFromId(108)), RegionFromId(72), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenks, UnitRefFromUnit(UnitFromId(175)), RegionFromId(72), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenks, UnitRefFromUnit(UnitFromId(182)), RegionFromId(72), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenks, UnitRefFromUnit(UnitFromId(140)), RegionFromId(72), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenks, UnitRefFromUnit(UnitFromId(184)), RegionFromId(72), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenks, UnitRefFromUnit(UnitFromId(109)), RegionFromId(72), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenks, UnitRefFromUnit(UnitFromId(172)), RegionFromId(72), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenks, UnitRefFromUnit(UnitFromId(186)), RegionFromId(72), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenks, UnitRefFromUnit(UnitFromId(169)), RegionFromId(72), true);
    TriggerAddEventUnitDied(gt_SpawnEnemyGotenks, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Enemy Goku SSJ 3
//--------------------------------------------------------------------------------------------------
bool gt_SpawnEnemyGokuSSJ3_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) != 7) && (UnitCount("Marine", 14, RegionFromId(73), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1) && (UnitGetType(EventUnit()) != "Beacon_Protoss") && ((libNtve_gf_UnitInRegion(UnitFromId(104), RegionFromId(73)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(173), RegionFromId(73)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(179), RegionFromId(73)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(174), RegionFromId(73)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(141), RegionFromId(73)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(167), RegionFromId(73)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(161), RegionFromId(73)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(105), RegionFromId(73)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(187), RegionFromId(73)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(177), RegionFromId(73)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(183), RegionFromId(73)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(171), RegionFromId(73)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(168), RegionFromId(73)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(146), RegionFromId(73)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(106), RegionFromId(73)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(178), RegionFromId(73)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(180), RegionFromId(73)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(170), RegionFromId(73)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(107), RegionFromId(73)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(176), RegionFromId(73)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(181), RegionFromId(73)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(139), RegionFromId(73)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(185), RegionFromId(73)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(108), RegionFromId(73)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(175), RegionFromId(73)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(182), RegionFromId(73)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(140), RegionFromId(73)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(184), RegionFromId(73)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(109), RegionFromId(73)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(172), RegionFromId(73)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(186), RegionFromId(73)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(169), RegionFromId(73)) == true))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "Marine", c_unitCreateIgnorePlacement, 14, RegionGetCenter(RegionFromId(73)), UnitGetPosition(EventUnit()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnEnemyGokuSSJ3_Init () {
    gt_SpawnEnemyGokuSSJ3 = TriggerCreate("gt_SpawnEnemyGokuSSJ3_Func");
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ3, UnitRefFromUnit(UnitFromId(104)), RegionFromId(73), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ3, UnitRefFromUnit(UnitFromId(173)), RegionFromId(73), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ3, UnitRefFromUnit(UnitFromId(179)), RegionFromId(73), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ3, UnitRefFromUnit(UnitFromId(174)), RegionFromId(73), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ3, UnitRefFromUnit(UnitFromId(141)), RegionFromId(73), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ3, UnitRefFromUnit(UnitFromId(167)), RegionFromId(73), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ3, UnitRefFromUnit(UnitFromId(161)), RegionFromId(73), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ3, UnitRefFromUnit(UnitFromId(105)), RegionFromId(73), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ3, UnitRefFromUnit(UnitFromId(187)), RegionFromId(73), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ3, UnitRefFromUnit(UnitFromId(177)), RegionFromId(73), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ3, UnitRefFromUnit(UnitFromId(183)), RegionFromId(73), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ3, UnitRefFromUnit(UnitFromId(171)), RegionFromId(73), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ3, UnitRefFromUnit(UnitFromId(168)), RegionFromId(73), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ3, UnitRefFromUnit(UnitFromId(146)), RegionFromId(73), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ3, UnitRefFromUnit(UnitFromId(106)), RegionFromId(73), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ3, UnitRefFromUnit(UnitFromId(178)), RegionFromId(73), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ3, UnitRefFromUnit(UnitFromId(180)), RegionFromId(73), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ3, UnitRefFromUnit(UnitFromId(170)), RegionFromId(73), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ3, UnitRefFromUnit(UnitFromId(107)), RegionFromId(73), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ3, UnitRefFromUnit(UnitFromId(176)), RegionFromId(73), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ3, UnitRefFromUnit(UnitFromId(181)), RegionFromId(73), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ3, UnitRefFromUnit(UnitFromId(139)), RegionFromId(73), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ3, UnitRefFromUnit(UnitFromId(185)), RegionFromId(73), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ3, UnitRefFromUnit(UnitFromId(108)), RegionFromId(73), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ3, UnitRefFromUnit(UnitFromId(175)), RegionFromId(73), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ3, UnitRefFromUnit(UnitFromId(182)), RegionFromId(73), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ3, UnitRefFromUnit(UnitFromId(140)), RegionFromId(73), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ3, UnitRefFromUnit(UnitFromId(184)), RegionFromId(73), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ3, UnitRefFromUnit(UnitFromId(109)), RegionFromId(73), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ3, UnitRefFromUnit(UnitFromId(172)), RegionFromId(73), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ3, UnitRefFromUnit(UnitFromId(186)), RegionFromId(73), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ3, UnitRefFromUnit(UnitFromId(169)), RegionFromId(73), true);
    TriggerAddEventUnitDied(gt_SpawnEnemyGokuSSJ3, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Enemy Majin Vegeta
//--------------------------------------------------------------------------------------------------
bool gt_SpawnEnemyMajinVegeta_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) != 7) && (UnitCount("Stalker", 14, RegionFromId(74), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1) && (UnitGetType(EventUnit()) != "Beacon_Protoss") && ((libNtve_gf_UnitInRegion(UnitFromId(104), RegionFromId(74)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(173), RegionFromId(74)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(179), RegionFromId(74)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(174), RegionFromId(74)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(141), RegionFromId(74)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(167), RegionFromId(74)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(161), RegionFromId(74)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(105), RegionFromId(74)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(187), RegionFromId(74)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(177), RegionFromId(74)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(183), RegionFromId(74)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(171), RegionFromId(74)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(168), RegionFromId(74)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(146), RegionFromId(74)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(106), RegionFromId(74)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(178), RegionFromId(74)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(180), RegionFromId(74)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(170), RegionFromId(74)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(107), RegionFromId(74)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(176), RegionFromId(74)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(181), RegionFromId(74)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(139), RegionFromId(74)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(185), RegionFromId(74)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(108), RegionFromId(74)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(175), RegionFromId(74)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(182), RegionFromId(74)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(140), RegionFromId(74)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(184), RegionFromId(74)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(109), RegionFromId(74)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(172), RegionFromId(74)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(186), RegionFromId(74)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(169), RegionFromId(74)) == true))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "Stalker", c_unitCreateIgnorePlacement, 14, RegionGetCenter(RegionFromId(74)), UnitGetPosition(EventUnit()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnEnemyMajinVegeta_Init () {
    gt_SpawnEnemyMajinVegeta = TriggerCreate("gt_SpawnEnemyMajinVegeta_Func");
    TriggerAddEventUnitRegion(gt_SpawnEnemyMajinVegeta, UnitRefFromUnit(UnitFromId(104)), RegionFromId(74), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMajinVegeta, UnitRefFromUnit(UnitFromId(173)), RegionFromId(74), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMajinVegeta, UnitRefFromUnit(UnitFromId(179)), RegionFromId(74), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMajinVegeta, UnitRefFromUnit(UnitFromId(174)), RegionFromId(74), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMajinVegeta, UnitRefFromUnit(UnitFromId(141)), RegionFromId(74), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMajinVegeta, UnitRefFromUnit(UnitFromId(167)), RegionFromId(74), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMajinVegeta, UnitRefFromUnit(UnitFromId(161)), RegionFromId(74), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMajinVegeta, UnitRefFromUnit(UnitFromId(105)), RegionFromId(74), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMajinVegeta, UnitRefFromUnit(UnitFromId(187)), RegionFromId(74), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMajinVegeta, UnitRefFromUnit(UnitFromId(177)), RegionFromId(74), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMajinVegeta, UnitRefFromUnit(UnitFromId(183)), RegionFromId(74), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMajinVegeta, UnitRefFromUnit(UnitFromId(171)), RegionFromId(74), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMajinVegeta, UnitRefFromUnit(UnitFromId(168)), RegionFromId(74), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMajinVegeta, UnitRefFromUnit(UnitFromId(146)), RegionFromId(74), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMajinVegeta, UnitRefFromUnit(UnitFromId(106)), RegionFromId(74), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMajinVegeta, UnitRefFromUnit(UnitFromId(178)), RegionFromId(74), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMajinVegeta, UnitRefFromUnit(UnitFromId(180)), RegionFromId(74), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMajinVegeta, UnitRefFromUnit(UnitFromId(170)), RegionFromId(74), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMajinVegeta, UnitRefFromUnit(UnitFromId(107)), RegionFromId(74), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMajinVegeta, UnitRefFromUnit(UnitFromId(176)), RegionFromId(74), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMajinVegeta, UnitRefFromUnit(UnitFromId(181)), RegionFromId(74), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMajinVegeta, UnitRefFromUnit(UnitFromId(139)), RegionFromId(74), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMajinVegeta, UnitRefFromUnit(UnitFromId(185)), RegionFromId(74), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMajinVegeta, UnitRefFromUnit(UnitFromId(108)), RegionFromId(74), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMajinVegeta, UnitRefFromUnit(UnitFromId(175)), RegionFromId(74), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMajinVegeta, UnitRefFromUnit(UnitFromId(182)), RegionFromId(74), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMajinVegeta, UnitRefFromUnit(UnitFromId(140)), RegionFromId(74), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMajinVegeta, UnitRefFromUnit(UnitFromId(184)), RegionFromId(74), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMajinVegeta, UnitRefFromUnit(UnitFromId(109)), RegionFromId(74), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMajinVegeta, UnitRefFromUnit(UnitFromId(172)), RegionFromId(74), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMajinVegeta, UnitRefFromUnit(UnitFromId(186)), RegionFromId(74), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMajinVegeta, UnitRefFromUnit(UnitFromId(169)), RegionFromId(74), true);
    TriggerAddEventUnitDied(gt_SpawnEnemyMajinVegeta, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Enemy Vegito
//--------------------------------------------------------------------------------------------------
bool gt_SpawnEnemyVegito_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) != 7) && (UnitCount("Hellion", 14, RegionFromId(75), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1) && (UnitGetType(EventUnit()) != "Beacon_Protoss") && ((libNtve_gf_UnitInRegion(UnitFromId(104), RegionFromId(75)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(173), RegionFromId(75)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(179), RegionFromId(75)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(174), RegionFromId(75)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(141), RegionFromId(75)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(167), RegionFromId(75)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(161), RegionFromId(75)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(105), RegionFromId(75)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(187), RegionFromId(75)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(177), RegionFromId(75)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(183), RegionFromId(75)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(171), RegionFromId(75)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(168), RegionFromId(75)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(146), RegionFromId(75)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(106), RegionFromId(75)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(178), RegionFromId(75)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(180), RegionFromId(75)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(170), RegionFromId(75)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(107), RegionFromId(75)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(176), RegionFromId(75)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(181), RegionFromId(75)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(139), RegionFromId(75)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(185), RegionFromId(75)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(108), RegionFromId(75)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(175), RegionFromId(75)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(182), RegionFromId(75)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(140), RegionFromId(75)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(184), RegionFromId(75)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(109), RegionFromId(75)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(172), RegionFromId(75)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(186), RegionFromId(75)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(169), RegionFromId(75)) == true))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "Hellion", c_unitCreateIgnorePlacement, 14, RegionGetCenter(RegionFromId(75)), UnitGetPosition(EventUnit()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnEnemyVegito_Init () {
    gt_SpawnEnemyVegito = TriggerCreate("gt_SpawnEnemyVegito_Func");
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegito, UnitRefFromUnit(UnitFromId(104)), RegionFromId(75), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegito, UnitRefFromUnit(UnitFromId(173)), RegionFromId(75), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegito, UnitRefFromUnit(UnitFromId(179)), RegionFromId(75), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegito, UnitRefFromUnit(UnitFromId(174)), RegionFromId(75), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegito, UnitRefFromUnit(UnitFromId(141)), RegionFromId(75), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegito, UnitRefFromUnit(UnitFromId(167)), RegionFromId(75), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegito, UnitRefFromUnit(UnitFromId(161)), RegionFromId(75), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegito, UnitRefFromUnit(UnitFromId(105)), RegionFromId(75), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegito, UnitRefFromUnit(UnitFromId(187)), RegionFromId(75), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegito, UnitRefFromUnit(UnitFromId(177)), RegionFromId(75), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegito, UnitRefFromUnit(UnitFromId(183)), RegionFromId(75), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegito, UnitRefFromUnit(UnitFromId(171)), RegionFromId(75), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegito, UnitRefFromUnit(UnitFromId(168)), RegionFromId(75), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegito, UnitRefFromUnit(UnitFromId(146)), RegionFromId(75), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegito, UnitRefFromUnit(UnitFromId(106)), RegionFromId(75), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegito, UnitRefFromUnit(UnitFromId(178)), RegionFromId(75), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegito, UnitRefFromUnit(UnitFromId(180)), RegionFromId(75), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegito, UnitRefFromUnit(UnitFromId(170)), RegionFromId(75), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegito, UnitRefFromUnit(UnitFromId(107)), RegionFromId(75), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegito, UnitRefFromUnit(UnitFromId(176)), RegionFromId(75), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegito, UnitRefFromUnit(UnitFromId(181)), RegionFromId(75), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegito, UnitRefFromUnit(UnitFromId(139)), RegionFromId(75), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegito, UnitRefFromUnit(UnitFromId(185)), RegionFromId(75), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegito, UnitRefFromUnit(UnitFromId(108)), RegionFromId(75), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegito, UnitRefFromUnit(UnitFromId(175)), RegionFromId(75), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegito, UnitRefFromUnit(UnitFromId(182)), RegionFromId(75), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegito, UnitRefFromUnit(UnitFromId(140)), RegionFromId(75), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegito, UnitRefFromUnit(UnitFromId(184)), RegionFromId(75), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegito, UnitRefFromUnit(UnitFromId(109)), RegionFromId(75), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegito, UnitRefFromUnit(UnitFromId(172)), RegionFromId(75), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegito, UnitRefFromUnit(UnitFromId(186)), RegionFromId(75), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegito, UnitRefFromUnit(UnitFromId(169)), RegionFromId(75), true);
    TriggerAddEventUnitDied(gt_SpawnEnemyVegito, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Enemy Piccolo Fused (Kami)
//--------------------------------------------------------------------------------------------------
bool gt_SpawnEnemyPiccoloFusedKami_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) != 7) && (UnitCount("Roach", 14, RegionFromId(76), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1) && (UnitGetType(EventUnit()) != "Beacon_Protoss") && ((libNtve_gf_UnitInRegion(UnitFromId(104), RegionFromId(76)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(173), RegionFromId(76)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(179), RegionFromId(76)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(174), RegionFromId(76)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(141), RegionFromId(76)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(167), RegionFromId(76)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(161), RegionFromId(76)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(105), RegionFromId(76)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(187), RegionFromId(76)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(177), RegionFromId(76)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(183), RegionFromId(76)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(171), RegionFromId(76)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(168), RegionFromId(76)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(146), RegionFromId(76)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(106), RegionFromId(76)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(178), RegionFromId(76)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(180), RegionFromId(76)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(170), RegionFromId(76)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(107), RegionFromId(76)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(176), RegionFromId(76)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(181), RegionFromId(76)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(139), RegionFromId(76)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(185), RegionFromId(76)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(108), RegionFromId(76)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(175), RegionFromId(76)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(182), RegionFromId(76)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(140), RegionFromId(76)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(184), RegionFromId(76)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(109), RegionFromId(76)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(172), RegionFromId(76)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(186), RegionFromId(76)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(169), RegionFromId(76)) == true))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "Roach", c_unitCreateIgnorePlacement, 14, RegionGetCenter(RegionFromId(76)), UnitGetPosition(EventUnit()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnEnemyPiccoloFusedKami_Init () {
    gt_SpawnEnemyPiccoloFusedKami = TriggerCreate("gt_SpawnEnemyPiccoloFusedKami_Func");
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedKami, UnitRefFromUnit(UnitFromId(104)), RegionFromId(76), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedKami, UnitRefFromUnit(UnitFromId(173)), RegionFromId(76), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedKami, UnitRefFromUnit(UnitFromId(179)), RegionFromId(76), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedKami, UnitRefFromUnit(UnitFromId(174)), RegionFromId(76), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedKami, UnitRefFromUnit(UnitFromId(141)), RegionFromId(76), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedKami, UnitRefFromUnit(UnitFromId(167)), RegionFromId(76), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedKami, UnitRefFromUnit(UnitFromId(161)), RegionFromId(76), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedKami, UnitRefFromUnit(UnitFromId(105)), RegionFromId(76), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedKami, UnitRefFromUnit(UnitFromId(187)), RegionFromId(76), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedKami, UnitRefFromUnit(UnitFromId(177)), RegionFromId(76), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedKami, UnitRefFromUnit(UnitFromId(183)), RegionFromId(76), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedKami, UnitRefFromUnit(UnitFromId(171)), RegionFromId(76), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedKami, UnitRefFromUnit(UnitFromId(168)), RegionFromId(76), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedKami, UnitRefFromUnit(UnitFromId(146)), RegionFromId(76), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedKami, UnitRefFromUnit(UnitFromId(106)), RegionFromId(76), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedKami, UnitRefFromUnit(UnitFromId(178)), RegionFromId(76), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedKami, UnitRefFromUnit(UnitFromId(180)), RegionFromId(76), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedKami, UnitRefFromUnit(UnitFromId(170)), RegionFromId(76), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedKami, UnitRefFromUnit(UnitFromId(107)), RegionFromId(76), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedKami, UnitRefFromUnit(UnitFromId(176)), RegionFromId(76), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedKami, UnitRefFromUnit(UnitFromId(181)), RegionFromId(76), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedKami, UnitRefFromUnit(UnitFromId(139)), RegionFromId(76), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedKami, UnitRefFromUnit(UnitFromId(185)), RegionFromId(76), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedKami, UnitRefFromUnit(UnitFromId(108)), RegionFromId(76), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedKami, UnitRefFromUnit(UnitFromId(175)), RegionFromId(76), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedKami, UnitRefFromUnit(UnitFromId(182)), RegionFromId(76), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedKami, UnitRefFromUnit(UnitFromId(140)), RegionFromId(76), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedKami, UnitRefFromUnit(UnitFromId(184)), RegionFromId(76), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedKami, UnitRefFromUnit(UnitFromId(109)), RegionFromId(76), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedKami, UnitRefFromUnit(UnitFromId(172)), RegionFromId(76), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedKami, UnitRefFromUnit(UnitFromId(186)), RegionFromId(76), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyPiccoloFusedKami, UnitRefFromUnit(UnitFromId(169)), RegionFromId(76), true);
    TriggerAddEventUnitDied(gt_SpawnEnemyPiccoloFusedKami, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Enemy Gotenks SSJ
//--------------------------------------------------------------------------------------------------
bool gt_SpawnEnemyGotenksSSJ_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) != 7) && (UnitCount("Archon", 14, RegionFromId(77), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1) && (UnitGetType(EventUnit()) != "Beacon_Protoss") && ((libNtve_gf_UnitInRegion(UnitFromId(104), RegionFromId(77)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(173), RegionFromId(77)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(179), RegionFromId(77)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(174), RegionFromId(77)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(141), RegionFromId(77)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(167), RegionFromId(77)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(161), RegionFromId(77)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(105), RegionFromId(77)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(187), RegionFromId(77)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(177), RegionFromId(77)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(183), RegionFromId(77)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(171), RegionFromId(77)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(168), RegionFromId(77)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(146), RegionFromId(77)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(106), RegionFromId(77)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(178), RegionFromId(77)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(180), RegionFromId(77)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(170), RegionFromId(77)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(107), RegionFromId(77)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(176), RegionFromId(77)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(181), RegionFromId(77)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(139), RegionFromId(77)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(185), RegionFromId(77)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(108), RegionFromId(77)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(175), RegionFromId(77)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(182), RegionFromId(77)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(140), RegionFromId(77)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(184), RegionFromId(77)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(109), RegionFromId(77)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(172), RegionFromId(77)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(186), RegionFromId(77)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(169), RegionFromId(77)) == true))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "Archon", c_unitCreateIgnorePlacement, 14, RegionGetCenter(RegionFromId(77)), UnitGetPosition(EventUnit()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnEnemyGotenksSSJ_Init () {
    gt_SpawnEnemyGotenksSSJ = TriggerCreate("gt_SpawnEnemyGotenksSSJ_Func");
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ, UnitRefFromUnit(UnitFromId(104)), RegionFromId(77), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ, UnitRefFromUnit(UnitFromId(173)), RegionFromId(77), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ, UnitRefFromUnit(UnitFromId(179)), RegionFromId(77), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ, UnitRefFromUnit(UnitFromId(174)), RegionFromId(77), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ, UnitRefFromUnit(UnitFromId(141)), RegionFromId(77), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ, UnitRefFromUnit(UnitFromId(167)), RegionFromId(77), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ, UnitRefFromUnit(UnitFromId(161)), RegionFromId(77), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ, UnitRefFromUnit(UnitFromId(105)), RegionFromId(77), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ, UnitRefFromUnit(UnitFromId(187)), RegionFromId(77), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ, UnitRefFromUnit(UnitFromId(177)), RegionFromId(77), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ, UnitRefFromUnit(UnitFromId(183)), RegionFromId(77), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ, UnitRefFromUnit(UnitFromId(171)), RegionFromId(77), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ, UnitRefFromUnit(UnitFromId(168)), RegionFromId(77), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ, UnitRefFromUnit(UnitFromId(146)), RegionFromId(77), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ, UnitRefFromUnit(UnitFromId(106)), RegionFromId(77), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ, UnitRefFromUnit(UnitFromId(178)), RegionFromId(77), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ, UnitRefFromUnit(UnitFromId(180)), RegionFromId(77), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ, UnitRefFromUnit(UnitFromId(170)), RegionFromId(77), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ, UnitRefFromUnit(UnitFromId(107)), RegionFromId(77), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ, UnitRefFromUnit(UnitFromId(176)), RegionFromId(77), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ, UnitRefFromUnit(UnitFromId(181)), RegionFromId(77), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ, UnitRefFromUnit(UnitFromId(139)), RegionFromId(77), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ, UnitRefFromUnit(UnitFromId(185)), RegionFromId(77), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ, UnitRefFromUnit(UnitFromId(108)), RegionFromId(77), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ, UnitRefFromUnit(UnitFromId(175)), RegionFromId(77), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ, UnitRefFromUnit(UnitFromId(182)), RegionFromId(77), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ, UnitRefFromUnit(UnitFromId(140)), RegionFromId(77), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ, UnitRefFromUnit(UnitFromId(184)), RegionFromId(77), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ, UnitRefFromUnit(UnitFromId(109)), RegionFromId(77), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ, UnitRefFromUnit(UnitFromId(172)), RegionFromId(77), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ, UnitRefFromUnit(UnitFromId(186)), RegionFromId(77), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ, UnitRefFromUnit(UnitFromId(169)), RegionFromId(77), true);
    TriggerAddEventUnitDied(gt_SpawnEnemyGotenksSSJ, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Enemy Evil King Piccolo
//--------------------------------------------------------------------------------------------------
bool gt_SpawnEnemyEvilKingPiccolo_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) != 7) && (UnitCount("Hydralisk", 14, RegionFromId(82), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1) && (UnitGetType(EventUnit()) != "Beacon_Protoss") && ((libNtve_gf_UnitInRegion(UnitFromId(104), RegionFromId(82)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(173), RegionFromId(82)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(179), RegionFromId(82)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(174), RegionFromId(82)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(141), RegionFromId(82)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(167), RegionFromId(82)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(161), RegionFromId(82)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(105), RegionFromId(82)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(187), RegionFromId(82)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(177), RegionFromId(82)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(183), RegionFromId(82)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(171), RegionFromId(82)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(168), RegionFromId(82)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(146), RegionFromId(82)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(106), RegionFromId(82)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(178), RegionFromId(82)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(180), RegionFromId(82)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(170), RegionFromId(82)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(107), RegionFromId(82)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(176), RegionFromId(82)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(181), RegionFromId(82)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(139), RegionFromId(82)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(185), RegionFromId(82)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(108), RegionFromId(82)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(175), RegionFromId(82)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(182), RegionFromId(82)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(140), RegionFromId(82)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(184), RegionFromId(82)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(109), RegionFromId(82)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(172), RegionFromId(82)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(186), RegionFromId(82)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(169), RegionFromId(82)) == true))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "Hydralisk", c_unitCreateIgnorePlacement, 14, RegionGetCenter(RegionFromId(82)), UnitGetPosition(EventUnit()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnEnemyEvilKingPiccolo_Init () {
    gt_SpawnEnemyEvilKingPiccolo = TriggerCreate("gt_SpawnEnemyEvilKingPiccolo_Func");
    TriggerAddEventUnitRegion(gt_SpawnEnemyEvilKingPiccolo, UnitRefFromUnit(UnitFromId(104)), RegionFromId(82), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyEvilKingPiccolo, UnitRefFromUnit(UnitFromId(173)), RegionFromId(82), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyEvilKingPiccolo, UnitRefFromUnit(UnitFromId(179)), RegionFromId(82), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyEvilKingPiccolo, UnitRefFromUnit(UnitFromId(174)), RegionFromId(82), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyEvilKingPiccolo, UnitRefFromUnit(UnitFromId(141)), RegionFromId(82), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyEvilKingPiccolo, UnitRefFromUnit(UnitFromId(167)), RegionFromId(82), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyEvilKingPiccolo, UnitRefFromUnit(UnitFromId(161)), RegionFromId(82), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyEvilKingPiccolo, UnitRefFromUnit(UnitFromId(105)), RegionFromId(82), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyEvilKingPiccolo, UnitRefFromUnit(UnitFromId(187)), RegionFromId(82), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyEvilKingPiccolo, UnitRefFromUnit(UnitFromId(177)), RegionFromId(82), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyEvilKingPiccolo, UnitRefFromUnit(UnitFromId(183)), RegionFromId(82), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyEvilKingPiccolo, UnitRefFromUnit(UnitFromId(171)), RegionFromId(82), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyEvilKingPiccolo, UnitRefFromUnit(UnitFromId(168)), RegionFromId(82), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyEvilKingPiccolo, UnitRefFromUnit(UnitFromId(146)), RegionFromId(82), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyEvilKingPiccolo, UnitRefFromUnit(UnitFromId(106)), RegionFromId(82), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyEvilKingPiccolo, UnitRefFromUnit(UnitFromId(178)), RegionFromId(82), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyEvilKingPiccolo, UnitRefFromUnit(UnitFromId(180)), RegionFromId(82), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyEvilKingPiccolo, UnitRefFromUnit(UnitFromId(170)), RegionFromId(82), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyEvilKingPiccolo, UnitRefFromUnit(UnitFromId(107)), RegionFromId(82), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyEvilKingPiccolo, UnitRefFromUnit(UnitFromId(176)), RegionFromId(82), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyEvilKingPiccolo, UnitRefFromUnit(UnitFromId(181)), RegionFromId(82), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyEvilKingPiccolo, UnitRefFromUnit(UnitFromId(139)), RegionFromId(82), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyEvilKingPiccolo, UnitRefFromUnit(UnitFromId(185)), RegionFromId(82), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyEvilKingPiccolo, UnitRefFromUnit(UnitFromId(108)), RegionFromId(82), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyEvilKingPiccolo, UnitRefFromUnit(UnitFromId(175)), RegionFromId(82), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyEvilKingPiccolo, UnitRefFromUnit(UnitFromId(182)), RegionFromId(82), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyEvilKingPiccolo, UnitRefFromUnit(UnitFromId(140)), RegionFromId(82), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyEvilKingPiccolo, UnitRefFromUnit(UnitFromId(184)), RegionFromId(82), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyEvilKingPiccolo, UnitRefFromUnit(UnitFromId(109)), RegionFromId(82), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyEvilKingPiccolo, UnitRefFromUnit(UnitFromId(172)), RegionFromId(82), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyEvilKingPiccolo, UnitRefFromUnit(UnitFromId(186)), RegionFromId(82), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyEvilKingPiccolo, UnitRefFromUnit(UnitFromId(169)), RegionFromId(82), true);
    TriggerAddEventUnitDied(gt_SpawnEnemyEvilKingPiccolo, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Enemy Mystic Gohan
//--------------------------------------------------------------------------------------------------
bool gt_SpawnEnemyMysticGohan_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) != 7) && (UnitCount("HunterKiller", 14, RegionFromId(78), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1) && (UnitGetType(EventUnit()) != "Beacon_Protoss") && ((libNtve_gf_UnitInRegion(UnitFromId(104), RegionFromId(78)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(173), RegionFromId(78)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(179), RegionFromId(78)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(174), RegionFromId(78)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(141), RegionFromId(78)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(167), RegionFromId(78)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(161), RegionFromId(78)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(105), RegionFromId(78)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(187), RegionFromId(78)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(177), RegionFromId(78)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(183), RegionFromId(78)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(171), RegionFromId(78)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(168), RegionFromId(78)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(146), RegionFromId(78)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(106), RegionFromId(78)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(178), RegionFromId(78)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(180), RegionFromId(78)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(170), RegionFromId(78)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(107), RegionFromId(78)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(176), RegionFromId(78)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(181), RegionFromId(78)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(139), RegionFromId(78)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(185), RegionFromId(78)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(108), RegionFromId(78)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(175), RegionFromId(78)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(182), RegionFromId(78)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(140), RegionFromId(78)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(184), RegionFromId(78)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(109), RegionFromId(78)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(172), RegionFromId(78)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(186), RegionFromId(78)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(169), RegionFromId(78)) == true))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "HunterKiller", c_unitCreateIgnorePlacement, 14, RegionGetCenter(RegionFromId(78)), UnitGetPosition(EventUnit()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnEnemyMysticGohan_Init () {
    gt_SpawnEnemyMysticGohan = TriggerCreate("gt_SpawnEnemyMysticGohan_Func");
    TriggerAddEventUnitRegion(gt_SpawnEnemyMysticGohan, UnitRefFromUnit(UnitFromId(104)), RegionFromId(78), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMysticGohan, UnitRefFromUnit(UnitFromId(173)), RegionFromId(78), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMysticGohan, UnitRefFromUnit(UnitFromId(179)), RegionFromId(78), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMysticGohan, UnitRefFromUnit(UnitFromId(174)), RegionFromId(78), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMysticGohan, UnitRefFromUnit(UnitFromId(141)), RegionFromId(78), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMysticGohan, UnitRefFromUnit(UnitFromId(167)), RegionFromId(78), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMysticGohan, UnitRefFromUnit(UnitFromId(161)), RegionFromId(78), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMysticGohan, UnitRefFromUnit(UnitFromId(105)), RegionFromId(78), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMysticGohan, UnitRefFromUnit(UnitFromId(187)), RegionFromId(78), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMysticGohan, UnitRefFromUnit(UnitFromId(177)), RegionFromId(78), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMysticGohan, UnitRefFromUnit(UnitFromId(183)), RegionFromId(78), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMysticGohan, UnitRefFromUnit(UnitFromId(171)), RegionFromId(78), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMysticGohan, UnitRefFromUnit(UnitFromId(168)), RegionFromId(78), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMysticGohan, UnitRefFromUnit(UnitFromId(146)), RegionFromId(78), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMysticGohan, UnitRefFromUnit(UnitFromId(106)), RegionFromId(78), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMysticGohan, UnitRefFromUnit(UnitFromId(178)), RegionFromId(78), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMysticGohan, UnitRefFromUnit(UnitFromId(180)), RegionFromId(78), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMysticGohan, UnitRefFromUnit(UnitFromId(170)), RegionFromId(78), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMysticGohan, UnitRefFromUnit(UnitFromId(107)), RegionFromId(78), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMysticGohan, UnitRefFromUnit(UnitFromId(176)), RegionFromId(78), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMysticGohan, UnitRefFromUnit(UnitFromId(181)), RegionFromId(78), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMysticGohan, UnitRefFromUnit(UnitFromId(139)), RegionFromId(78), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMysticGohan, UnitRefFromUnit(UnitFromId(185)), RegionFromId(78), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMysticGohan, UnitRefFromUnit(UnitFromId(108)), RegionFromId(78), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMysticGohan, UnitRefFromUnit(UnitFromId(175)), RegionFromId(78), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMysticGohan, UnitRefFromUnit(UnitFromId(182)), RegionFromId(78), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMysticGohan, UnitRefFromUnit(UnitFromId(140)), RegionFromId(78), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMysticGohan, UnitRefFromUnit(UnitFromId(184)), RegionFromId(78), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMysticGohan, UnitRefFromUnit(UnitFromId(109)), RegionFromId(78), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMysticGohan, UnitRefFromUnit(UnitFromId(172)), RegionFromId(78), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMysticGohan, UnitRefFromUnit(UnitFromId(186)), RegionFromId(78), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyMysticGohan, UnitRefFromUnit(UnitFromId(169)), RegionFromId(78), true);
    TriggerAddEventUnitDied(gt_SpawnEnemyMysticGohan, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Enemy Gotenks SSJ 3
//--------------------------------------------------------------------------------------------------
bool gt_SpawnEnemyGotenksSSJ3_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) != 7) && (UnitCount("StoneZealot", 14, RegionFromId(79), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1) && (UnitGetType(EventUnit()) != "Beacon_Protoss") && ((libNtve_gf_UnitInRegion(UnitFromId(104), RegionFromId(79)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(173), RegionFromId(79)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(179), RegionFromId(79)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(174), RegionFromId(79)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(141), RegionFromId(79)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(167), RegionFromId(79)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(161), RegionFromId(79)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(105), RegionFromId(79)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(187), RegionFromId(79)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(177), RegionFromId(79)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(183), RegionFromId(79)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(171), RegionFromId(79)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(168), RegionFromId(79)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(146), RegionFromId(79)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(106), RegionFromId(79)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(178), RegionFromId(79)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(180), RegionFromId(79)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(170), RegionFromId(79)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(107), RegionFromId(79)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(176), RegionFromId(79)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(181), RegionFromId(79)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(139), RegionFromId(79)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(185), RegionFromId(79)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(108), RegionFromId(79)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(175), RegionFromId(79)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(182), RegionFromId(79)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(140), RegionFromId(79)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(184), RegionFromId(79)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(109), RegionFromId(79)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(172), RegionFromId(79)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(186), RegionFromId(79)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(169), RegionFromId(79)) == true))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "StoneZealot", c_unitCreateIgnorePlacement, 14, RegionGetCenter(RegionFromId(79)), UnitGetPosition(EventUnit()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnEnemyGotenksSSJ3_Init () {
    gt_SpawnEnemyGotenksSSJ3 = TriggerCreate("gt_SpawnEnemyGotenksSSJ3_Func");
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ3, UnitRefFromUnit(UnitFromId(104)), RegionFromId(79), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ3, UnitRefFromUnit(UnitFromId(173)), RegionFromId(79), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ3, UnitRefFromUnit(UnitFromId(179)), RegionFromId(79), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ3, UnitRefFromUnit(UnitFromId(174)), RegionFromId(79), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ3, UnitRefFromUnit(UnitFromId(141)), RegionFromId(79), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ3, UnitRefFromUnit(UnitFromId(167)), RegionFromId(79), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ3, UnitRefFromUnit(UnitFromId(161)), RegionFromId(79), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ3, UnitRefFromUnit(UnitFromId(105)), RegionFromId(79), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ3, UnitRefFromUnit(UnitFromId(187)), RegionFromId(79), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ3, UnitRefFromUnit(UnitFromId(177)), RegionFromId(79), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ3, UnitRefFromUnit(UnitFromId(183)), RegionFromId(79), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ3, UnitRefFromUnit(UnitFromId(171)), RegionFromId(79), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ3, UnitRefFromUnit(UnitFromId(168)), RegionFromId(79), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ3, UnitRefFromUnit(UnitFromId(146)), RegionFromId(79), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ3, UnitRefFromUnit(UnitFromId(106)), RegionFromId(79), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ3, UnitRefFromUnit(UnitFromId(178)), RegionFromId(79), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ3, UnitRefFromUnit(UnitFromId(180)), RegionFromId(79), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ3, UnitRefFromUnit(UnitFromId(170)), RegionFromId(79), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ3, UnitRefFromUnit(UnitFromId(107)), RegionFromId(79), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ3, UnitRefFromUnit(UnitFromId(176)), RegionFromId(79), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ3, UnitRefFromUnit(UnitFromId(181)), RegionFromId(79), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ3, UnitRefFromUnit(UnitFromId(139)), RegionFromId(79), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ3, UnitRefFromUnit(UnitFromId(185)), RegionFromId(79), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ3, UnitRefFromUnit(UnitFromId(108)), RegionFromId(79), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ3, UnitRefFromUnit(UnitFromId(175)), RegionFromId(79), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ3, UnitRefFromUnit(UnitFromId(182)), RegionFromId(79), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ3, UnitRefFromUnit(UnitFromId(140)), RegionFromId(79), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ3, UnitRefFromUnit(UnitFromId(184)), RegionFromId(79), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ3, UnitRefFromUnit(UnitFromId(109)), RegionFromId(79), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ3, UnitRefFromUnit(UnitFromId(172)), RegionFromId(79), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ3, UnitRefFromUnit(UnitFromId(186)), RegionFromId(79), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGotenksSSJ3, UnitRefFromUnit(UnitFromId(169)), RegionFromId(79), true);
    TriggerAddEventUnitDied(gt_SpawnEnemyGotenksSSJ3, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Enemy Super Vegito
//--------------------------------------------------------------------------------------------------
bool gt_SpawnEnemySuperVegito_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) != 7) && (UnitCount("Goliath", 14, RegionFromId(80), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1) && (UnitGetType(EventUnit()) != "Beacon_Protoss") && ((libNtve_gf_UnitInRegion(UnitFromId(104), RegionFromId(80)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(173), RegionFromId(80)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(179), RegionFromId(80)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(174), RegionFromId(80)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(141), RegionFromId(80)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(167), RegionFromId(80)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(161), RegionFromId(80)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(105), RegionFromId(80)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(187), RegionFromId(80)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(177), RegionFromId(80)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(183), RegionFromId(80)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(171), RegionFromId(80)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(168), RegionFromId(80)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(146), RegionFromId(80)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(106), RegionFromId(80)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(178), RegionFromId(80)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(180), RegionFromId(80)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(170), RegionFromId(80)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(107), RegionFromId(80)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(176), RegionFromId(80)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(181), RegionFromId(80)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(139), RegionFromId(80)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(185), RegionFromId(80)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(108), RegionFromId(80)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(175), RegionFromId(80)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(182), RegionFromId(80)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(140), RegionFromId(80)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(184), RegionFromId(80)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(109), RegionFromId(80)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(172), RegionFromId(80)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(186), RegionFromId(80)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(169), RegionFromId(80)) == true))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "Goliath", c_unitCreateIgnorePlacement, 14, RegionGetCenter(RegionFromId(80)), UnitGetPosition(EventUnit()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnEnemySuperVegito_Init () {
    gt_SpawnEnemySuperVegito = TriggerCreate("gt_SpawnEnemySuperVegito_Func");
    TriggerAddEventUnitRegion(gt_SpawnEnemySuperVegito, UnitRefFromUnit(UnitFromId(104)), RegionFromId(80), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemySuperVegito, UnitRefFromUnit(UnitFromId(173)), RegionFromId(80), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemySuperVegito, UnitRefFromUnit(UnitFromId(179)), RegionFromId(80), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemySuperVegito, UnitRefFromUnit(UnitFromId(174)), RegionFromId(80), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemySuperVegito, UnitRefFromUnit(UnitFromId(141)), RegionFromId(80), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemySuperVegito, UnitRefFromUnit(UnitFromId(167)), RegionFromId(80), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemySuperVegito, UnitRefFromUnit(UnitFromId(161)), RegionFromId(80), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemySuperVegito, UnitRefFromUnit(UnitFromId(105)), RegionFromId(80), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemySuperVegito, UnitRefFromUnit(UnitFromId(187)), RegionFromId(80), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemySuperVegito, UnitRefFromUnit(UnitFromId(177)), RegionFromId(80), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemySuperVegito, UnitRefFromUnit(UnitFromId(183)), RegionFromId(80), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemySuperVegito, UnitRefFromUnit(UnitFromId(171)), RegionFromId(80), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemySuperVegito, UnitRefFromUnit(UnitFromId(168)), RegionFromId(80), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemySuperVegito, UnitRefFromUnit(UnitFromId(146)), RegionFromId(80), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemySuperVegito, UnitRefFromUnit(UnitFromId(106)), RegionFromId(80), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemySuperVegito, UnitRefFromUnit(UnitFromId(178)), RegionFromId(80), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemySuperVegito, UnitRefFromUnit(UnitFromId(180)), RegionFromId(80), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemySuperVegito, UnitRefFromUnit(UnitFromId(170)), RegionFromId(80), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemySuperVegito, UnitRefFromUnit(UnitFromId(107)), RegionFromId(80), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemySuperVegito, UnitRefFromUnit(UnitFromId(176)), RegionFromId(80), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemySuperVegito, UnitRefFromUnit(UnitFromId(181)), RegionFromId(80), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemySuperVegito, UnitRefFromUnit(UnitFromId(139)), RegionFromId(80), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemySuperVegito, UnitRefFromUnit(UnitFromId(185)), RegionFromId(80), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemySuperVegito, UnitRefFromUnit(UnitFromId(108)), RegionFromId(80), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemySuperVegito, UnitRefFromUnit(UnitFromId(175)), RegionFromId(80), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemySuperVegito, UnitRefFromUnit(UnitFromId(182)), RegionFromId(80), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemySuperVegito, UnitRefFromUnit(UnitFromId(140)), RegionFromId(80), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemySuperVegito, UnitRefFromUnit(UnitFromId(184)), RegionFromId(80), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemySuperVegito, UnitRefFromUnit(UnitFromId(109)), RegionFromId(80), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemySuperVegito, UnitRefFromUnit(UnitFromId(172)), RegionFromId(80), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemySuperVegito, UnitRefFromUnit(UnitFromId(186)), RegionFromId(80), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemySuperVegito, UnitRefFromUnit(UnitFromId(169)), RegionFromId(80), true);
    TriggerAddEventUnitDied(gt_SpawnEnemySuperVegito, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Enemy Goku SSJ 4
//--------------------------------------------------------------------------------------------------
bool gt_SpawnEnemyGokuSSJ4_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) != 7) && (UnitCount("Banshee", 14, RegionFromId(58), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1) && (UnitGetType(EventUnit()) != "Beacon_Protoss") && ((libNtve_gf_UnitInRegion(UnitFromId(104), RegionFromId(58)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(173), RegionFromId(58)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(179), RegionFromId(58)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(174), RegionFromId(58)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(141), RegionFromId(58)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(167), RegionFromId(58)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(161), RegionFromId(58)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(105), RegionFromId(58)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(187), RegionFromId(58)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(177), RegionFromId(58)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(183), RegionFromId(58)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(171), RegionFromId(58)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(168), RegionFromId(58)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(146), RegionFromId(58)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(106), RegionFromId(58)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(178), RegionFromId(58)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(180), RegionFromId(58)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(170), RegionFromId(58)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(107), RegionFromId(58)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(176), RegionFromId(58)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(181), RegionFromId(58)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(139), RegionFromId(58)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(185), RegionFromId(58)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(108), RegionFromId(58)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(175), RegionFromId(58)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(182), RegionFromId(58)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(140), RegionFromId(58)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(184), RegionFromId(58)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(109), RegionFromId(58)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(172), RegionFromId(58)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(186), RegionFromId(58)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(169), RegionFromId(58)) == true))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "Banshee", c_unitCreateIgnorePlacement, 14, RegionGetCenter(RegionFromId(58)), UnitGetPosition(EventUnit()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnEnemyGokuSSJ4_Init () {
    gt_SpawnEnemyGokuSSJ4 = TriggerCreate("gt_SpawnEnemyGokuSSJ4_Func");
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ4, UnitRefFromUnit(UnitFromId(104)), RegionFromId(58), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ4, UnitRefFromUnit(UnitFromId(173)), RegionFromId(58), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ4, UnitRefFromUnit(UnitFromId(179)), RegionFromId(58), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ4, UnitRefFromUnit(UnitFromId(174)), RegionFromId(58), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ4, UnitRefFromUnit(UnitFromId(141)), RegionFromId(58), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ4, UnitRefFromUnit(UnitFromId(167)), RegionFromId(58), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ4, UnitRefFromUnit(UnitFromId(161)), RegionFromId(58), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ4, UnitRefFromUnit(UnitFromId(105)), RegionFromId(58), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ4, UnitRefFromUnit(UnitFromId(187)), RegionFromId(58), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ4, UnitRefFromUnit(UnitFromId(177)), RegionFromId(58), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ4, UnitRefFromUnit(UnitFromId(183)), RegionFromId(58), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ4, UnitRefFromUnit(UnitFromId(171)), RegionFromId(58), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ4, UnitRefFromUnit(UnitFromId(168)), RegionFromId(58), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ4, UnitRefFromUnit(UnitFromId(146)), RegionFromId(58), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ4, UnitRefFromUnit(UnitFromId(106)), RegionFromId(58), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ4, UnitRefFromUnit(UnitFromId(178)), RegionFromId(58), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ4, UnitRefFromUnit(UnitFromId(180)), RegionFromId(58), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ4, UnitRefFromUnit(UnitFromId(170)), RegionFromId(58), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ4, UnitRefFromUnit(UnitFromId(107)), RegionFromId(58), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ4, UnitRefFromUnit(UnitFromId(176)), RegionFromId(58), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ4, UnitRefFromUnit(UnitFromId(181)), RegionFromId(58), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ4, UnitRefFromUnit(UnitFromId(139)), RegionFromId(58), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ4, UnitRefFromUnit(UnitFromId(185)), RegionFromId(58), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ4, UnitRefFromUnit(UnitFromId(108)), RegionFromId(58), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ4, UnitRefFromUnit(UnitFromId(175)), RegionFromId(58), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ4, UnitRefFromUnit(UnitFromId(182)), RegionFromId(58), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ4, UnitRefFromUnit(UnitFromId(140)), RegionFromId(58), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ4, UnitRefFromUnit(UnitFromId(184)), RegionFromId(58), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ4, UnitRefFromUnit(UnitFromId(109)), RegionFromId(58), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ4, UnitRefFromUnit(UnitFromId(172)), RegionFromId(58), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ4, UnitRefFromUnit(UnitFromId(186)), RegionFromId(58), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyGokuSSJ4, UnitRefFromUnit(UnitFromId(169)), RegionFromId(58), true);
    TriggerAddEventUnitDied(gt_SpawnEnemyGokuSSJ4, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Enemy Vegeta SSJ 4
//--------------------------------------------------------------------------------------------------
bool gt_SpawnEnemyVegetaSSJ4_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) != 7) && (UnitCount("Immortal", 14, RegionFromId(81), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1) && (UnitGetType(EventUnit()) != "Beacon_Protoss") && ((libNtve_gf_UnitInRegion(UnitFromId(104), RegionFromId(81)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(173), RegionFromId(81)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(179), RegionFromId(81)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(174), RegionFromId(81)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(141), RegionFromId(81)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(167), RegionFromId(81)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(161), RegionFromId(81)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(105), RegionFromId(81)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(187), RegionFromId(81)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(177), RegionFromId(81)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(183), RegionFromId(81)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(171), RegionFromId(81)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(168), RegionFromId(81)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(146), RegionFromId(81)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(106), RegionFromId(81)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(178), RegionFromId(81)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(180), RegionFromId(81)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(170), RegionFromId(81)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(107), RegionFromId(81)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(176), RegionFromId(81)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(181), RegionFromId(81)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(139), RegionFromId(81)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(185), RegionFromId(81)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(108), RegionFromId(81)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(175), RegionFromId(81)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(182), RegionFromId(81)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(140), RegionFromId(81)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(184), RegionFromId(81)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(109), RegionFromId(81)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(172), RegionFromId(81)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(186), RegionFromId(81)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(169), RegionFromId(81)) == true))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "Immortal", c_unitCreateIgnorePlacement, 14, RegionGetCenter(RegionFromId(81)), UnitGetPosition(EventUnit()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnEnemyVegetaSSJ4_Init () {
    gt_SpawnEnemyVegetaSSJ4 = TriggerCreate("gt_SpawnEnemyVegetaSSJ4_Func");
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ4, UnitRefFromUnit(UnitFromId(104)), RegionFromId(81), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ4, UnitRefFromUnit(UnitFromId(173)), RegionFromId(81), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ4, UnitRefFromUnit(UnitFromId(179)), RegionFromId(81), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ4, UnitRefFromUnit(UnitFromId(174)), RegionFromId(81), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ4, UnitRefFromUnit(UnitFromId(141)), RegionFromId(81), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ4, UnitRefFromUnit(UnitFromId(167)), RegionFromId(81), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ4, UnitRefFromUnit(UnitFromId(161)), RegionFromId(81), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ4, UnitRefFromUnit(UnitFromId(105)), RegionFromId(81), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ4, UnitRefFromUnit(UnitFromId(187)), RegionFromId(81), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ4, UnitRefFromUnit(UnitFromId(177)), RegionFromId(81), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ4, UnitRefFromUnit(UnitFromId(183)), RegionFromId(81), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ4, UnitRefFromUnit(UnitFromId(171)), RegionFromId(81), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ4, UnitRefFromUnit(UnitFromId(168)), RegionFromId(81), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ4, UnitRefFromUnit(UnitFromId(146)), RegionFromId(81), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ4, UnitRefFromUnit(UnitFromId(106)), RegionFromId(81), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ4, UnitRefFromUnit(UnitFromId(178)), RegionFromId(81), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ4, UnitRefFromUnit(UnitFromId(180)), RegionFromId(81), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ4, UnitRefFromUnit(UnitFromId(170)), RegionFromId(81), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ4, UnitRefFromUnit(UnitFromId(107)), RegionFromId(81), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ4, UnitRefFromUnit(UnitFromId(176)), RegionFromId(81), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ4, UnitRefFromUnit(UnitFromId(181)), RegionFromId(81), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ4, UnitRefFromUnit(UnitFromId(139)), RegionFromId(81), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ4, UnitRefFromUnit(UnitFromId(185)), RegionFromId(81), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ4, UnitRefFromUnit(UnitFromId(108)), RegionFromId(81), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ4, UnitRefFromUnit(UnitFromId(175)), RegionFromId(81), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ4, UnitRefFromUnit(UnitFromId(182)), RegionFromId(81), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ4, UnitRefFromUnit(UnitFromId(140)), RegionFromId(81), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ4, UnitRefFromUnit(UnitFromId(184)), RegionFromId(81), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ4, UnitRefFromUnit(UnitFromId(109)), RegionFromId(81), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ4, UnitRefFromUnit(UnitFromId(172)), RegionFromId(81), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ4, UnitRefFromUnit(UnitFromId(186)), RegionFromId(81), true);
    TriggerAddEventUnitRegion(gt_SpawnEnemyVegetaSSJ4, UnitRefFromUnit(UnitFromId(169)), RegionFromId(81), true);
    TriggerAddEventUnitDied(gt_SpawnEnemyVegetaSSJ4, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Move to Basic Training
//--------------------------------------------------------------------------------------------------
bool gt_MovetoBasicTraining_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) != "Beacon_ProtossSmall"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(16)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(16)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MovetoBasicTraining_Init () {
    gt_MovetoBasicTraining = TriggerCreate("gt_MovetoBasicTraining_Func");
    TriggerAddEventUnitRangePoint(gt_MovetoBasicTraining, UnitRefFromUnit(DataTableGetUnit(true, "Goku")), RegionGetCenter(RegionFromId(5)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovetoBasicTraining, UnitRefFromUnit(DataTableGetUnit(true, "Vegeta")), RegionGetCenter(RegionFromId(5)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovetoBasicTraining, UnitRefFromUnit(DataTableGetUnit(true, "Piccolo")), RegionGetCenter(RegionFromId(5)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovetoBasicTraining, UnitRefFromUnit(DataTableGetUnit(true, "Trunks")), RegionGetCenter(RegionFromId(5)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovetoBasicTraining, UnitRefFromUnit(DataTableGetUnit(true, "Goten")), RegionGetCenter(RegionFromId(5)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovetoBasicTraining, UnitRefFromUnit(DataTableGetUnit(true, "Gohan")), RegionGetCenter(RegionFromId(5)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Move home from Basic Training
//--------------------------------------------------------------------------------------------------
bool gt_MovehomefromBasicTraining_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) != "Beacon_ProtossSmall"))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) != 14))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(21)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MovehomefromBasicTraining_Init () {
    gt_MovehomefromBasicTraining = TriggerCreate("gt_MovehomefromBasicTraining_Func");
    TriggerAddEventUnitRangePoint(gt_MovehomefromBasicTraining, UnitRefFromUnit(DataTableGetUnit(true, "Goku")), RegionGetCenter(RegionFromId(11)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovehomefromBasicTraining, UnitRefFromUnit(DataTableGetUnit(true, "Vegeta")), RegionGetCenter(RegionFromId(11)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovehomefromBasicTraining, UnitRefFromUnit(DataTableGetUnit(true, "Piccolo")), RegionGetCenter(RegionFromId(11)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovehomefromBasicTraining, UnitRefFromUnit(DataTableGetUnit(true, "Trunks")), RegionGetCenter(RegionFromId(11)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovehomefromBasicTraining, UnitRefFromUnit(DataTableGetUnit(true, "Goten")), RegionGetCenter(RegionFromId(11)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovehomefromBasicTraining, UnitRefFromUnit(DataTableGetUnit(true, "Gohan")), RegionGetCenter(RegionFromId(11)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Move to Intermediate Training
//--------------------------------------------------------------------------------------------------
bool gt_MovetoIntermediateTraining_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) != "Beacon_ProtossSmall"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(17)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(17)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MovetoIntermediateTraining_Init () {
    gt_MovetoIntermediateTraining = TriggerCreate("gt_MovetoIntermediateTraining_Func");
    TriggerAddEventUnitRangePoint(gt_MovetoIntermediateTraining, UnitRefFromUnit(DataTableGetUnit(true, "Goku")), RegionGetCenter(RegionFromId(6)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovetoIntermediateTraining, UnitRefFromUnit(DataTableGetUnit(true, "Vegeta")), RegionGetCenter(RegionFromId(6)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovetoIntermediateTraining, UnitRefFromUnit(DataTableGetUnit(true, "Piccolo")), RegionGetCenter(RegionFromId(6)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovetoIntermediateTraining, UnitRefFromUnit(DataTableGetUnit(true, "Trunks")), RegionGetCenter(RegionFromId(6)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovetoIntermediateTraining, UnitRefFromUnit(DataTableGetUnit(true, "Goten")), RegionGetCenter(RegionFromId(6)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovetoIntermediateTraining, UnitRefFromUnit(DataTableGetUnit(true, "Gohan")), RegionGetCenter(RegionFromId(6)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Move home from Intermediate  Training
//--------------------------------------------------------------------------------------------------
bool gt_MovehomefromIntermediateTraining_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) != "Beacon_ProtossSmall"))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) != 14))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(21)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MovehomefromIntermediateTraining_Init () {
    gt_MovehomefromIntermediateTraining = TriggerCreate("gt_MovehomefromIntermediateTraining_Func");
    TriggerAddEventUnitRangePoint(gt_MovehomefromIntermediateTraining, UnitRefFromUnit(DataTableGetUnit(true, "Goku")), RegionGetCenter(RegionFromId(12)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovehomefromIntermediateTraining, UnitRefFromUnit(DataTableGetUnit(true, "Vegeta")), RegionGetCenter(RegionFromId(12)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovehomefromIntermediateTraining, UnitRefFromUnit(DataTableGetUnit(true, "Piccolo")), RegionGetCenter(RegionFromId(12)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovehomefromIntermediateTraining, UnitRefFromUnit(DataTableGetUnit(true, "Trunks")), RegionGetCenter(RegionFromId(12)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovehomefromIntermediateTraining, UnitRefFromUnit(DataTableGetUnit(true, "Goten")), RegionGetCenter(RegionFromId(12)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovehomefromIntermediateTraining, UnitRefFromUnit(DataTableGetUnit(true, "Gohan")), RegionGetCenter(RegionFromId(12)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Move to Expert Training
//--------------------------------------------------------------------------------------------------
bool gt_MovetoExpertTraining_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) != "Beacon_ProtossSmall"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(18)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(18)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MovetoExpertTraining_Init () {
    gt_MovetoExpertTraining = TriggerCreate("gt_MovetoExpertTraining_Func");
    TriggerAddEventUnitRangePoint(gt_MovetoExpertTraining, UnitRefFromUnit(DataTableGetUnit(true, "Goku")), RegionGetCenter(RegionFromId(7)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovetoExpertTraining, UnitRefFromUnit(DataTableGetUnit(true, "Vegeta")), RegionGetCenter(RegionFromId(7)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovetoExpertTraining, UnitRefFromUnit(DataTableGetUnit(true, "Piccolo")), RegionGetCenter(RegionFromId(7)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovetoExpertTraining, UnitRefFromUnit(DataTableGetUnit(true, "Trunks")), RegionGetCenter(RegionFromId(7)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovetoExpertTraining, UnitRefFromUnit(DataTableGetUnit(true, "Goten")), RegionGetCenter(RegionFromId(7)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovetoExpertTraining, UnitRefFromUnit(DataTableGetUnit(true, "Gohan")), RegionGetCenter(RegionFromId(7)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Move home from Expert Training
//--------------------------------------------------------------------------------------------------
bool gt_MovehomefromExpertTraining_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) != "Beacon_ProtossSmall"))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) != 14))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(21)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MovehomefromExpertTraining_Init () {
    gt_MovehomefromExpertTraining = TriggerCreate("gt_MovehomefromExpertTraining_Func");
    TriggerAddEventUnitRangePoint(gt_MovehomefromExpertTraining, UnitRefFromUnit(DataTableGetUnit(true, "Goku")), RegionGetCenter(RegionFromId(13)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovehomefromExpertTraining, UnitRefFromUnit(DataTableGetUnit(true, "Vegeta")), RegionGetCenter(RegionFromId(13)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovehomefromExpertTraining, UnitRefFromUnit(DataTableGetUnit(true, "Piccolo")), RegionGetCenter(RegionFromId(13)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovehomefromExpertTraining, UnitRefFromUnit(DataTableGetUnit(true, "Trunks")), RegionGetCenter(RegionFromId(13)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovehomefromExpertTraining, UnitRefFromUnit(DataTableGetUnit(true, "Goten")), RegionGetCenter(RegionFromId(13)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovehomefromExpertTraining, UnitRefFromUnit(DataTableGetUnit(true, "Gohan")), RegionGetCenter(RegionFromId(13)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Move to HyperBolic Time Chamber
//--------------------------------------------------------------------------------------------------
bool gt_MovetoHyperBolicTimeChamber_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) != "Beacon_ProtossSmall"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 45000)) {
        UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(114)), false);
        UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
        libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(114)), 1.5);
    }
    else {
        if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) < 45000)) {
            UIDisplayMessage(PlayerGroupSingle(UnitGetOwner(EventUnit())), c_messageAreaSubtitle, StringExternal("Param/Value/7FADEB6B"));
        }
        else {
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MovetoHyperBolicTimeChamber_Init () {
    gt_MovetoHyperBolicTimeChamber = TriggerCreate("gt_MovetoHyperBolicTimeChamber_Func");
    TriggerAddEventUnitRegion(gt_MovetoHyperBolicTimeChamber, UnitRefFromUnit(UnitFromId(104)), RegionFromId(10), true);
    TriggerAddEventUnitRegion(gt_MovetoHyperBolicTimeChamber, UnitRefFromUnit(UnitFromId(173)), RegionFromId(10), true);
    TriggerAddEventUnitRegion(gt_MovetoHyperBolicTimeChamber, UnitRefFromUnit(UnitFromId(179)), RegionFromId(10), true);
    TriggerAddEventUnitRegion(gt_MovetoHyperBolicTimeChamber, UnitRefFromUnit(UnitFromId(174)), RegionFromId(10), true);
    TriggerAddEventUnitRegion(gt_MovetoHyperBolicTimeChamber, UnitRefFromUnit(UnitFromId(141)), RegionFromId(10), true);
    TriggerAddEventUnitRegion(gt_MovetoHyperBolicTimeChamber, UnitRefFromUnit(UnitFromId(167)), RegionFromId(10), true);
    TriggerAddEventUnitRegion(gt_MovetoHyperBolicTimeChamber, UnitRefFromUnit(UnitFromId(161)), RegionFromId(10), true);
    TriggerAddEventUnitRegion(gt_MovetoHyperBolicTimeChamber, UnitRefFromUnit(UnitFromId(106)), RegionFromId(10), true);
    TriggerAddEventUnitRegion(gt_MovetoHyperBolicTimeChamber, UnitRefFromUnit(UnitFromId(178)), RegionFromId(10), true);
    TriggerAddEventUnitRegion(gt_MovetoHyperBolicTimeChamber, UnitRefFromUnit(UnitFromId(180)), RegionFromId(10), true);
    TriggerAddEventUnitRegion(gt_MovetoHyperBolicTimeChamber, UnitRefFromUnit(UnitFromId(170)), RegionFromId(10), true);
    TriggerAddEventUnitRegion(gt_MovetoHyperBolicTimeChamber, UnitRefFromUnit(UnitFromId(107)), RegionFromId(10), true);
    TriggerAddEventUnitRegion(gt_MovetoHyperBolicTimeChamber, UnitRefFromUnit(UnitFromId(176)), RegionFromId(10), true);
    TriggerAddEventUnitRegion(gt_MovetoHyperBolicTimeChamber, UnitRefFromUnit(UnitFromId(181)), RegionFromId(10), true);
    TriggerAddEventUnitRegion(gt_MovetoHyperBolicTimeChamber, UnitRefFromUnit(UnitFromId(139)), RegionFromId(10), true);
    TriggerAddEventUnitRegion(gt_MovetoHyperBolicTimeChamber, UnitRefFromUnit(UnitFromId(185)), RegionFromId(10), true);
    TriggerAddEventUnitRegion(gt_MovetoHyperBolicTimeChamber, UnitRefFromUnit(UnitFromId(108)), RegionFromId(10), true);
    TriggerAddEventUnitRegion(gt_MovetoHyperBolicTimeChamber, UnitRefFromUnit(UnitFromId(175)), RegionFromId(10), true);
    TriggerAddEventUnitRegion(gt_MovetoHyperBolicTimeChamber, UnitRefFromUnit(UnitFromId(182)), RegionFromId(10), true);
    TriggerAddEventUnitRegion(gt_MovetoHyperBolicTimeChamber, UnitRefFromUnit(UnitFromId(140)), RegionFromId(10), true);
    TriggerAddEventUnitRegion(gt_MovetoHyperBolicTimeChamber, UnitRefFromUnit(UnitFromId(184)), RegionFromId(10), true);
    TriggerAddEventUnitRegion(gt_MovetoHyperBolicTimeChamber, UnitRefFromUnit(UnitFromId(109)), RegionFromId(10), true);
    TriggerAddEventUnitRegion(gt_MovetoHyperBolicTimeChamber, UnitRefFromUnit(UnitFromId(172)), RegionFromId(10), true);
    TriggerAddEventUnitRegion(gt_MovetoHyperBolicTimeChamber, UnitRefFromUnit(UnitFromId(186)), RegionFromId(10), true);
    TriggerAddEventUnitRegion(gt_MovetoHyperBolicTimeChamber, UnitRefFromUnit(UnitFromId(169)), RegionFromId(10), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Move to HyperBolic Time Chamber Vegeta
//--------------------------------------------------------------------------------------------------
bool gt_MovetoHyperBolicTimeChamberVegeta_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) != "Beacon_ProtossSmall"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 55000)) {
        UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(114)), false);
        UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
        libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(114)), 1.5);
    }
    else {
        if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) < 55000)) {
            UIDisplayMessage(PlayerGroupSingle(UnitGetOwner(EventUnit())), c_messageAreaSubtitle, StringExternal("Param/Value/CF171FF2"));
        }
        else {
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MovetoHyperBolicTimeChamberVegeta_Init () {
    gt_MovetoHyperBolicTimeChamberVegeta = TriggerCreate("gt_MovetoHyperBolicTimeChamberVegeta_Func");
    TriggerAddEventUnitRegion(gt_MovetoHyperBolicTimeChamberVegeta, UnitRefFromUnit(UnitFromId(105)), RegionFromId(10), true);
    TriggerAddEventUnitRegion(gt_MovetoHyperBolicTimeChamberVegeta, UnitRefFromUnit(UnitFromId(187)), RegionFromId(10), true);
    TriggerAddEventUnitRegion(gt_MovetoHyperBolicTimeChamberVegeta, UnitRefFromUnit(UnitFromId(177)), RegionFromId(10), true);
    TriggerAddEventUnitRegion(gt_MovetoHyperBolicTimeChamberVegeta, UnitRefFromUnit(UnitFromId(183)), RegionFromId(10), true);
    TriggerAddEventUnitRegion(gt_MovetoHyperBolicTimeChamberVegeta, UnitRefFromUnit(UnitFromId(171)), RegionFromId(10), true);
    TriggerAddEventUnitRegion(gt_MovetoHyperBolicTimeChamberVegeta, UnitRefFromUnit(UnitFromId(168)), RegionFromId(10), true);
    TriggerAddEventUnitRegion(gt_MovetoHyperBolicTimeChamberVegeta, UnitRefFromUnit(UnitFromId(146)), RegionFromId(10), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Move home from HyperBolic Time Chamber
//--------------------------------------------------------------------------------------------------
bool gt_MovehomefromHyperBolicTimeChamber_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) != "Beacon_Protoss"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(21)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MovehomefromHyperBolicTimeChamber_Init () {
    gt_MovehomefromHyperBolicTimeChamber = TriggerCreate("gt_MovehomefromHyperBolicTimeChamber_Func");
    TriggerAddEventUnitRangePoint(gt_MovehomefromHyperBolicTimeChamber, UnitRefFromUnit(DataTableGetUnit(true, "Goku")), RegionGetCenter(RegionFromId(112)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovehomefromHyperBolicTimeChamber, UnitRefFromUnit(DataTableGetUnit(true, "Vegeta")), RegionGetCenter(RegionFromId(112)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovehomefromHyperBolicTimeChamber, UnitRefFromUnit(DataTableGetUnit(true, "Piccolo")), RegionGetCenter(RegionFromId(112)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovehomefromHyperBolicTimeChamber, UnitRefFromUnit(DataTableGetUnit(true, "Trunks")), RegionGetCenter(RegionFromId(112)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovehomefromHyperBolicTimeChamber, UnitRefFromUnit(DataTableGetUnit(true, "Goten")), RegionGetCenter(RegionFromId(112)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovehomefromHyperBolicTimeChamber, UnitRefFromUnit(DataTableGetUnit(true, "Gohan")), RegionGetCenter(RegionFromId(112)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Make units in Hyperbolic Invulnerable Player 15
//--------------------------------------------------------------------------------------------------
bool gt_MakeunitsinHyperbolicInvulnerablePlayer15_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetAlliance(15, 14, 0);
    UnitGroupLoopBegin(UnitGroup(null, 15, RegionFromId(111), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0));
    for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
        libNtve_gf_MakeUnitInvulnerable(UnitGroupLoopCurrent(), true);
    }
    UnitGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MakeunitsinHyperbolicInvulnerablePlayer15_Init () {
    gt_MakeunitsinHyperbolicInvulnerablePlayer15 = TriggerCreate("gt_MakeunitsinHyperbolicInvulnerablePlayer15_Func");
    TriggerAddEventTimeElapsed(gt_MakeunitsinHyperbolicInvulnerablePlayer15, 0.1, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Make units in Hyperbolic Invulnerable Player 14
//--------------------------------------------------------------------------------------------------
bool gt_MakeunitsinHyperbolicInvulnerablePlayer14_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetAlliance(14, 15, 0);
    UnitGroupLoopBegin(UnitGroup(null, 14, RegionFromId(111), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0));
    for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
        libNtve_gf_MakeUnitInvulnerable(UnitGroupLoopCurrent(), true);
    }
    UnitGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MakeunitsinHyperbolicInvulnerablePlayer14_Init () {
    gt_MakeunitsinHyperbolicInvulnerablePlayer14 = TriggerCreate("gt_MakeunitsinHyperbolicInvulnerablePlayer14_Func");
    TriggerAddEventTimeElapsed(gt_MakeunitsinHyperbolicInvulnerablePlayer14, 0.1, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Get Exp in HyperBolic Time Chamber
//--------------------------------------------------------------------------------------------------
bool gt_GetExpinHyperBolicTimeChamber_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) != "SentryGunUnderground"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "SentryGun"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "AutoTurret"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "FlamingBetty"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    while (((UnitGetOwner(EventUnit()) != 15) && (UnitGetOwner(EventUnit()) != 0) && (UnitGetOwner(EventUnit()) != 7) && (libNtve_gf_UnitInRegion(EventUnit(), RegionFromId(111)) == true))) {
        PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperAdd, 100);
        BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
        Wait(1.5, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_GetExpinHyperBolicTimeChamber_Init () {
    gt_GetExpinHyperBolicTimeChamber = TriggerCreate("gt_GetExpinHyperBolicTimeChamber_Func");
    TriggerAddEventUnitRegion(gt_GetExpinHyperBolicTimeChamber, null, RegionFromId(111), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Get Bonus Exp in HyperBolic Time Chamber
//--------------------------------------------------------------------------------------------------
bool gt_GetBonusExpinHyperBolicTimeChamber_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) != "SentryGunUnderground"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "SentryGun"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "AutoTurret"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "FlamingBetty"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    while (((UnitGetOwner(EventUnit()) != 15) && (UnitGetOwner(EventUnit()) != 0) && (UnitGetOwner(EventUnit()) != 7) && (gv_hyperBolic[UnitGetOwner(EventUnit())] <= 15000) && (libNtve_gf_UnitInRegion(EventUnit(), RegionFromId(113)) == true))) {
        PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperAdd, 800);
        gv_hyperBolic[UnitGetOwner(EventUnit())] += 800;
        BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
        Wait(1.5, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_GetBonusExpinHyperBolicTimeChamber_Init () {
    gt_GetBonusExpinHyperBolicTimeChamber = TriggerCreate("gt_GetBonusExpinHyperBolicTimeChamber_Func");
    TriggerAddEventUnitRegion(gt_GetBonusExpinHyperBolicTimeChamber, null, RegionFromId(113), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Move to Weighted Training
//--------------------------------------------------------------------------------------------------
bool gt_MovetoWeightedTraining_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) != "Beacon_ProtossSmall"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 100000)) {
        UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(20)), false);
        UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
        libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(20)), 1.5);
    }
    else {
        if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) < 100000)) {
            UIDisplayMessage(PlayerGroupSingle(UnitGetOwner(EventUnit())), c_messageAreaSubtitle, StringExternal("Param/Value/93DBE308"));
        }
        else {
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MovetoWeightedTraining_Init () {
    gt_MovetoWeightedTraining = TriggerCreate("gt_MovetoWeightedTraining_Func");
    TriggerAddEventUnitRangePoint(gt_MovetoWeightedTraining, UnitRefFromUnit(UnitFromId(104)), RegionGetCenter(RegionFromId(8)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovetoWeightedTraining, UnitRefFromUnit(UnitFromId(173)), RegionGetCenter(RegionFromId(8)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovetoWeightedTraining, UnitRefFromUnit(UnitFromId(179)), RegionGetCenter(RegionFromId(8)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovetoWeightedTraining, UnitRefFromUnit(UnitFromId(174)), RegionGetCenter(RegionFromId(8)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovetoWeightedTraining, UnitRefFromUnit(UnitFromId(141)), RegionGetCenter(RegionFromId(8)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovetoWeightedTraining, UnitRefFromUnit(UnitFromId(167)), RegionGetCenter(RegionFromId(8)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovetoWeightedTraining, UnitRefFromUnit(UnitFromId(161)), RegionGetCenter(RegionFromId(8)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Move home from Weighted Training
//--------------------------------------------------------------------------------------------------
bool gt_MovehomefromWeightedTraining_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) != "Beacon_ProtossSmall"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(21)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MovehomefromWeightedTraining_Init () {
    gt_MovehomefromWeightedTraining = TriggerCreate("gt_MovehomefromWeightedTraining_Func");
    TriggerAddEventUnitRangePoint(gt_MovehomefromWeightedTraining, UnitRefFromUnit(DataTableGetUnit(true, "Goku")), RegionGetCenter(RegionFromId(15)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: 1Ton Training
//--------------------------------------------------------------------------------------------------
bool gt__1TonTraining_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    if (((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 100000) && (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) <= 109999))) {
        UnitSetOwner(EventUnit(), 7, true);
        UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(651)), c_orderQueueReplace);
        Wait(7.5, c_timeGame);
        UnitSetOwner(EventUnit(), UnitGetOwner(UnitFromId(229)), true);
        PlayerModifyPropertyInt(UnitGetOwner(UnitFromId(229)), c_playerPropVespene, c_playerPropOperAdd, 1000);
        BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(UnitFromId(229)), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(UnitGetOwner(EventUnit())), c_messageAreaSubtitle, StringExternal("Param/Value/055D3C9F"));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt__1TonTraining_Init () {
    gt__1TonTraining = TriggerCreate("gt__1TonTraining_Func");
    TriggerAddEventUnitRangePoint(gt__1TonTraining, UnitRefFromUnit(UnitFromId(104)), RegionGetCenter(RegionFromId(144)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt__1TonTraining, UnitRefFromUnit(UnitFromId(173)), RegionGetCenter(RegionFromId(144)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt__1TonTraining, UnitRefFromUnit(UnitFromId(179)), RegionGetCenter(RegionFromId(144)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt__1TonTraining, UnitRefFromUnit(UnitFromId(174)), RegionGetCenter(RegionFromId(144)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt__1TonTraining, UnitRefFromUnit(UnitFromId(141)), RegionGetCenter(RegionFromId(144)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt__1TonTraining, UnitRefFromUnit(UnitFromId(167)), RegionGetCenter(RegionFromId(144)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt__1TonTraining, UnitRefFromUnit(UnitFromId(161)), RegionGetCenter(RegionFromId(144)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: 3Ton Training
//--------------------------------------------------------------------------------------------------
bool gt__3TonTraining_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    if (((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 110000) && (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) <= 124999))) {
        UnitSetOwner(EventUnit(), 7, true);
        UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(652)), c_orderQueueReplace);
        Wait(15.0, c_timeGame);
        UnitSetOwner(EventUnit(), UnitGetOwner(UnitFromId(229)), true);
        PlayerModifyPropertyInt(UnitGetOwner(UnitFromId(229)), c_playerPropVespene, c_playerPropOperAdd, 2500);
        BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(UnitFromId(229)), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(UnitGetOwner(EventUnit())), c_messageAreaSubtitle, StringExternal("Param/Value/4AB42E15"));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt__3TonTraining_Init () {
    gt__3TonTraining = TriggerCreate("gt__3TonTraining_Func");
    TriggerAddEventUnitRangePoint(gt__3TonTraining, UnitRefFromUnit(UnitFromId(104)), RegionGetCenter(RegionFromId(145)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt__3TonTraining, UnitRefFromUnit(UnitFromId(173)), RegionGetCenter(RegionFromId(145)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt__3TonTraining, UnitRefFromUnit(UnitFromId(179)), RegionGetCenter(RegionFromId(145)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt__3TonTraining, UnitRefFromUnit(UnitFromId(174)), RegionGetCenter(RegionFromId(145)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt__3TonTraining, UnitRefFromUnit(UnitFromId(141)), RegionGetCenter(RegionFromId(145)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt__3TonTraining, UnitRefFromUnit(UnitFromId(167)), RegionGetCenter(RegionFromId(145)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt__3TonTraining, UnitRefFromUnit(UnitFromId(161)), RegionGetCenter(RegionFromId(145)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: 5Ton Training
//--------------------------------------------------------------------------------------------------
bool gt__5TonTraining_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    if (((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 125000) && (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) <= 149999))) {
        UnitSetOwner(EventUnit(), 7, true);
        UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(653)), c_orderQueueReplace);
        Wait(30.0, c_timeGame);
        UnitSetOwner(EventUnit(), UnitGetOwner(UnitFromId(229)), true);
        PlayerModifyPropertyInt(UnitGetOwner(UnitFromId(229)), c_playerPropVespene, c_playerPropOperAdd, 5000);
        BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(UnitFromId(229)), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(UnitGetOwner(EventUnit())), c_messageAreaSubtitle, StringExternal("Param/Value/A8E49CB5"));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt__5TonTraining_Init () {
    gt__5TonTraining = TriggerCreate("gt__5TonTraining_Func");
    TriggerAddEventUnitRangePoint(gt__5TonTraining, UnitRefFromUnit(UnitFromId(104)), RegionGetCenter(RegionFromId(146)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt__5TonTraining, UnitRefFromUnit(UnitFromId(173)), RegionGetCenter(RegionFromId(146)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt__5TonTraining, UnitRefFromUnit(UnitFromId(179)), RegionGetCenter(RegionFromId(146)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt__5TonTraining, UnitRefFromUnit(UnitFromId(174)), RegionGetCenter(RegionFromId(146)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt__5TonTraining, UnitRefFromUnit(UnitFromId(141)), RegionGetCenter(RegionFromId(146)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt__5TonTraining, UnitRefFromUnit(UnitFromId(167)), RegionGetCenter(RegionFromId(146)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt__5TonTraining, UnitRefFromUnit(UnitFromId(161)), RegionGetCenter(RegionFromId(146)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: 10Ton Training
//--------------------------------------------------------------------------------------------------
bool gt__10TonTraining_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    if (((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 150000) && (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) <= 199999))) {
        UnitSetOwner(EventUnit(), 7, true);
        UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(654)), c_orderQueueReplace);
        Wait(45.0, c_timeGame);
        UnitSetOwner(EventUnit(), UnitGetOwner(UnitFromId(229)), true);
        PlayerModifyPropertyInt(UnitGetOwner(UnitFromId(229)), c_playerPropVespene, c_playerPropOperAdd, 7500);
        BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(UnitFromId(229)), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    }
    else {
        UIDisplayMessage(PlayerGroupSingle(UnitGetOwner(EventUnit())), c_messageAreaSubtitle, StringExternal("Param/Value/D7E757E5"));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt__10TonTraining_Init () {
    gt__10TonTraining = TriggerCreate("gt__10TonTraining_Func");
    TriggerAddEventUnitRangePoint(gt__10TonTraining, UnitRefFromUnit(UnitFromId(104)), RegionGetCenter(RegionFromId(147)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt__10TonTraining, UnitRefFromUnit(UnitFromId(173)), RegionGetCenter(RegionFromId(147)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt__10TonTraining, UnitRefFromUnit(UnitFromId(179)), RegionGetCenter(RegionFromId(147)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt__10TonTraining, UnitRefFromUnit(UnitFromId(174)), RegionGetCenter(RegionFromId(147)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt__10TonTraining, UnitRefFromUnit(UnitFromId(141)), RegionGetCenter(RegionFromId(147)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt__10TonTraining, UnitRefFromUnit(UnitFromId(167)), RegionGetCenter(RegionFromId(147)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt__10TonTraining, UnitRefFromUnit(UnitFromId(161)), RegionGetCenter(RegionFromId(147)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Travel to Mystic training
//--------------------------------------------------------------------------------------------------
bool gt_TraveltoMystictraining_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) != "Beacon_ProtossSmall"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 300000)) {
        UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(142)), false);
        UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
        libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(142)), 1.5);
    }
    else {
        if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) < 300000)) {
            UIDisplayMessage(PlayerGroupSingle(UnitGetOwner(EventUnit())), c_messageAreaSubtitle, StringExternal("Param/Value/9ECBC3A3"));
        }
        else {
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TraveltoMystictraining_Init () {
    gt_TraveltoMystictraining = TriggerCreate("gt_TraveltoMystictraining_Func");
    TriggerAddEventUnitRegion(gt_TraveltoMystictraining, UnitRefFromUnit(UnitFromId(109)), RegionFromId(141), true);
    TriggerAddEventUnitRegion(gt_TraveltoMystictraining, UnitRefFromUnit(UnitFromId(172)), RegionFromId(141), true);
    TriggerAddEventUnitRegion(gt_TraveltoMystictraining, UnitRefFromUnit(UnitFromId(186)), RegionFromId(141), true);
    TriggerAddEventUnitRegion(gt_TraveltoMystictraining, UnitRefFromUnit(UnitFromId(169)), RegionFromId(45), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Home from Mystic
//--------------------------------------------------------------------------------------------------
bool gt_HomefromMystic_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) != 0))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) != 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(21)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HomefromMystic_Init () {
    gt_HomefromMystic = TriggerCreate("gt_HomefromMystic_Func");
    TriggerAddEventUnitRegion(gt_HomefromMystic, null, RegionFromId(140), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Spawn Units in Mystic Training
//--------------------------------------------------------------------------------------------------
bool gt_SpawnUnitsinMysticTraining_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) != 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    while ((libNtve_gf_UnitInRegion(EventUnit(), RegionFromId(139)) == true)) {
        UnitCreate(5, "SpiderMineBurrowed", 0, 15, UnitGetPosition(EventUnit()), 270.0);
        Wait(1.5, c_timeReal);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpawnUnitsinMysticTraining_Init () {
    gt_SpawnUnitsinMysticTraining = TriggerCreate("gt_SpawnUnitsinMysticTraining_Func");
    TriggerAddEventUnitRegion(gt_SpawnUnitsinMysticTraining, UnitRefFromUnit(UnitFromId(109)), RegionFromId(139), true);
    TriggerAddEventUnitRegion(gt_SpawnUnitsinMysticTraining, UnitRefFromUnit(UnitFromId(172)), RegionFromId(139), true);
    TriggerAddEventUnitRegion(gt_SpawnUnitsinMysticTraining, UnitRefFromUnit(UnitFromId(186)), RegionFromId(139), true);
    TriggerAddEventUnitRegion(gt_SpawnUnitsinMysticTraining, UnitRefFromUnit(UnitFromId(169)), RegionFromId(139), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Make it harder to kill Old Kai
//--------------------------------------------------------------------------------------------------
bool gt_MakeithardertokillOldKai_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) != 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libNtve_gf_UnitInRegion(EventUnit(), RegionFromId(139)) == true)) {
        libNtve_gf_MakeUnitInvulnerable(UnitFromId(647), true);
        Wait(3.0, c_timeReal);
        libNtve_gf_MakeUnitInvulnerable(UnitFromId(647), false);
        Wait(3.0, c_timeReal);
    }
    else {
    }
    TriggerExecute(TriggerGetCurrent(), true, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MakeithardertokillOldKai_Init () {
    gt_MakeithardertokillOldKai = TriggerCreate("gt_MakeithardertokillOldKai_Func");
    TriggerAddEventUnitRegion(gt_MakeithardertokillOldKai, UnitRefFromUnit(UnitFromId(109)), RegionFromId(139), true);
    TriggerAddEventUnitRegion(gt_MakeithardertokillOldKai, UnitRefFromUnit(UnitFromId(172)), RegionFromId(139), true);
    TriggerAddEventUnitRegion(gt_MakeithardertokillOldKai, UnitRefFromUnit(UnitFromId(186)), RegionFromId(139), true);
    TriggerAddEventUnitRegion(gt_MakeithardertokillOldKai, UnitRefFromUnit(UnitFromId(169)), RegionFromId(139), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Get Exp in Mystic Training
//--------------------------------------------------------------------------------------------------
bool gt_GetExpinMysticTraining_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) != "SpineCrawler"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "SpiderMineBurrowed"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "SpiderMine"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    while (((UnitGetOwner(EventUnit()) != 15) && (UnitGetOwner(EventUnit()) != 0) && (UnitGetOwner(EventUnit()) != 7) && (libNtve_gf_UnitInRegion(EventUnit(), RegionFromId(139)) == true))) {
        PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperAdd, 150);
        BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_GetExpinMysticTraining_Init () {
    gt_GetExpinMysticTraining = TriggerCreate("gt_GetExpinMysticTraining_Func");
    TriggerAddEventUnitRegion(gt_GetExpinMysticTraining, null, RegionFromId(139), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Move to Fusion Training
//--------------------------------------------------------------------------------------------------
bool gt_MovetoFusionTraining_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) != "Beacon_ProtossSmall"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 150000)) {
        UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(19)), false);
        UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
        libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(19)), 1.5);
    }
    else {
        if ((PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) < 150000)) {
            UIDisplayMessage(PlayerGroupSingle(UnitGetOwner(EventUnit())), c_messageAreaSubtitle, StringExternal("Param/Value/DD24EC67"));
        }
        else {
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MovetoFusionTraining_Init () {
    gt_MovetoFusionTraining = TriggerCreate("gt_MovetoFusionTraining_Func");
    TriggerAddEventUnitRangePoint(gt_MovetoFusionTraining, UnitRefFromUnit(UnitFromId(107)), RegionGetCenter(RegionFromId(9)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovetoFusionTraining, UnitRefFromUnit(UnitFromId(176)), RegionGetCenter(RegionFromId(9)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovetoFusionTraining, UnitRefFromUnit(UnitFromId(182)), RegionGetCenter(RegionFromId(9)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovetoFusionTraining, UnitRefFromUnit(UnitFromId(139)), RegionGetCenter(RegionFromId(9)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovetoFusionTraining, UnitRefFromUnit(UnitFromId(185)), RegionGetCenter(RegionFromId(9)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovetoFusionTraining, UnitRefFromUnit(UnitFromId(108)), RegionGetCenter(RegionFromId(9)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovetoFusionTraining, UnitRefFromUnit(UnitFromId(175)), RegionGetCenter(RegionFromId(9)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovetoFusionTraining, UnitRefFromUnit(UnitFromId(181)), RegionGetCenter(RegionFromId(9)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovetoFusionTraining, UnitRefFromUnit(UnitFromId(140)), RegionGetCenter(RegionFromId(9)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovetoFusionTraining, UnitRefFromUnit(UnitFromId(184)), RegionGetCenter(RegionFromId(9)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Move home from Fusion Training
//--------------------------------------------------------------------------------------------------
bool gt_MovehomefromFusionTraining_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) != "Beacon_ProtossSmall"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(21)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MovehomefromFusionTraining_Init () {
    gt_MovehomefromFusionTraining = TriggerCreate("gt_MovehomefromFusionTraining_Func");
    TriggerAddEventUnitRangePoint(gt_MovehomefromFusionTraining, UnitRefFromUnit(UnitFromId(107)), RegionGetCenter(RegionFromId(9)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovehomefromFusionTraining, UnitRefFromUnit(UnitFromId(176)), RegionGetCenter(RegionFromId(9)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovehomefromFusionTraining, UnitRefFromUnit(UnitFromId(182)), RegionGetCenter(RegionFromId(9)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovehomefromFusionTraining, UnitRefFromUnit(UnitFromId(139)), RegionGetCenter(RegionFromId(9)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovehomefromFusionTraining, UnitRefFromUnit(UnitFromId(185)), RegionGetCenter(RegionFromId(9)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovehomefromFusionTraining, UnitRefFromUnit(UnitFromId(108)), RegionGetCenter(RegionFromId(9)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovehomefromFusionTraining, UnitRefFromUnit(UnitFromId(175)), RegionGetCenter(RegionFromId(9)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovehomefromFusionTraining, UnitRefFromUnit(UnitFromId(181)), RegionGetCenter(RegionFromId(9)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovehomefromFusionTraining, UnitRefFromUnit(UnitFromId(140)), RegionGetCenter(RegionFromId(9)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_MovehomefromFusionTraining, UnitRefFromUnit(UnitFromId(184)), RegionGetCenter(RegionFromId(9)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Fusion Training Method Trunks Beacon 1
//--------------------------------------------------------------------------------------------------
bool gt_FusionTrainingMethodTrunksBeacon1_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    Wait(0.75, c_timeGame);
    if (((libNtve_gf_UnitInRegion(UnitFromId(108), RegionFromId(149)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(175), RegionFromId(149)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(181), RegionFromId(149)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(140), RegionFromId(149)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(184), RegionFromId(149)) == true))) {
        UnitSetPosition(RegionGetAttachUnit(RegionFromId(87)), PointFromId(655), false);
        UnitSetPosition(RegionGetAttachUnit(RegionFromId(88)), PointFromId(656), false);
        PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperAdd, 1500);
        BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FusionTrainingMethodTrunksBeacon1_Init () {
    gt_FusionTrainingMethodTrunksBeacon1 = TriggerCreate("gt_FusionTrainingMethodTrunksBeacon1_Func");
    TriggerAddEventUnitRangePoint(gt_FusionTrainingMethodTrunksBeacon1, UnitRefFromUnit(UnitFromId(107)), RegionGetCenter(RegionFromId(148)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_FusionTrainingMethodTrunksBeacon1, UnitRefFromUnit(UnitFromId(176)), RegionGetCenter(RegionFromId(148)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_FusionTrainingMethodTrunksBeacon1, UnitRefFromUnit(UnitFromId(182)), RegionGetCenter(RegionFromId(148)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_FusionTrainingMethodTrunksBeacon1, UnitRefFromUnit(UnitFromId(139)), RegionGetCenter(RegionFromId(148)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_FusionTrainingMethodTrunksBeacon1, UnitRefFromUnit(UnitFromId(185)), RegionGetCenter(RegionFromId(148)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Fusion Training Method Trunks Beacon 2
//--------------------------------------------------------------------------------------------------
bool gt_FusionTrainingMethodTrunksBeacon2_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    Wait(0.75, c_timeGame);
    if (((libNtve_gf_UnitInRegion(UnitFromId(108), RegionFromId(148)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(175), RegionFromId(148)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(181), RegionFromId(148)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(140), RegionFromId(148)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(184), RegionFromId(148)) == true))) {
        UnitSetPosition(RegionGetAttachUnit(RegionFromId(87)), PointFromId(656), false);
        UnitSetPosition(RegionGetAttachUnit(RegionFromId(88)), PointFromId(655), false);
        PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperAdd, 1500);
        BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FusionTrainingMethodTrunksBeacon2_Init () {
    gt_FusionTrainingMethodTrunksBeacon2 = TriggerCreate("gt_FusionTrainingMethodTrunksBeacon2_Func");
    TriggerAddEventUnitRangePoint(gt_FusionTrainingMethodTrunksBeacon2, UnitRefFromUnit(UnitFromId(107)), RegionGetCenter(RegionFromId(149)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_FusionTrainingMethodTrunksBeacon2, UnitRefFromUnit(UnitFromId(176)), RegionGetCenter(RegionFromId(149)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_FusionTrainingMethodTrunksBeacon2, UnitRefFromUnit(UnitFromId(182)), RegionGetCenter(RegionFromId(149)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_FusionTrainingMethodTrunksBeacon2, UnitRefFromUnit(UnitFromId(139)), RegionGetCenter(RegionFromId(149)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_FusionTrainingMethodTrunksBeacon2, UnitRefFromUnit(UnitFromId(185)), RegionGetCenter(RegionFromId(149)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Fusion Training Method Goten Beacon 1
//--------------------------------------------------------------------------------------------------
bool gt_FusionTrainingMethodGotenBeacon1_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    Wait(0.75, c_timeGame);
    if (((libNtve_gf_UnitInRegion(UnitFromId(107), RegionFromId(149)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(176), RegionFromId(149)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(182), RegionFromId(149)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(139), RegionFromId(149)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(185), RegionFromId(149)) == true))) {
        UnitSetPosition(RegionGetAttachUnit(RegionFromId(87)), PointFromId(656), false);
        UnitSetPosition(RegionGetAttachUnit(RegionFromId(88)), PointFromId(655), false);
        PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperAdd, 1500);
        BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FusionTrainingMethodGotenBeacon1_Init () {
    gt_FusionTrainingMethodGotenBeacon1 = TriggerCreate("gt_FusionTrainingMethodGotenBeacon1_Func");
    TriggerAddEventUnitRangePoint(gt_FusionTrainingMethodGotenBeacon1, UnitRefFromUnit(UnitFromId(108)), RegionGetCenter(RegionFromId(148)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_FusionTrainingMethodGotenBeacon1, UnitRefFromUnit(UnitFromId(175)), RegionGetCenter(RegionFromId(148)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_FusionTrainingMethodGotenBeacon1, UnitRefFromUnit(UnitFromId(181)), RegionGetCenter(RegionFromId(148)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_FusionTrainingMethodGotenBeacon1, UnitRefFromUnit(UnitFromId(140)), RegionGetCenter(RegionFromId(148)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_FusionTrainingMethodGotenBeacon1, UnitRefFromUnit(UnitFromId(184)), RegionGetCenter(RegionFromId(148)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Fusion Training Method Goten Beacon 2
//--------------------------------------------------------------------------------------------------
bool gt_FusionTrainingMethodGotenBeacon2_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    Wait(0.75, c_timeGame);
    if (((libNtve_gf_UnitInRegion(UnitFromId(107), RegionFromId(148)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(176), RegionFromId(148)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(182), RegionFromId(148)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(139), RegionFromId(148)) == true) || (libNtve_gf_UnitInRegion(UnitFromId(185), RegionFromId(148)) == true))) {
        UnitSetPosition(RegionGetAttachUnit(RegionFromId(87)), PointFromId(655), false);
        UnitSetPosition(RegionGetAttachUnit(RegionFromId(88)), PointFromId(656), false);
        PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropVespene, c_playerPropOperAdd, 1500);
        BoardItemSetText(gv_powerLevel, 2, UnitGetOwner(EventUnit()), IntToText(PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene)));
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FusionTrainingMethodGotenBeacon2_Init () {
    gt_FusionTrainingMethodGotenBeacon2 = TriggerCreate("gt_FusionTrainingMethodGotenBeacon2_Func");
    TriggerAddEventUnitRangePoint(gt_FusionTrainingMethodGotenBeacon2, UnitRefFromUnit(UnitFromId(108)), RegionGetCenter(RegionFromId(149)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_FusionTrainingMethodGotenBeacon2, UnitRefFromUnit(UnitFromId(175)), RegionGetCenter(RegionFromId(149)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_FusionTrainingMethodGotenBeacon2, UnitRefFromUnit(UnitFromId(181)), RegionGetCenter(RegionFromId(149)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_FusionTrainingMethodGotenBeacon2, UnitRefFromUnit(UnitFromId(140)), RegionGetCenter(RegionFromId(149)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_FusionTrainingMethodGotenBeacon2, UnitRefFromUnit(UnitFromId(184)), RegionGetCenter(RegionFromId(149)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Attack DragonBall 2
//--------------------------------------------------------------------------------------------------
bool gt_AttackDragonBall2_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((TriggerIsEnabled(gt_AttackDragonBall2) == false)) {
        TriggerEnable(gt_AttackDragonBall2, true);
        TriggerEnable(gt_AttackDragonBall3, true);
        TriggerEnable(gt_AttackDragonBall4, true);
        TriggerEnable(gt_AttackDragonBall5, true);
        TriggerEnable(gt_AttackDragonBall6, true);
        TriggerEnable(gt_AttackDragonBall7, true);
    }
    else {
    }
    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(237)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AttackDragonBall2_Init () {
    gt_AttackDragonBall2 = TriggerCreate("gt_AttackDragonBall2_Func");
    TriggerAddEventUnitRangePoint(gt_AttackDragonBall2, null, PointFromId(236), 3.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Attack DragonBall 3
//--------------------------------------------------------------------------------------------------
bool gt_AttackDragonBall3_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(238)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AttackDragonBall3_Init () {
    gt_AttackDragonBall3 = TriggerCreate("gt_AttackDragonBall3_Func");
    TriggerAddEventUnitRangePoint(gt_AttackDragonBall3, null, PointFromId(237), 3.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Attack DragonBall 4
//--------------------------------------------------------------------------------------------------
bool gt_AttackDragonBall4_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(239)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AttackDragonBall4_Init () {
    gt_AttackDragonBall4 = TriggerCreate("gt_AttackDragonBall4_Func");
    TriggerAddEventUnitRangePoint(gt_AttackDragonBall4, null, PointFromId(238), 3.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Attack DragonBall 5
//--------------------------------------------------------------------------------------------------
bool gt_AttackDragonBall5_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(240)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AttackDragonBall5_Init () {
    gt_AttackDragonBall5 = TriggerCreate("gt_AttackDragonBall5_Func");
    TriggerAddEventUnitRangePoint(gt_AttackDragonBall5, null, PointFromId(239), 3.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Attack DragonBall 6
//--------------------------------------------------------------------------------------------------
bool gt_AttackDragonBall6_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(241)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AttackDragonBall6_Init () {
    gt_AttackDragonBall6 = TriggerCreate("gt_AttackDragonBall6_Func");
    TriggerAddEventUnitRangePoint(gt_AttackDragonBall6, null, PointFromId(240), 3.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Attack DragonBall 7
//--------------------------------------------------------------------------------------------------
bool gt_AttackDragonBall7_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(242)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AttackDragonBall7_Init () {
    gt_AttackDragonBall7 = TriggerCreate("gt_AttackDragonBall7_Func");
    TriggerAddEventUnitRangePoint(gt_AttackDragonBall7, null, PointFromId(241), 3.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Attack Earth DragonBall
//--------------------------------------------------------------------------------------------------
bool gt_AttackEarthDragonBall_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(571)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AttackEarthDragonBall_Init () {
    gt_AttackEarthDragonBall = TriggerCreate("gt_AttackEarthDragonBall_Func");
    TriggerAddEventUnitRangePoint(gt_AttackEarthDragonBall, null, PointFromId(577), 3.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Attack Earth DragonBall 2
//--------------------------------------------------------------------------------------------------
bool gt_AttackEarthDragonBall2_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(572)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AttackEarthDragonBall2_Init () {
    gt_AttackEarthDragonBall2 = TriggerCreate("gt_AttackEarthDragonBall2_Func");
    TriggerAddEventUnitRangePoint(gt_AttackEarthDragonBall2, null, PointFromId(571), 3.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Attack Earth DragonBall 3
//--------------------------------------------------------------------------------------------------
bool gt_AttackEarthDragonBall3_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(573)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AttackEarthDragonBall3_Init () {
    gt_AttackEarthDragonBall3 = TriggerCreate("gt_AttackEarthDragonBall3_Func");
    TriggerAddEventUnitRangePoint(gt_AttackEarthDragonBall3, null, PointFromId(572), 3.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Attack Earth DragonBall 4
//--------------------------------------------------------------------------------------------------
bool gt_AttackEarthDragonBall4_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(574)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AttackEarthDragonBall4_Init () {
    gt_AttackEarthDragonBall4 = TriggerCreate("gt_AttackEarthDragonBall4_Func");
    TriggerAddEventUnitRangePoint(gt_AttackEarthDragonBall4, null, PointFromId(573), 3.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Attack Earth DragonBall 5
//--------------------------------------------------------------------------------------------------
bool gt_AttackEarthDragonBall5_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(575)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AttackEarthDragonBall5_Init () {
    gt_AttackEarthDragonBall5 = TriggerCreate("gt_AttackEarthDragonBall5_Func");
    TriggerAddEventUnitRangePoint(gt_AttackEarthDragonBall5, null, PointFromId(574), 3.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Attack Earth DragonBall 6
//--------------------------------------------------------------------------------------------------
bool gt_AttackEarthDragonBall6_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(576)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AttackEarthDragonBall6_Init () {
    gt_AttackEarthDragonBall6 = TriggerCreate("gt_AttackEarthDragonBall6_Func");
    TriggerAddEventUnitRangePoint(gt_AttackEarthDragonBall6, null, PointFromId(575), 3.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Attack Earth DragonBall 7
//--------------------------------------------------------------------------------------------------
bool gt_AttackEarthDragonBall7_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(577)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AttackEarthDragonBall7_Init () {
    gt_AttackEarthDragonBall7 = TriggerCreate("gt_AttackEarthDragonBall7_Func");
    TriggerAddEventUnitRangePoint(gt_AttackEarthDragonBall7, null, PointFromId(576), 3.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Return From Saiyan Saga
//--------------------------------------------------------------------------------------------------
bool gt_ReturnFromSaiyanSaga_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 0))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "Beacon_Protoss"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(21)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ReturnFromSaiyanSaga_Init () {
    gt_ReturnFromSaiyanSaga = TriggerCreate("gt_ReturnFromSaiyanSaga_Func");
    TriggerAddEventUnitRangePoint(gt_ReturnFromSaiyanSaga, UnitRefFromUnit(DataTableGetUnit(true, "Goku")), RegionGetCenter(RegionFromId(115)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromSaiyanSaga, UnitRefFromUnit(DataTableGetUnit(true, "Vegeta")), RegionGetCenter(RegionFromId(115)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromSaiyanSaga, UnitRefFromUnit(DataTableGetUnit(true, "Piccolo")), RegionGetCenter(RegionFromId(115)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromSaiyanSaga, UnitRefFromUnit(DataTableGetUnit(true, "Trunks")), RegionGetCenter(RegionFromId(115)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromSaiyanSaga, UnitRefFromUnit(DataTableGetUnit(true, "Goten")), RegionGetCenter(RegionFromId(115)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromSaiyanSaga, UnitRefFromUnit(DataTableGetUnit(true, "Gohan")), RegionGetCenter(RegionFromId(115)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Return From Saiyan Saga 2
//--------------------------------------------------------------------------------------------------
bool gt_ReturnFromSaiyanSaga2_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 0))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "Beacon_Protoss"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(21)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ReturnFromSaiyanSaga2_Init () {
    gt_ReturnFromSaiyanSaga2 = TriggerCreate("gt_ReturnFromSaiyanSaga2_Func");
    TriggerAddEventUnitRangePoint(gt_ReturnFromSaiyanSaga2, UnitRefFromUnit(DataTableGetUnit(true, "Goku")), RegionGetCenter(RegionFromId(116)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromSaiyanSaga2, UnitRefFromUnit(DataTableGetUnit(true, "Vegeta")), RegionGetCenter(RegionFromId(116)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromSaiyanSaga2, UnitRefFromUnit(DataTableGetUnit(true, "Piccolo")), RegionGetCenter(RegionFromId(116)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromSaiyanSaga2, UnitRefFromUnit(DataTableGetUnit(true, "Trunks")), RegionGetCenter(RegionFromId(116)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromSaiyanSaga2, UnitRefFromUnit(DataTableGetUnit(true, "Goten")), RegionGetCenter(RegionFromId(116)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromSaiyanSaga2, UnitRefFromUnit(DataTableGetUnit(true, "Gohan")), RegionGetCenter(RegionFromId(116)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Return From Ginyu/Frieza Sagas
//--------------------------------------------------------------------------------------------------
bool gt_ReturnFromGinyuFriezaSagas_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 0))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "Beacon_Protoss"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(21)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ReturnFromGinyuFriezaSagas_Init () {
    gt_ReturnFromGinyuFriezaSagas = TriggerCreate("gt_ReturnFromGinyuFriezaSagas_Func");
    TriggerAddEventUnitRangePoint(gt_ReturnFromGinyuFriezaSagas, UnitRefFromUnit(DataTableGetUnit(true, "Goku")), RegionGetCenter(RegionFromId(3)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromGinyuFriezaSagas, UnitRefFromUnit(DataTableGetUnit(true, "Vegeta")), RegionGetCenter(RegionFromId(3)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromGinyuFriezaSagas, UnitRefFromUnit(DataTableGetUnit(true, "Piccolo")), RegionGetCenter(RegionFromId(3)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromGinyuFriezaSagas, UnitRefFromUnit(DataTableGetUnit(true, "Trunks")), RegionGetCenter(RegionFromId(3)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromGinyuFriezaSagas, UnitRefFromUnit(DataTableGetUnit(true, "Goten")), RegionGetCenter(RegionFromId(3)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromGinyuFriezaSagas, UnitRefFromUnit(DataTableGetUnit(true, "Gohan")), RegionGetCenter(RegionFromId(3)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Return From Android 19 and 20
//--------------------------------------------------------------------------------------------------
bool gt_ReturnFromAndroid19and20_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 0))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "Beacon_Protoss"))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) != 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(21)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ReturnFromAndroid19and20_Init () {
    gt_ReturnFromAndroid19and20 = TriggerCreate("gt_ReturnFromAndroid19and20_Func");
    TriggerAddEventUnitRangePoint(gt_ReturnFromAndroid19and20, UnitRefFromUnit(DataTableGetUnit(true, "Goku")), RegionGetCenter(RegionFromId(99)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromAndroid19and20, UnitRefFromUnit(DataTableGetUnit(true, "Vegeta")), RegionGetCenter(RegionFromId(99)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromAndroid19and20, UnitRefFromUnit(DataTableGetUnit(true, "Piccolo")), RegionGetCenter(RegionFromId(99)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromAndroid19and20, UnitRefFromUnit(DataTableGetUnit(true, "Trunks")), RegionGetCenter(RegionFromId(99)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromAndroid19and20, UnitRefFromUnit(DataTableGetUnit(true, "Goten")), RegionGetCenter(RegionFromId(99)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromAndroid19and20, UnitRefFromUnit(DataTableGetUnit(true, "Gohan")), RegionGetCenter(RegionFromId(99)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Return From Android 17 and 18
//--------------------------------------------------------------------------------------------------
bool gt_ReturnFromAndroid17and18_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 0))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "Beacon_Protoss"))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) != 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(21)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ReturnFromAndroid17and18_Init () {
    gt_ReturnFromAndroid17and18 = TriggerCreate("gt_ReturnFromAndroid17and18_Func");
    TriggerAddEventUnitRangePoint(gt_ReturnFromAndroid17and18, UnitRefFromUnit(DataTableGetUnit(true, "Goku")), RegionGetCenter(RegionFromId(104)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromAndroid17and18, UnitRefFromUnit(DataTableGetUnit(true, "Vegeta")), RegionGetCenter(RegionFromId(104)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromAndroid17and18, UnitRefFromUnit(DataTableGetUnit(true, "Piccolo")), RegionGetCenter(RegionFromId(104)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromAndroid17and18, UnitRefFromUnit(DataTableGetUnit(true, "Trunks")), RegionGetCenter(RegionFromId(104)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromAndroid17and18, UnitRefFromUnit(DataTableGetUnit(true, "Goten")), RegionGetCenter(RegionFromId(104)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromAndroid17and18, UnitRefFromUnit(DataTableGetUnit(true, "Gohan")), RegionGetCenter(RegionFromId(104)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Return From Cell Form 1 and 2
//--------------------------------------------------------------------------------------------------
bool gt_ReturnFromCellForm1and2_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 0))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "Beacon_Protoss"))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) != 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(21)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ReturnFromCellForm1and2_Init () {
    gt_ReturnFromCellForm1and2 = TriggerCreate("gt_ReturnFromCellForm1and2_Func");
    TriggerAddEventUnitRangePoint(gt_ReturnFromCellForm1and2, UnitRefFromUnit(DataTableGetUnit(true, "Goku")), RegionGetCenter(RegionFromId(105)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromCellForm1and2, UnitRefFromUnit(DataTableGetUnit(true, "Vegeta")), RegionGetCenter(RegionFromId(105)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromCellForm1and2, UnitRefFromUnit(DataTableGetUnit(true, "Piccolo")), RegionGetCenter(RegionFromId(105)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromCellForm1and2, UnitRefFromUnit(DataTableGetUnit(true, "Trunks")), RegionGetCenter(RegionFromId(105)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromCellForm1and2, UnitRefFromUnit(DataTableGetUnit(true, "Goten")), RegionGetCenter(RegionFromId(105)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromCellForm1and2, UnitRefFromUnit(DataTableGetUnit(true, "Gohan")), RegionGetCenter(RegionFromId(105)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Return From Cell Games
//--------------------------------------------------------------------------------------------------
bool gt_ReturnFromCellGames_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 14))) {
            return false;
        }

        if (!((libNtve_gf_UnitGroupIsDead(gv_cell) == true))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_abilitytomovewithtimers = 15;
    TriggerEnable(gt_Losingconditiontoperfectcell, false);
    TriggerEnable(gt_Losingconditiontosuperperfectcell, false);
    TriggerEnable(gt_RemoveUnitsfromCellgamesGroupifnotcontrolled, false);
    TriggerEnable(gt_AddunitstoCellGamesiftheytransform, false);
    TriggerEnable(gt_Unitdiesduringcellgamesremovethemfromgroup, false);
    TriggerEnable(gt_SetSuperPerfectCellGroup, false);
    TriggerEnable(gt_CellAI, false);
    libNtve_gf_SetAllianceOneWay(15, 7, 5);
    if ((libNtve_gf_UnitInRegion(RegionGetAttachUnit(RegionFromId(84)), RegionFromId(110)) == true)) {
        UnitSetPosition(RegionGetAttachUnit(RegionFromId(84)), RegionGetCenter(RegionFromId(21)), false);
        UnitIssueOrder(RegionGetAttachUnit(RegionFromId(84)), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
        libNtve_gf_SwooshCamera(UnitGetOwner(RegionGetAttachUnit(RegionFromId(84))), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    }
    else {
    }
    if ((libNtve_gf_UnitInRegion(RegionGetAttachUnit(RegionFromId(85)), RegionFromId(110)) == true)) {
        UnitSetPosition(RegionGetAttachUnit(RegionFromId(85)), RegionGetCenter(RegionFromId(21)), false);
        UnitIssueOrder(RegionGetAttachUnit(RegionFromId(85)), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
        libNtve_gf_SwooshCamera(UnitGetOwner(RegionGetAttachUnit(RegionFromId(85))), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    }
    else {
    }
    if ((libNtve_gf_UnitInRegion(RegionGetAttachUnit(RegionFromId(86)), RegionFromId(110)) == true)) {
        UnitSetPosition(RegionGetAttachUnit(RegionFromId(86)), RegionGetCenter(RegionFromId(21)), false);
        UnitIssueOrder(RegionGetAttachUnit(RegionFromId(86)), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
        libNtve_gf_SwooshCamera(UnitGetOwner(RegionGetAttachUnit(RegionFromId(86))), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    }
    else {
    }
    if ((libNtve_gf_UnitInRegion(RegionGetAttachUnit(RegionFromId(87)), RegionFromId(110)) == true)) {
        UnitSetPosition(RegionGetAttachUnit(RegionFromId(87)), RegionGetCenter(RegionFromId(21)), false);
        UnitIssueOrder(RegionGetAttachUnit(RegionFromId(87)), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
        libNtve_gf_SwooshCamera(UnitGetOwner(RegionGetAttachUnit(RegionFromId(87))), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    }
    else {
    }
    if ((libNtve_gf_UnitInRegion(RegionGetAttachUnit(RegionFromId(88)), RegionFromId(110)) == true)) {
        UnitSetPosition(RegionGetAttachUnit(RegionFromId(88)), RegionGetCenter(RegionFromId(21)), false);
        UnitIssueOrder(RegionGetAttachUnit(RegionFromId(88)), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
        libNtve_gf_SwooshCamera(UnitGetOwner(RegionGetAttachUnit(RegionFromId(88))), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    }
    else {
    }
    if ((libNtve_gf_UnitInRegion(RegionGetAttachUnit(RegionFromId(89)), RegionFromId(110)) == true)) {
        UnitSetPosition(RegionGetAttachUnit(RegionFromId(89)), RegionGetCenter(RegionFromId(21)), false);
        UnitIssueOrder(RegionGetAttachUnit(RegionFromId(89)), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
        libNtve_gf_SwooshCamera(UnitGetOwner(RegionGetAttachUnit(RegionFromId(89))), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ReturnFromCellGames_Init () {
    gt_ReturnFromCellGames = TriggerCreate("gt_ReturnFromCellGames_Func");
    TriggerEnable(gt_ReturnFromCellGames, false);
    TriggerAddEventUnitDied(gt_ReturnFromCellGames, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Return from Babidi Ship 2
//--------------------------------------------------------------------------------------------------
bool gt_ReturnfromBabidiShip2_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(UnitFromId(590)) == false))) {
            return false;
        }

        if (!((UnitIsAlive(UnitFromId(603)) == false))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) != 0))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "Beacon_Protoss"))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) != 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(132)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(132)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ReturnfromBabidiShip2_Init () {
    gt_ReturnfromBabidiShip2 = TriggerCreate("gt_ReturnfromBabidiShip2_Func");
    TriggerAddEventUnitRegion(gt_ReturnfromBabidiShip2, null, RegionFromId(130), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Return From Buu Saga
//--------------------------------------------------------------------------------------------------
bool gt_ReturnFromBuuSaga_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 0))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "Beacon_Protoss"))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) != 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(21)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ReturnFromBuuSaga_Init () {
    gt_ReturnFromBuuSaga = TriggerCreate("gt_ReturnFromBuuSaga_Func");
    TriggerAddEventUnitRangePoint(gt_ReturnFromBuuSaga, UnitRefFromUnit(DataTableGetUnit(true, "Goku")), RegionGetCenter(RegionFromId(123)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromBuuSaga, UnitRefFromUnit(DataTableGetUnit(true, "Vegeta")), RegionGetCenter(RegionFromId(123)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromBuuSaga, UnitRefFromUnit(DataTableGetUnit(true, "Piccolo")), RegionGetCenter(RegionFromId(123)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromBuuSaga, UnitRefFromUnit(DataTableGetUnit(true, "Trunks")), RegionGetCenter(RegionFromId(123)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromBuuSaga, UnitRefFromUnit(DataTableGetUnit(true, "Goten")), RegionGetCenter(RegionFromId(123)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromBuuSaga, UnitRefFromUnit(DataTableGetUnit(true, "Gohan")), RegionGetCenter(RegionFromId(123)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Return From Buu Saga 2
//--------------------------------------------------------------------------------------------------
bool gt_ReturnFromBuuSaga2_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 0))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "Beacon_Protoss"))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) != 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(21)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(21)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ReturnFromBuuSaga2_Init () {
    gt_ReturnFromBuuSaga2 = TriggerCreate("gt_ReturnFromBuuSaga2_Func");
    TriggerAddEventUnitRangePoint(gt_ReturnFromBuuSaga2, UnitRefFromUnit(DataTableGetUnit(true, "Goku")), RegionGetCenter(RegionFromId(135)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromBuuSaga2, UnitRefFromUnit(DataTableGetUnit(true, "Vegeta")), RegionGetCenter(RegionFromId(135)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromBuuSaga2, UnitRefFromUnit(DataTableGetUnit(true, "Piccolo")), RegionGetCenter(RegionFromId(135)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromBuuSaga2, UnitRefFromUnit(DataTableGetUnit(true, "Trunks")), RegionGetCenter(RegionFromId(135)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromBuuSaga2, UnitRefFromUnit(DataTableGetUnit(true, "Goten")), RegionGetCenter(RegionFromId(135)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_ReturnFromBuuSaga2, UnitRefFromUnit(DataTableGetUnit(true, "Gohan")), RegionGetCenter(RegionFromId(135)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Move inside Babidi Ship
//--------------------------------------------------------------------------------------------------
bool gt_MoveinsideBabidiShip_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) != 0))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) != 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(129)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(129)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MoveinsideBabidiShip_Init () {
    gt_MoveinsideBabidiShip = TriggerCreate("gt_MoveinsideBabidiShip_Func");
    TriggerAddEventUnitRegion(gt_MoveinsideBabidiShip, null, RegionFromId(125), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Move inside Babidi Ship 2
//--------------------------------------------------------------------------------------------------
bool gt_MoveinsideBabidiShip2_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(UnitFromId(586)) == false))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) != 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(127)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(127)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MoveinsideBabidiShip2_Init () {
    gt_MoveinsideBabidiShip2 = TriggerCreate("gt_MoveinsideBabidiShip2_Func");
    TriggerAddEventUnitRegion(gt_MoveinsideBabidiShip2, null, RegionFromId(126), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Move inside Babidi Ship 3
//--------------------------------------------------------------------------------------------------
bool gt_MoveinsideBabidiShip3_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(UnitFromId(587)) == false))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) != 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(128)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(128)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MoveinsideBabidiShip3_Init () {
    gt_MoveinsideBabidiShip3 = TriggerCreate("gt_MoveinsideBabidiShip3_Func");
    TriggerAddEventUnitRegion(gt_MoveinsideBabidiShip3, null, RegionFromId(127), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Move inside Babidi Ship 4
//--------------------------------------------------------------------------------------------------
bool gt_MoveinsideBabidiShip4_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(UnitFromId(588)) == false))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) != 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(130)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(130)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MoveinsideBabidiShip4_Init () {
    gt_MoveinsideBabidiShip4 = TriggerCreate("gt_MoveinsideBabidiShip4_Func");
    TriggerAddEventUnitRegion(gt_MoveinsideBabidiShip4, null, RegionFromId(128), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip for Forms
//--------------------------------------------------------------------------------------------------
bool gt_TipforForms_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/A5ACA294"), 0), StringExternal("Param/Value/79D2AA5D"), StringExternal("Param/Value/71FE2A57"), "Assets\\Textures\\plasmafield2.dds");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipforForms_Init () {
    gt_TipforForms = TriggerCreate("gt_TipforForms_Func");
    TriggerAddEventMapInit(gt_TipforForms);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip for Energy
//--------------------------------------------------------------------------------------------------
bool gt_TipforEnergy_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/169117B6"), 0), StringExternal("Param/Value/F052B811"), StringExternal("Param/Value/7B8FBD48"), "Assets\\Textures\\plasmafield2.dds");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipforEnergy_Init () {
    gt_TipforEnergy = TriggerCreate("gt_TipforEnergy_Func");
    TriggerAddEventMapInit(gt_TipforEnergy);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip for Power Level
//--------------------------------------------------------------------------------------------------
bool gt_TipforPowerLevel_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/164D66D5"), 0), StringExternal("Param/Value/8EC10435"), StringExternal("Param/Value/D8DF82C8"), "Assets\\Textures\\plasmafield2.dds");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipforPowerLevel_Init () {
    gt_TipforPowerLevel = TriggerCreate("gt_TipforPowerLevel_Func");
    TriggerAddEventMapInit(gt_TipforPowerLevel);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip for Debug Functions
//--------------------------------------------------------------------------------------------------
bool gt_TipforDebugFunctions_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/FEAC4654"), 0), StringExternal("Param/Value/424FEEB6"), StringExternal("Param/Value/C7C9C579"), "Assets\\Textures\\plasmafield2.dds");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipforDebugFunctions_Init () {
    gt_TipforDebugFunctions = TriggerCreate("gt_TipforDebugFunctions_Func");
    TriggerAddEventMapInit(gt_TipforDebugFunctions);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip for Power Crystals
//--------------------------------------------------------------------------------------------------
bool gt_TipforPowerCrystals_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/BFD8855C"), 0), StringExternal("Param/Value/1F78F0BF"), StringExternal("Param/Value/5E5C7802"), "Assets\\Textures\\plasmafield2.dds");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipforPowerCrystals_Init () {
    gt_TipforPowerCrystals = TriggerCreate("gt_TipforPowerCrystals_Func");
    TriggerAddEventMapInit(gt_TipforPowerCrystals);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip for Mystic/Hyperbolic/Fusion/Weighted Training
//--------------------------------------------------------------------------------------------------
bool gt_TipforMysticHyperbolicFusionWeightedTraining_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/AD81176D"), 0), StringExternal("Param/Value/299D3F43"), StringExternal("Param/Value/6D691C2B"), "Assets\\Textures\\plasmafield2.dds");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipforMysticHyperbolicFusionWeightedTraining_Init () {
    gt_TipforMysticHyperbolicFusionWeightedTraining = TriggerCreate("gt_TipforMysticHyperbolicFusionWeightedTraining_Func");
    TriggerAddEventMapInit(gt_TipforMysticHyperbolicFusionWeightedTraining);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Wait timer until game starts
//--------------------------------------------------------------------------------------------------
bool gt_Waittimeruntilgamestarts_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/D64308FF"));
    TimerWindowCreate(gv_beggining, StringExternal("Param/Value/B797E2E5"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 500, 50);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_beggining, 30.0, false, c_timeReal);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_beggining);
    Wait(30.0, c_timeReal);
    TimerWindowDestroy(TimerWindowLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Waittimeruntilgamestarts_Init () {
    gt_Waittimeruntilgamestarts = TriggerCreate("gt_Waittimeruntilgamestarts_Func");
    TriggerAddEventMapInit(gt_Waittimeruntilgamestarts);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Saiyan Saga Countdown Timer
//--------------------------------------------------------------------------------------------------
bool gt_SaiyanSagaCountdownTimer_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/9CE591B4"));
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/546F3630"));
    TimerWindowCreate(gv_saiyanSaga, StringExternal("Param/Value/B8596451"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 600, 50);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_saiyanSaga, 180.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_saiyanSaga);
    Wait(180.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    gv_abilitytomovewithtimers += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SaiyanSagaCountdownTimer_Init () {
    gt_SaiyanSagaCountdownTimer = TriggerCreate("gt_SaiyanSagaCountdownTimer_Func");
    TriggerAddEventTimer(gt_SaiyanSagaCountdownTimer, gv_beggining);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Saiyan Saga Begin
//--------------------------------------------------------------------------------------------------
bool gt_SaiyanSagaBegin_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/075CB295"));
    UnitCreate(1, "Tosh", 0, 15, RegionGetCenter(RegionFromId(118)), 270.0);
    Wait(3.0, c_timeGame);
    RegionAttachToUnit(RegionFromId(119), UnitFromId(145), Point(0.0, 0.0));
    UnitWeaponRemove(UnitFromId(145), "Claws");
    while ((libNtve_gf_UnitGroupIsDead(gv_saiyans) == false)) {
        UnitGroupIssueOrder(gv_saiyans, OrderTargetingPoint(AbilityCommand("attack", 0), RegionGetCenter(RegionFromId(119))), c_orderQueueReplace);
        UnitGroupWaitUntilIdle(gv_saiyans, 0, true);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SaiyanSagaBegin_Init () {
    gt_SaiyanSagaBegin = TriggerCreate("gt_SaiyanSagaBegin_Func");
    TriggerAddEventTimer(gt_SaiyanSagaBegin, gv_saiyanSaga);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set Saiyan Force Group
//--------------------------------------------------------------------------------------------------
bool gt_SetSaiyanForceGroup_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupAddUnitGroup(gv_saiyans, UnitGroup(null, 15, RegionFromId(118), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0));
    Wait(2.0, c_timeGame);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SetSaiyanForceGroup_Init () {
    gt_SetSaiyanForceGroup = TriggerCreate("gt_SetSaiyanForceGroup_Func");
    TriggerAddEventTimePeriodic(gt_SetSaiyanForceGroup, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Allow Travel to Saiyan Saga
//--------------------------------------------------------------------------------------------------
bool gt_AllowTraveltoSaiyanSaga_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((EventUnit() == UnitFromId(104))) {
        UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(115)), false);
        UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
        libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(115)), 1.5);
    }
    else {
    }
    if ((EventUnit() == UnitFromId(106))) {
        UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(115)), false);
        UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
        libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(115)), 1.5);
    }
    else {
    }
    if ((EventUnit() == UnitFromId(105))) {
        UIDisplayMessage(PlayerGroupSingle(UnitGetOwner(EventUnit())), c_messageAreaSubtitle, StringExternal("Param/Value/B975D76E"));
    }
    else {
    }
    if ((EventUnit() == UnitFromId(107))) {
        UIDisplayMessage(PlayerGroupSingle(UnitGetOwner(EventUnit())), c_messageAreaSubtitle, StringExternal("Param/Value/3F2FF22C"));
    }
    else {
    }
    if ((EventUnit() == UnitFromId(108))) {
        UIDisplayMessage(PlayerGroupSingle(UnitGetOwner(EventUnit())), c_messageAreaSubtitle, StringExternal("Param/Value/650C0147"));
    }
    else {
    }
    if ((EventUnit() == UnitFromId(109))) {
        UIDisplayMessage(PlayerGroupSingle(UnitGetOwner(EventUnit())), c_messageAreaSubtitle, StringExternal("Param/Value/F128008B"));
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AllowTraveltoSaiyanSaga_Init () {
    gt_AllowTraveltoSaiyanSaga = TriggerCreate("gt_AllowTraveltoSaiyanSaga_Func");
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoSaiyanSaga, UnitRefFromUnit(DataTableGetUnit(true, "Goku")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoSaiyanSaga, UnitRefFromUnit(DataTableGetUnit(true, "Vegeta")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoSaiyanSaga, UnitRefFromUnit(DataTableGetUnit(true, "Piccolo")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoSaiyanSaga, UnitRefFromUnit(DataTableGetUnit(true, "Trunks")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoSaiyanSaga, UnitRefFromUnit(DataTableGetUnit(true, "Goten")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoSaiyanSaga, UnitRefFromUnit(DataTableGetUnit(true, "Gohan")), RegionGetCenter(RegionFromId(83)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Saiyan Saga Countdown Timer 2
//--------------------------------------------------------------------------------------------------
bool gt_SaiyanSagaCountdownTimer2_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 15))) {
            return false;
        }

        if (!((gv_abilitytomovewithtimers == 1))) {
            return false;
        }

        if (!((UnitGroupCount(gv_saiyans, c_unitCountAlive) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_Waittimeruntilgamestarts, false);
    TriggerDestroy(gt_Waittimeruntilgamestarts);
    TriggerEnable(gt_SaiyanSagaCountdownTimer, false);
    TriggerDestroy(gt_SaiyanSagaCountdownTimer);
    TriggerEnable(gt_SaiyanSagaBegin, false);
    TriggerDestroy(gt_SaiyanSagaBegin);
    TriggerEnable(gt_SetSaiyanForceGroup, false);
    TriggerDestroy(gt_SetSaiyanForceGroup);
    TriggerEnable(gt_AllowTraveltoSaiyanSaga, false);
    TriggerDestroy(gt_AllowTraveltoSaiyanSaga);
    TriggerExecute(gt_SetDragonballPercentdamagetaken, true, true);
    gv_abilitytomovewithtimers -= 1;
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/EBC06D10"));
    Wait(10.0, c_timeGame);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/9B598073"));
    TimerWindowCreate(gv_saiyanSaga2, StringExternal("Param/Value/7B163C97"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 600, 50);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_saiyanSaga2, 120.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_saiyanSaga2);
    Wait(120.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    gv_abilitytomovewithtimers += 2;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SaiyanSagaCountdownTimer2_Init () {
    gt_SaiyanSagaCountdownTimer2 = TriggerCreate("gt_SaiyanSagaCountdownTimer2_Func");
    TriggerAddEventUnitDied(gt_SaiyanSagaCountdownTimer2, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Saiyan Saga Begin 2
//--------------------------------------------------------------------------------------------------
bool gt_SaiyanSagaBegin2_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/7E1C1693"));
    UnitCreate(1, "DarkTemplar", 0, 15, RegionGetCenter(RegionFromId(117)), 270.0);
    libNtve_gf_SetUpgradeLevelForPlayer(15, "TerranInfantryWeaponsLevel1", 5);
    libNtve_gf_SetUpgradeLevelForPlayer(15, "TerranInfantryWeaponsLevel2", 5);
    libNtve_gf_SetUpgradeLevelForPlayer(15, "TerranInfantryWeaponsLevel3", 5);
    Wait(1.1, c_timeGame);
    UnitCreate(1, "Diamondback", 0, 15, RegionGetCenter(RegionFromId(117)), 270.0);
    Wait(1.0, c_timeGame);
    if ((UnitIsAlive(UnitFromId(149)) == true)) {
        UnitGroupIssueOrder(gv_saiyans, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(577)), c_orderQueueReplace);
    }
    else {
        if ((UnitIsAlive(UnitFromId(147)) == true)) {
            UnitGroupIssueOrder(gv_saiyans, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(571)), c_orderQueueReplace);
        }
        else {
            if ((UnitIsAlive(UnitFromId(568)) == true)) {
                UnitGroupIssueOrder(gv_saiyans, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(572)), c_orderQueueReplace);
            }
            else {
                if ((UnitIsAlive(UnitFromId(570)) == true)) {
                    UnitGroupIssueOrder(gv_saiyans, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(573)), c_orderQueueReplace);
                }
                else {
                    if ((UnitIsAlive(UnitFromId(569)) == true)) {
                        UnitGroupIssueOrder(gv_saiyans, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(574)), c_orderQueueReplace);
                    }
                    else {
                        if ((UnitIsAlive(UnitFromId(148)) == true)) {
                            UnitGroupIssueOrder(gv_saiyans, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(575)), c_orderQueueReplace);
                        }
                        else {
                            if ((UnitIsAlive(UnitFromId(150)) == true)) {
                                UnitGroupIssueOrder(gv_saiyans, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(576)), c_orderQueueReplace);
                            }
                            else {
                            }
                        }
                    }
                }
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SaiyanSagaBegin2_Init () {
    gt_SaiyanSagaBegin2 = TriggerCreate("gt_SaiyanSagaBegin2_Func");
    TriggerAddEventTimer(gt_SaiyanSagaBegin2, gv_saiyanSaga2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set Saiyan Force Group 2
//--------------------------------------------------------------------------------------------------
bool gt_SetSaiyanForceGroup2_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 2))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupAddUnitGroup(gv_saiyans, UnitGroup(null, 15, RegionFromId(117), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SetSaiyanForceGroup2_Init () {
    gt_SetSaiyanForceGroup2 = TriggerCreate("gt_SetSaiyanForceGroup2_Func");
    TriggerAddEventTimePeriodic(gt_SetSaiyanForceGroup2, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Over 9000!
//--------------------------------------------------------------------------------------------------
bool gt_Over9000_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) != 15) && (UnitGetOwner(EventUnit()) != 0) && (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) >= 9000) && (TriggerGetExecCount(TriggerGetCurrent()) <= 0)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundChannelMute(PlayerGroupAll(), c_soundCategoryVoice, false);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, true);
    SoundPlay(SoundLink("Over9000", -1), PlayerGroupAll(), 100.0, 0.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Over9000_Init () {
    gt_Over9000 = TriggerCreate("gt_Over9000_Func");
    TriggerAddEventUnitRegion(gt_Over9000, null, RegionFromId(116), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Allow Travel to Saiyan Saga 2
//--------------------------------------------------------------------------------------------------
bool gt_AllowTraveltoSaiyanSaga2_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 2))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_SetSaiyanForceGroup2, false);
    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(116)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(116)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AllowTraveltoSaiyanSaga2_Init () {
    gt_AllowTraveltoSaiyanSaga2 = TriggerCreate("gt_AllowTraveltoSaiyanSaga2_Func");
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoSaiyanSaga2, UnitRefFromUnit(DataTableGetUnit(true, "Goku")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoSaiyanSaga2, UnitRefFromUnit(DataTableGetUnit(true, "Vegeta")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoSaiyanSaga2, UnitRefFromUnit(DataTableGetUnit(true, "Piccolo")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoSaiyanSaga2, UnitRefFromUnit(DataTableGetUnit(true, "Trunks")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoSaiyanSaga2, UnitRefFromUnit(DataTableGetUnit(true, "Goten")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoSaiyanSaga2, UnitRefFromUnit(DataTableGetUnit(true, "Gohan")), RegionGetCenter(RegionFromId(83)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Nappa Dies
//--------------------------------------------------------------------------------------------------
bool gt_NappaDies_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 15))) {
            return false;
        }

        if (!((UnitGroupUnit(gv_saiyans, 2) == EventUnit()))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetUpgradeLevelForPlayer(15, "TerranInfantryWeaponsLevel1", 15);
    libNtve_gf_SetUpgradeLevelForPlayer(15, "TerranInfantryWeaponsLevel2", 15);
    libNtve_gf_SetUpgradeLevelForPlayer(15, "TerranInfantryWeaponsLevel3", 15);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_NappaDies_Init () {
    gt_NappaDies = TriggerCreate("gt_NappaDies_Func");
    TriggerAddEventUnitDied(gt_NappaDies, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ginyu Saga Countdown Timer
//--------------------------------------------------------------------------------------------------
bool gt_GinyuSagaCountdownTimer_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 15))) {
            return false;
        }

        if (!((gv_abilitytomovewithtimers == 2))) {
            return false;
        }

        if (!((UnitGroupCount(gv_saiyans, c_unitCountAlive) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_SaiyanSagaCountdownTimer2, false);
    TriggerDestroy(gt_SaiyanSagaCountdownTimer2);
    TriggerEnable(gt_SaiyanSagaBegin2, false);
    TriggerDestroy(gt_SaiyanSagaBegin2);
    TriggerEnable(gt_SetSaiyanForceGroup2, false);
    TriggerDestroy(gt_SetSaiyanForceGroup2);
    TriggerEnable(gt_AllowTraveltoSaiyanSaga2, false);
    TriggerDestroy(gt_AllowTraveltoSaiyanSaga2);
    PlayerModifyPropertyInt(7, c_playerPropDamageTakenPercent, c_playerPropOperSetTo, 100);
    gv_abilitytomovewithtimers -= 2;
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/E37AF7C0"));
    Wait(10.0, c_timeGame);
    libNtve_gf_SetUpgradeLevelForPlayer(15, "TerranInfantryWeaponsLevel1", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(15, "TerranInfantryWeaponsLevel2", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(15, "TerranInfantryWeaponsLevel3", 0);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/61EB6C4C"));
    TimerWindowCreate(gv_ginyuSaga, StringExternal("Param/Value/1A73FAFE"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 600, 50);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_ginyuSaga, 720.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_ginyuSaga);
    Wait(720.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    gv_abilitytomovewithtimers += 3;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_GinyuSagaCountdownTimer_Init () {
    gt_GinyuSagaCountdownTimer = TriggerCreate("gt_GinyuSagaCountdownTimer_Func");
    TriggerAddEventUnitDied(gt_GinyuSagaCountdownTimer, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ginyu Saga Begin
//--------------------------------------------------------------------------------------------------
bool gt_GinyuSagaBegin_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/1B3A16B7"));
    UnitCreate(1, "Vulture", 0, 15, RegionGetCenter(RegionFromId(4)), 270.0);
    Wait(3.0, c_timeGame);
    UnitCreate(1, "SiegeTank", 0, 15, RegionGetCenter(RegionFromId(4)), 270.0);
    Wait(3.0, c_timeGame);
    UnitCreate(1, "Brutalisk", 0, 15, RegionGetCenter(RegionFromId(4)), 270.0);
    Wait(3.0, c_timeGame);
    UnitCreate(1, "Wraith", 0, 15, RegionGetCenter(RegionFromId(4)), 270.0);
    Wait(3.0, c_timeGame);
    UnitCreate(1, "Baneling", 0, 15, RegionGetCenter(RegionFromId(4)), 270.0);
    Wait(3.0, c_timeGame);
    while (((UnitIsAlive(UnitFromId(561)) == true))) {
        UnitGroupIssueOrder(gv_ginyuForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(236)), c_orderQueueReplace);
        Wait(3.0, c_timeGame);
    }
    while (((UnitIsAlive(UnitFromId(561)) == false) && (UnitIsAlive(UnitFromId(562)) == true))) {
        UnitGroupIssueOrder(gv_ginyuForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(237)), c_orderQueueReplace);
        Wait(3.0, c_timeGame);
    }
    while (((UnitIsAlive(UnitFromId(561)) == false) && (UnitIsAlive(UnitFromId(562)) == false) && (UnitIsAlive(UnitFromId(563)) == true))) {
        UnitGroupIssueOrder(gv_ginyuForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(238)), c_orderQueueReplace);
        Wait(3.0, c_timeGame);
    }
    while (((UnitIsAlive(UnitFromId(561)) == false) && (UnitIsAlive(UnitFromId(562)) == false) && (UnitIsAlive(UnitFromId(563)) == false) && (UnitIsAlive(UnitFromId(564)) == true))) {
        UnitGroupIssueOrder(gv_ginyuForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(239)), c_orderQueueReplace);
        Wait(3.0, c_timeGame);
    }
    while (((UnitIsAlive(UnitFromId(561)) == false) && (UnitIsAlive(UnitFromId(562)) == false) && (UnitIsAlive(UnitFromId(563)) == false) && (UnitIsAlive(UnitFromId(564)) == false) && (UnitIsAlive(UnitFromId(565)) == true))) {
        UnitGroupIssueOrder(gv_ginyuForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(240)), c_orderQueueReplace);
        Wait(3.0, c_timeGame);
    }
    while (((UnitIsAlive(UnitFromId(561)) == false) && (UnitIsAlive(UnitFromId(562)) == false) && (UnitIsAlive(UnitFromId(563)) == false) && (UnitIsAlive(UnitFromId(564)) == false) && (UnitIsAlive(UnitFromId(565)) == false) && (UnitIsAlive(UnitFromId(566)) == true))) {
        UnitGroupIssueOrder(gv_ginyuForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(241)), c_orderQueueReplace);
        Wait(3.0, c_timeGame);
    }
    while (((UnitIsAlive(UnitFromId(561)) == false) && (UnitIsAlive(UnitFromId(562)) == false) && (UnitIsAlive(UnitFromId(563)) == false) && (UnitIsAlive(UnitFromId(564)) == false) && (UnitIsAlive(UnitFromId(565)) == false) && (UnitIsAlive(UnitFromId(566)) == false) && (UnitIsAlive(UnitFromId(567)) == true))) {
        UnitGroupIssueOrder(gv_ginyuForce, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(242)), c_orderQueueReplace);
        Wait(3.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_GinyuSagaBegin_Init () {
    gt_GinyuSagaBegin = TriggerCreate("gt_GinyuSagaBegin_Func");
    TriggerAddEventTimer(gt_GinyuSagaBegin, gv_ginyuSaga);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set Ginyu Force Group
//--------------------------------------------------------------------------------------------------
bool gt_SetGinyuForceGroup_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 3))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupAddUnitGroup(gv_ginyuForce, UnitGroup(null, 15, RegionFromId(4), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SetGinyuForceGroup_Init () {
    gt_SetGinyuForceGroup = TriggerCreate("gt_SetGinyuForceGroup_Func");
    TriggerAddEventTimePeriodic(gt_SetGinyuForceGroup, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Allow Travel to Ginyu Saga
//--------------------------------------------------------------------------------------------------
bool gt_AllowTraveltoGinyuSaga_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 3))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(3)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(3)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AllowTraveltoGinyuSaga_Init () {
    gt_AllowTraveltoGinyuSaga = TriggerCreate("gt_AllowTraveltoGinyuSaga_Func");
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoGinyuSaga, UnitRefFromUnit(DataTableGetUnit(true, "Goku")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoGinyuSaga, UnitRefFromUnit(DataTableGetUnit(true, "Vegeta")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoGinyuSaga, UnitRefFromUnit(DataTableGetUnit(true, "Piccolo")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoGinyuSaga, UnitRefFromUnit(DataTableGetUnit(true, "Trunks")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoGinyuSaga, UnitRefFromUnit(DataTableGetUnit(true, "Goten")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoGinyuSaga, UnitRefFromUnit(DataTableGetUnit(true, "Gohan")), RegionGetCenter(RegionFromId(83)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Prevent skip dball stalling
//--------------------------------------------------------------------------------------------------
bool gt_Preventskipdballstalling_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(236)), c_orderQueueReplace);
    TriggerEnable(gt_AttackDragonBall2, false);
    TriggerEnable(gt_AttackDragonBall3, false);
    TriggerEnable(gt_AttackDragonBall4, false);
    TriggerEnable(gt_AttackDragonBall5, false);
    TriggerEnable(gt_AttackDragonBall6, false);
    TriggerEnable(gt_AttackDragonBall7, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Preventskipdballstalling_Init () {
    gt_Preventskipdballstalling = TriggerCreate("gt_Preventskipdballstalling_Func");
    TriggerAddEventUnitRangePoint(gt_Preventskipdballstalling, null, PointFromId(242), 3.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Fix all dball stalling
//--------------------------------------------------------------------------------------------------
bool gt_Fixalldballstalling_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupLoopBegin(UnitGroupFilterPlayer(gv_frieza, 15, 0));
    for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
        UnitIssueOrder(UnitGroupLoopCurrent(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitGroupClosestToPoint(UnitGroupAlliance(UnitGetOwner(UnitGroupLoopCurrent()), c_unitAllianceEnemy, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), UnitGetPosition(UnitGroupUnit(gv_dragonBalls, 1))))), c_orderQueueReplace);
    }
    UnitGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Fixalldballstalling_Init () {
    gt_Fixalldballstalling = TriggerCreate("gt_Fixalldballstalling_Func");
    TriggerAddEventUnitBecomesIdle(gt_Fixalldballstalling, UnitRefFromUnit(UnitGroupUnit(gv_frieza, 1)), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Frieza Form 1 Countdown Timer
//--------------------------------------------------------------------------------------------------
bool gt_FriezaForm1CountdownTimer_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) == 15) && (gv_abilitytomovewithtimers == 3) && (UnitGroupCount(gv_ginyuForce, c_unitCountAlive) == 0)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_GinyuSagaCountdownTimer, false);
    TriggerDestroy(gt_GinyuSagaCountdownTimer);
    TriggerEnable(gt_GinyuSagaBegin, false);
    TriggerDestroy(gt_GinyuSagaBegin);
    TriggerEnable(gt_SetGinyuForceGroup, false);
    TriggerDestroy(gt_SetGinyuForceGroup);
    TriggerEnable(gt_AllowTraveltoGinyuSaga, false);
    TriggerDestroy(gt_AllowTraveltoGinyuSaga);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/517DA19B"));
    gv_abilitytomovewithtimers -= 3;
    TriggerEnable(gt_SetGinyuForceGroup, false);
    TimerWindowCreate(gv_friezaSagaform1, StringExternal("Param/Value/92DBB1BB"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 500, 50);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_friezaSagaform1, 150.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_friezaSagaform1);
    Wait(150.0, c_timeGame);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/1E9DCBA4"));
    TimerWindowDestroy(TimerWindowLastCreated());
    gv_abilitytomovewithtimers += 4;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FriezaForm1CountdownTimer_Init () {
    gt_FriezaForm1CountdownTimer = TriggerCreate("gt_FriezaForm1CountdownTimer_Func");
    TriggerAddEventUnitDied(gt_FriezaForm1CountdownTimer, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Frieza Form 1 Begin
//--------------------------------------------------------------------------------------------------
bool gt_FriezaForm1Begin_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitCreate(1, "Mutalisk", 0, 15, RegionGetCenter(RegionFromId(4)), 270.0);
    Wait(3.0, c_timeGame);
    if ((UnitIsAlive(UnitFromId(561)) == true)) {
        UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(236)), c_orderQueueReplace);
    }
    else {
        if ((UnitIsAlive(UnitFromId(562)) == true)) {
            UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(237)), c_orderQueueReplace);
        }
        else {
            if ((UnitIsAlive(UnitFromId(563)) == true)) {
                UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(238)), c_orderQueueReplace);
            }
            else {
                if ((UnitIsAlive(UnitFromId(564)) == true)) {
                    UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(239)), c_orderQueueReplace);
                }
                else {
                    if ((UnitIsAlive(UnitFromId(565)) == true)) {
                        UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(240)), c_orderQueueReplace);
                    }
                    else {
                        if ((UnitIsAlive(UnitFromId(566)) == true)) {
                            UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(241)), c_orderQueueReplace);
                        }
                        else {
                            if ((UnitIsAlive(UnitFromId(567)) == true)) {
                                UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(242)), c_orderQueueReplace);
                            }
                            else {
                            }
                        }
                    }
                }
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FriezaForm1Begin_Init () {
    gt_FriezaForm1Begin = TriggerCreate("gt_FriezaForm1Begin_Func");
    TriggerAddEventTimer(gt_FriezaForm1Begin, gv_friezaSagaform1);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set Frieza Group
//--------------------------------------------------------------------------------------------------
bool gt_SetFriezaGroup_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 4))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupAddUnitGroup(gv_frieza, UnitGroup(null, 15, RegionFromId(4), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SetFriezaGroup_Init () {
    gt_SetFriezaGroup = TriggerCreate("gt_SetFriezaGroup_Func");
    TriggerAddEventTimePeriodic(gt_SetFriezaGroup, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Allow Travel to Frieza Saga
//--------------------------------------------------------------------------------------------------
bool gt_AllowTraveltoFriezaSaga_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 4))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(3)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(3)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AllowTraveltoFriezaSaga_Init () {
    gt_AllowTraveltoFriezaSaga = TriggerCreate("gt_AllowTraveltoFriezaSaga_Func");
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoFriezaSaga, UnitRefFromUnit(DataTableGetUnit(true, "Goku")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoFriezaSaga, UnitRefFromUnit(DataTableGetUnit(true, "Vegeta")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoFriezaSaga, UnitRefFromUnit(DataTableGetUnit(true, "Piccolo")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoFriezaSaga, UnitRefFromUnit(DataTableGetUnit(true, "Trunks")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoFriezaSaga, UnitRefFromUnit(DataTableGetUnit(true, "Goten")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoFriezaSaga, UnitRefFromUnit(DataTableGetUnit(true, "Gohan")), RegionGetCenter(RegionFromId(83)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Frieza Form 2 Countdown Timer
//--------------------------------------------------------------------------------------------------
bool gt_FriezaForm2CountdownTimer_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) == 15) && (gv_abilitytomovewithtimers == 4) && (UnitGroupCount(gv_frieza, c_unitCountAlive) == 0)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_FriezaForm1CountdownTimer, false);
    TriggerDestroy(gt_FriezaForm1CountdownTimer);
    TriggerEnable(gt_FriezaForm1Begin, false);
    TriggerDestroy(gt_FriezaForm1Begin);
    TriggerEnable(gt_SetFriezaGroup, false);
    TriggerDestroy(gt_SetFriezaGroup);
    TriggerEnable(gt_AllowTraveltoFriezaSaga, false);
    TriggerDestroy(gt_AllowTraveltoFriezaSaga);
    gv_abilitytomovewithtimers -= 4;
    TriggerEnable(gt_SetFriezaGroup, false);
    TimerWindowCreate(gv_friezaSaga2form2, StringExternal("Param/Value/4A83A085"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 500, 50);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_friezaSaga2form2, 120.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_friezaSaga2form2);
    Wait(120.0, c_timeGame);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/D283C64E"));
    TimerWindowDestroy(TimerWindowLastCreated());
    gv_abilitytomovewithtimers += 5;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FriezaForm2CountdownTimer_Init () {
    gt_FriezaForm2CountdownTimer = TriggerCreate("gt_FriezaForm2CountdownTimer_Func");
    TriggerAddEventUnitDied(gt_FriezaForm2CountdownTimer, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Frieza Form 2 Begin
//--------------------------------------------------------------------------------------------------
bool gt_FriezaForm2Begin_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitCreate(1, "Corruptor", 0, 15, RegionGetCenter(RegionFromId(4)), 270.0);
    Wait(3.0, c_timeGame);
    if ((UnitIsAlive(UnitFromId(561)) == true)) {
        UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(236)), c_orderQueueReplace);
    }
    else {
        if ((UnitIsAlive(UnitFromId(562)) == true)) {
            UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(237)), c_orderQueueReplace);
        }
        else {
            if ((UnitIsAlive(UnitFromId(563)) == true)) {
                UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(238)), c_orderQueueReplace);
            }
            else {
                if ((UnitIsAlive(UnitFromId(564)) == true)) {
                    UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(239)), c_orderQueueReplace);
                }
                else {
                    if ((UnitIsAlive(UnitFromId(565)) == true)) {
                        UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(240)), c_orderQueueReplace);
                    }
                    else {
                        if ((UnitIsAlive(UnitFromId(566)) == true)) {
                            UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(241)), c_orderQueueReplace);
                        }
                        else {
                            if ((UnitIsAlive(UnitFromId(567)) == true)) {
                                UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(242)), c_orderQueueReplace);
                            }
                            else {
                            }
                        }
                    }
                }
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FriezaForm2Begin_Init () {
    gt_FriezaForm2Begin = TriggerCreate("gt_FriezaForm2Begin_Func");
    TriggerAddEventTimer(gt_FriezaForm2Begin, gv_friezaSaga2form2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set Frieza Form 2 Group
//--------------------------------------------------------------------------------------------------
bool gt_SetFriezaForm2Group_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 5))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupAddUnitGroup(gv_frieza, UnitGroup(null, 15, RegionFromId(4), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SetFriezaForm2Group_Init () {
    gt_SetFriezaForm2Group = TriggerCreate("gt_SetFriezaForm2Group_Func");
    TriggerAddEventTimePeriodic(gt_SetFriezaForm2Group, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Allow Travel to Frieza Saga 2
//--------------------------------------------------------------------------------------------------
bool gt_AllowTraveltoFriezaSaga2_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 5))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(3)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(3)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AllowTraveltoFriezaSaga2_Init () {
    gt_AllowTraveltoFriezaSaga2 = TriggerCreate("gt_AllowTraveltoFriezaSaga2_Func");
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoFriezaSaga2, UnitRefFromUnit(DataTableGetUnit(true, "Goku")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoFriezaSaga2, UnitRefFromUnit(DataTableGetUnit(true, "Vegeta")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoFriezaSaga2, UnitRefFromUnit(DataTableGetUnit(true, "Piccolo")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoFriezaSaga2, UnitRefFromUnit(DataTableGetUnit(true, "Trunks")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoFriezaSaga2, UnitRefFromUnit(DataTableGetUnit(true, "Goten")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoFriezaSaga2, UnitRefFromUnit(DataTableGetUnit(true, "Gohan")), RegionGetCenter(RegionFromId(83)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Frieza Form 3 Countdown Timer
//--------------------------------------------------------------------------------------------------
bool gt_FriezaForm3CountdownTimer_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) == 15) && (gv_abilitytomovewithtimers == 5) && (UnitGroupCount(gv_frieza, c_unitCountAlive) == 0)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_FriezaForm2CountdownTimer, false);
    TriggerDestroy(gt_FriezaForm2CountdownTimer);
    TriggerEnable(gt_FriezaForm2Begin, false);
    TriggerDestroy(gt_FriezaForm2Begin);
    TriggerEnable(gt_SetFriezaForm2Group, false);
    TriggerDestroy(gt_SetFriezaForm2Group);
    TriggerEnable(gt_AllowTraveltoFriezaSaga2, false);
    TriggerDestroy(gt_AllowTraveltoFriezaSaga2);
    gv_abilitytomovewithtimers -= 5;
    TriggerEnable(gt_SetFriezaForm2Group, false);
    TimerWindowCreate(gv_friezaSaga3form3, StringExternal("Param/Value/D1F05994"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 500, 50);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_friezaSaga3form3, 120.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_friezaSaga3form3);
    Wait(120.0, c_timeGame);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/0F3066C3"));
    TimerWindowDestroy(TimerWindowLastCreated());
    gv_abilitytomovewithtimers += 6;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FriezaForm3CountdownTimer_Init () {
    gt_FriezaForm3CountdownTimer = TriggerCreate("gt_FriezaForm3CountdownTimer_Func");
    TriggerAddEventUnitDied(gt_FriezaForm3CountdownTimer, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Frieza Form 3 Begin
//--------------------------------------------------------------------------------------------------
bool gt_FriezaForm3Begin_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitCreate(1, "WarPig", 0, 15, RegionGetCenter(RegionFromId(4)), 270.0);
    Wait(3.0, c_timeGame);
    if ((UnitIsAlive(UnitFromId(561)) == true)) {
        UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(236)), c_orderQueueReplace);
    }
    else {
        if ((UnitIsAlive(UnitFromId(562)) == true)) {
            UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(237)), c_orderQueueReplace);
        }
        else {
            if ((UnitIsAlive(UnitFromId(563)) == true)) {
                UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(238)), c_orderQueueReplace);
            }
            else {
                if ((UnitIsAlive(UnitFromId(564)) == true)) {
                    UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(239)), c_orderQueueReplace);
                }
                else {
                    if ((UnitIsAlive(UnitFromId(565)) == true)) {
                        UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(240)), c_orderQueueReplace);
                    }
                    else {
                        if ((UnitIsAlive(UnitFromId(566)) == true)) {
                            UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(241)), c_orderQueueReplace);
                        }
                        else {
                            if ((UnitIsAlive(UnitFromId(567)) == true)) {
                                UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(242)), c_orderQueueReplace);
                            }
                            else {
                            }
                        }
                    }
                }
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FriezaForm3Begin_Init () {
    gt_FriezaForm3Begin = TriggerCreate("gt_FriezaForm3Begin_Func");
    TriggerAddEventTimer(gt_FriezaForm3Begin, gv_friezaSaga3form3);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set Frieza Form 3 Group
//--------------------------------------------------------------------------------------------------
bool gt_SetFriezaForm3Group_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 6))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupAddUnitGroup(gv_frieza, UnitGroup(null, 15, RegionFromId(4), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SetFriezaForm3Group_Init () {
    gt_SetFriezaForm3Group = TriggerCreate("gt_SetFriezaForm3Group_Func");
    TriggerAddEventTimePeriodic(gt_SetFriezaForm3Group, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Allow Travel to Frieza Saga 3
//--------------------------------------------------------------------------------------------------
bool gt_AllowTraveltoFriezaSaga3_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 6))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(3)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(3)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AllowTraveltoFriezaSaga3_Init () {
    gt_AllowTraveltoFriezaSaga3 = TriggerCreate("gt_AllowTraveltoFriezaSaga3_Func");
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoFriezaSaga3, UnitRefFromUnit(DataTableGetUnit(true, "Goku")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoFriezaSaga3, UnitRefFromUnit(DataTableGetUnit(true, "Vegeta")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoFriezaSaga3, UnitRefFromUnit(DataTableGetUnit(true, "Piccolo")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoFriezaSaga3, UnitRefFromUnit(DataTableGetUnit(true, "Trunks")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoFriezaSaga3, UnitRefFromUnit(DataTableGetUnit(true, "Goten")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoFriezaSaga3, UnitRefFromUnit(DataTableGetUnit(true, "Gohan")), RegionGetCenter(RegionFromId(83)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Frieza Form 4 Countdown Timer
//--------------------------------------------------------------------------------------------------
bool gt_FriezaForm4CountdownTimer_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) == 15) && (gv_abilitytomovewithtimers == 6) && (UnitGroupCount(gv_frieza, c_unitCountAlive) == 0)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_FriezaForm3CountdownTimer, false);
    TriggerDestroy(gt_FriezaForm3CountdownTimer);
    TriggerEnable(gt_FriezaForm3Begin, false);
    TriggerDestroy(gt_FriezaForm3Begin);
    TriggerEnable(gt_SetFriezaForm3Group, false);
    TriggerDestroy(gt_SetFriezaForm3Group);
    TriggerEnable(gt_AllowTraveltoFriezaSaga3, false);
    TriggerDestroy(gt_AllowTraveltoFriezaSaga3);
    gv_abilitytomovewithtimers -= 6;
    TriggerEnable(gt_SetFriezaForm3Group, false);
    TimerWindowCreate(gv_friezaSaga4form4, StringExternal("Param/Value/AF272307"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 500, 50);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_friezaSaga4form4, 90.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_friezaSaga4form4);
    Wait(90.0, c_timeGame);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/17D0FFCF"));
    TimerWindowDestroy(TimerWindowLastCreated());
    gv_abilitytomovewithtimers += 7;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FriezaForm4CountdownTimer_Init () {
    gt_FriezaForm4CountdownTimer = TriggerCreate("gt_FriezaForm4CountdownTimer_Func");
    TriggerAddEventUnitDied(gt_FriezaForm4CountdownTimer, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Frieza Form 4 Begin
//--------------------------------------------------------------------------------------------------
bool gt_FriezaForm4Begin_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitCreate(1, "VoidRay", 0, 15, RegionGetCenter(RegionFromId(4)), 270.0);
    Wait(3.0, c_timeGame);
    if ((UnitIsAlive(UnitFromId(561)) == true)) {
        UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(236)), c_orderQueueReplace);
    }
    else {
        if ((UnitIsAlive(UnitFromId(562)) == true)) {
            UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(237)), c_orderQueueReplace);
        }
        else {
            if ((UnitIsAlive(UnitFromId(563)) == true)) {
                UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(238)), c_orderQueueReplace);
            }
            else {
                if ((UnitIsAlive(UnitFromId(564)) == true)) {
                    UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(239)), c_orderQueueReplace);
                }
                else {
                    if ((UnitIsAlive(UnitFromId(565)) == true)) {
                        UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(240)), c_orderQueueReplace);
                    }
                    else {
                        if ((UnitIsAlive(UnitFromId(566)) == true)) {
                            UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(241)), c_orderQueueReplace);
                        }
                        else {
                            if ((UnitIsAlive(UnitFromId(567)) == true)) {
                                UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(242)), c_orderQueueReplace);
                            }
                            else {
                            }
                        }
                    }
                }
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FriezaForm4Begin_Init () {
    gt_FriezaForm4Begin = TriggerCreate("gt_FriezaForm4Begin_Func");
    TriggerAddEventTimer(gt_FriezaForm4Begin, gv_friezaSaga4form4);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set Frieza Form 4 Group
//--------------------------------------------------------------------------------------------------
bool gt_SetFriezaForm4Group_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupAddUnitGroup(gv_frieza, UnitGroup(null, 15, RegionFromId(4), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SetFriezaForm4Group_Init () {
    gt_SetFriezaForm4Group = TriggerCreate("gt_SetFriezaForm4Group_Func");
    TriggerAddEventTimePeriodic(gt_SetFriezaForm4Group, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Allow Travel to Frieza Saga 4
//--------------------------------------------------------------------------------------------------
bool gt_AllowTraveltoFriezaSaga4_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(3)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(3)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AllowTraveltoFriezaSaga4_Init () {
    gt_AllowTraveltoFriezaSaga4 = TriggerCreate("gt_AllowTraveltoFriezaSaga4_Func");
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoFriezaSaga4, UnitRefFromUnit(DataTableGetUnit(true, "Goku")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoFriezaSaga4, UnitRefFromUnit(DataTableGetUnit(true, "Vegeta")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoFriezaSaga4, UnitRefFromUnit(DataTableGetUnit(true, "Piccolo")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoFriezaSaga4, UnitRefFromUnit(DataTableGetUnit(true, "Trunks")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoFriezaSaga4, UnitRefFromUnit(DataTableGetUnit(true, "Goten")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoFriezaSaga4, UnitRefFromUnit(DataTableGetUnit(true, "Gohan")), RegionGetCenter(RegionFromId(83)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Frieza Final Form Countdown Timer
//--------------------------------------------------------------------------------------------------
bool gt_FriezaFinalFormCountdownTimer_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) == 15) && (gv_abilitytomovewithtimers == 7) && (UnitGroupCount(gv_frieza, c_unitCountAlive) == 0)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_FriezaForm4CountdownTimer, false);
    TriggerDestroy(gt_FriezaForm4CountdownTimer);
    TriggerEnable(gt_FriezaForm4Begin, false);
    TriggerDestroy(gt_FriezaForm4Begin);
    TriggerEnable(gt_SetFriezaForm4Group, false);
    TriggerDestroy(gt_SetFriezaForm4Group);
    TriggerEnable(gt_AllowTraveltoFriezaSaga4, false);
    TriggerDestroy(gt_AllowTraveltoFriezaSaga4);
    gv_abilitytomovewithtimers -= 7;
    TriggerEnable(gt_SetFriezaForm4Group, false);
    TimerWindowCreate(gv_friezaSaga5100power, StringExternal("Param/Value/E4C38E9A"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 500, 50);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_friezaSaga5100power, 90.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_friezaSaga5100power);
    Wait(90.0, c_timeGame);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/3E8197A3"));
    TimerWindowDestroy(TimerWindowLastCreated());
    gv_abilitytomovewithtimers += 8;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FriezaFinalFormCountdownTimer_Init () {
    gt_FriezaFinalFormCountdownTimer = TriggerCreate("gt_FriezaFinalFormCountdownTimer_Func");
    TriggerAddEventUnitDied(gt_FriezaFinalFormCountdownTimer, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Frieza Final Form Begin
//--------------------------------------------------------------------------------------------------
bool gt_FriezaFinalFormBegin_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitCreate(1, "Mohandar", 0, 15, RegionGetCenter(RegionFromId(4)), 270.0);
    RegionAttachToUnit(RegionFromId(98), UnitLastCreated(), Point(0.0, 0.0));
    Wait(3.0, c_timeGame);
    if ((UnitIsAlive(UnitFromId(561)) == true)) {
        UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(236)), c_orderQueueReplace);
    }
    else {
        if ((UnitIsAlive(UnitFromId(562)) == true)) {
            UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(237)), c_orderQueueReplace);
        }
        else {
            if ((UnitIsAlive(UnitFromId(563)) == true)) {
                UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(238)), c_orderQueueReplace);
            }
            else {
                if ((UnitIsAlive(UnitFromId(564)) == true)) {
                    UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(239)), c_orderQueueReplace);
                }
                else {
                    if ((UnitIsAlive(UnitFromId(565)) == true)) {
                        UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(240)), c_orderQueueReplace);
                    }
                    else {
                        if ((UnitIsAlive(UnitFromId(566)) == true)) {
                            UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(241)), c_orderQueueReplace);
                        }
                        else {
                            if ((UnitIsAlive(UnitFromId(567)) == true)) {
                                UnitGroupIssueOrder(gv_frieza, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(242)), c_orderQueueReplace);
                            }
                            else {
                            }
                        }
                    }
                }
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FriezaFinalFormBegin_Init () {
    gt_FriezaFinalFormBegin = TriggerCreate("gt_FriezaFinalFormBegin_Func");
    TriggerAddEventTimer(gt_FriezaFinalFormBegin, gv_friezaSaga5100power);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set Frieza Final Form Group
//--------------------------------------------------------------------------------------------------
bool gt_SetFriezaFinalFormGroup_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 8))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupAddUnitGroup(gv_frieza, UnitGroup(null, 15, RegionFromId(4), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SetFriezaFinalFormGroup_Init () {
    gt_SetFriezaFinalFormGroup = TriggerCreate("gt_SetFriezaFinalFormGroup_Func");
    TriggerAddEventTimePeriodic(gt_SetFriezaFinalFormGroup, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Allow Travel to Frieza Saga 5
//--------------------------------------------------------------------------------------------------
bool gt_AllowTraveltoFriezaSaga5_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 8))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(3)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(3)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AllowTraveltoFriezaSaga5_Init () {
    gt_AllowTraveltoFriezaSaga5 = TriggerCreate("gt_AllowTraveltoFriezaSaga5_Func");
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoFriezaSaga5, UnitRefFromUnit(DataTableGetUnit(true, "Goku")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoFriezaSaga5, UnitRefFromUnit(DataTableGetUnit(true, "Vegeta")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoFriezaSaga5, UnitRefFromUnit(DataTableGetUnit(true, "Piccolo")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoFriezaSaga5, UnitRefFromUnit(DataTableGetUnit(true, "Trunks")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoFriezaSaga5, UnitRefFromUnit(DataTableGetUnit(true, "Goten")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoFriezaSaga5, UnitRefFromUnit(DataTableGetUnit(true, "Gohan")), RegionGetCenter(RegionFromId(83)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Androids 19 and 20 Countdown Timer
//--------------------------------------------------------------------------------------------------
bool gt_Androids19and20CountdownTimer_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) == 15) && (gv_abilitytomovewithtimers == 8) && (UnitGroupCount(gv_frieza, c_unitCountAlive) == 0)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_FriezaFinalFormCountdownTimer, false);
    TriggerDestroy(gt_FriezaFinalFormCountdownTimer);
    TriggerEnable(gt_FriezaFinalFormBegin, false);
    TriggerDestroy(gt_FriezaFinalFormBegin);
    TriggerEnable(gt_SetFriezaFinalFormGroup, false);
    TriggerDestroy(gt_SetFriezaFinalFormGroup);
    TriggerEnable(gt_AllowTraveltoFriezaSaga5, false);
    TriggerDestroy(gt_AllowTraveltoFriezaSaga5);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/63DABE5A"));
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/92B8B524"));
    gv_abilitytomovewithtimers -= 8;
    TriggerEnable(gt_SetFriezaFinalFormGroup, false);
    TimerWindowCreate(gv_androidSaga1920gero, StringExternal("Param/Value/5F2E6479"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 500, 50);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_androidSaga1920gero, 360.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_androidSaga1920gero);
    Wait(360.0, c_timeGame);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/771EED40"));
    TimerWindowDestroy(TimerWindowLastCreated());
    gv_abilitytomovewithtimers += 9;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Androids19and20CountdownTimer_Init () {
    gt_Androids19and20CountdownTimer = TriggerCreate("gt_Androids19and20CountdownTimer_Func");
    TriggerAddEventUnitDied(gt_Androids19and20CountdownTimer, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Android saga Begin 2
//--------------------------------------------------------------------------------------------------
bool gt_AndroidsagaBegin2_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitCreate(1, "HammerSecurity", 0, 15, RegionGetCenter(RegionFromId(100)), 270.0);
    Wait(3.0, c_timeGame);
    UnitCreate(1, "SpartanCompany", 0, 15, RegionGetCenter(RegionFromId(100)), 270.0);
    Wait(3.0, c_timeGame);
    while ((libNtve_gf_UnitGroupIsDead(gv_androids) == false)) {
        UnitGroupIssueOrder(gv_androids, OrderTargetingPoint(AbilityCommand("attack", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
        UnitGroupWaitUntilIdle(gv_androids, 0, true);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AndroidsagaBegin2_Init () {
    gt_AndroidsagaBegin2 = TriggerCreate("gt_AndroidsagaBegin2_Func");
    TriggerAddEventTimer(gt_AndroidsagaBegin2, gv_androidSaga1920gero);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set Android Group
//--------------------------------------------------------------------------------------------------
bool gt_SetAndroidGroup_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 9))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupAddUnitGroup(gv_androids, UnitGroup(null, 15, RegionFromId(100), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SetAndroidGroup_Init () {
    gt_SetAndroidGroup = TriggerCreate("gt_SetAndroidGroup_Func");
    TriggerAddEventTimePeriodic(gt_SetAndroidGroup, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Allow Travel to Android saga
//--------------------------------------------------------------------------------------------------
bool gt_AllowTraveltoAndroidsaga_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 9))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(99)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(99)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AllowTraveltoAndroidsaga_Init () {
    gt_AllowTraveltoAndroidsaga = TriggerCreate("gt_AllowTraveltoAndroidsaga_Func");
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoAndroidsaga, UnitRefFromUnit(DataTableGetUnit(true, "Goku")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoAndroidsaga, UnitRefFromUnit(DataTableGetUnit(true, "Vegeta")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoAndroidsaga, UnitRefFromUnit(DataTableGetUnit(true, "Piccolo")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoAndroidsaga, UnitRefFromUnit(DataTableGetUnit(true, "Trunks")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoAndroidsaga, UnitRefFromUnit(DataTableGetUnit(true, "Goten")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoAndroidsaga, UnitRefFromUnit(DataTableGetUnit(true, "Gohan")), RegionGetCenter(RegionFromId(83)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Androids 17 and 18 Countdown Timer
//--------------------------------------------------------------------------------------------------
bool gt_Androids17and18CountdownTimer_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) == 15) && (gv_abilitytomovewithtimers == 9) && (UnitGroupCount(gv_androids, c_unitCountAlive) == 0)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(gt_KillEastCityTriggers, true, true);
    TriggerEnable(gt_Androids19and20CountdownTimer, false);
    TriggerDestroy(gt_Androids19and20CountdownTimer);
    TriggerEnable(gt_AndroidsagaBegin2, false);
    TriggerDestroy(gt_AndroidsagaBegin2);
    TriggerEnable(gt_SetAndroidGroup, false);
    TriggerDestroy(gt_SetAndroidGroup);
    TriggerEnable(gt_AllowTraveltoAndroidsaga, false);
    TriggerDestroy(gt_AllowTraveltoAndroidsaga);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/290A8614"));
    gv_abilitytomovewithtimers -= 9;
    TriggerEnable(gt_SetAndroidGroup, false);
    TimerWindowCreate(gv_androidSaga2161718, StringExternal("Param/Value/0467815D"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 500, 50);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_androidSaga2161718, 150.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_androidSaga2161718);
    Wait(150.0, c_timeGame);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/1D28FD41"));
    TimerWindowDestroy(TimerWindowLastCreated());
    gv_abilitytomovewithtimers += 10;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Androids17and18CountdownTimer_Init () {
    gt_Androids17and18CountdownTimer = TriggerCreate("gt_Androids17and18CountdownTimer_Func");
    TriggerAddEventUnitDied(gt_Androids17and18CountdownTimer, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Android saga Begin 3
//--------------------------------------------------------------------------------------------------
bool gt_AndroidsagaBegin3_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitCreate(1, "Raynor", 0, 15, RegionGetCenter(RegionFromId(103)), 270.0);
    Wait(3.0, c_timeGame);
    UnitCreate(1, "Nova", 0, 15, RegionGetCenter(RegionFromId(103)), 270.0);
    Wait(3.0, c_timeGame);
    while ((libNtve_gf_UnitGroupIsDead(gv_androids) == false)) {
        UnitGroupIssueOrder(gv_androids, OrderTargetingPoint(AbilityCommand("attack", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
        UnitGroupWaitUntilIdle(gv_androids, 0, true);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AndroidsagaBegin3_Init () {
    gt_AndroidsagaBegin3 = TriggerCreate("gt_AndroidsagaBegin3_Func");
    TriggerAddEventTimer(gt_AndroidsagaBegin3, gv_androidSaga2161718);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set Android Group 2
//--------------------------------------------------------------------------------------------------
bool gt_SetAndroidGroup2_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 10))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupAddUnitGroup(gv_androids, UnitGroup(null, 15, RegionFromId(103), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SetAndroidGroup2_Init () {
    gt_SetAndroidGroup2 = TriggerCreate("gt_SetAndroidGroup2_Func");
    TriggerAddEventTimePeriodic(gt_SetAndroidGroup2, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Allow Travel to Android saga 2
//--------------------------------------------------------------------------------------------------
bool gt_AllowTraveltoAndroidsaga2_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 10))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(104)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(104)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AllowTraveltoAndroidsaga2_Init () {
    gt_AllowTraveltoAndroidsaga2 = TriggerCreate("gt_AllowTraveltoAndroidsaga2_Func");
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoAndroidsaga2, UnitRefFromUnit(DataTableGetUnit(true, "Goku")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoAndroidsaga2, UnitRefFromUnit(DataTableGetUnit(true, "Vegeta")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoAndroidsaga2, UnitRefFromUnit(DataTableGetUnit(true, "Piccolo")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoAndroidsaga2, UnitRefFromUnit(DataTableGetUnit(true, "Trunks")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoAndroidsaga2, UnitRefFromUnit(DataTableGetUnit(true, "Goten")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoAndroidsaga2, UnitRefFromUnit(DataTableGetUnit(true, "Gohan")), RegionGetCenter(RegionFromId(83)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Cell Saga countdown Timer
//--------------------------------------------------------------------------------------------------
bool gt_CellSagacountdownTimer_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) == 15) && (gv_abilitytomovewithtimers == 10) && (UnitGroupCount(gv_androids, c_unitCountAlive) == 0)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(gt_KillCentralCityTriggers, true, true);
    TriggerEnable(gt_Androids17and18CountdownTimer, false);
    TriggerDestroy(gt_Androids17and18CountdownTimer);
    TriggerEnable(gt_AndroidsagaBegin3, false);
    TriggerDestroy(gt_AndroidsagaBegin3);
    TriggerEnable(gt_SetAndroidGroup2, false);
    TriggerDestroy(gt_SetAndroidGroup2);
    TriggerEnable(gt_AllowTraveltoAndroidsaga2, false);
    TriggerDestroy(gt_AllowTraveltoAndroidsaga2);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/2F85EA26"));
    gv_abilitytomovewithtimers -= 10;
    TriggerEnable(gt_SetAndroidGroup2, false);
    TimerWindowCreate(gv_cellSagaform1, StringExternal("Param/Value/17638C1F"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 500, 50);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_cellSagaform1, 150.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_cellSagaform1);
    Wait(150.0, c_timeGame);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/950FFFA2"));
    TimerWindowDestroy(TimerWindowLastCreated());
    gv_abilitytomovewithtimers += 11;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CellSagacountdownTimer_Init () {
    gt_CellSagacountdownTimer = TriggerCreate("gt_CellSagacountdownTimer_Func");
    TriggerAddEventUnitDied(gt_CellSagacountdownTimer, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Cell saga Begin
//--------------------------------------------------------------------------------------------------
bool gt_CellsagaBegin_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitCreate(1, "InfestedCivilian", 0, 15, RegionGetCenter(RegionFromId(106)), 270.0);
    Wait(3.0, c_timeGame);
    while ((libNtve_gf_UnitGroupIsDead(gv_cell) == false)) {
        UnitGroupIssueOrder(gv_cell, OrderTargetingPoint(AbilityCommand("attack", 0), gv_Civillian_Point_Array_West_City[RandomInt(1, 22)]), c_orderQueueReplace);
        UnitGroupWaitUntilIdle(gv_cell, 0, true);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CellsagaBegin_Init () {
    gt_CellsagaBegin = TriggerCreate("gt_CellsagaBegin_Func");
    TriggerAddEventTimer(gt_CellsagaBegin, gv_cellSagaform1);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set Cell Group
//--------------------------------------------------------------------------------------------------
bool gt_SetCellGroup_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 11))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupAddUnitGroup(gv_cell, UnitGroup(null, 15, RegionFromId(106), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SetCellGroup_Init () {
    gt_SetCellGroup = TriggerCreate("gt_SetCellGroup_Func");
    TriggerAddEventTimePeriodic(gt_SetCellGroup, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Allow Travel to cell saga
//--------------------------------------------------------------------------------------------------
bool gt_AllowTraveltocellsaga_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 11))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(105)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(105)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AllowTraveltocellsaga_Init () {
    gt_AllowTraveltocellsaga = TriggerCreate("gt_AllowTraveltocellsaga_Func");
    TriggerAddEventUnitRangePoint(gt_AllowTraveltocellsaga, UnitRefFromUnit(DataTableGetUnit(true, "Goku")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltocellsaga, UnitRefFromUnit(DataTableGetUnit(true, "Vegeta")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltocellsaga, UnitRefFromUnit(DataTableGetUnit(true, "Piccolo")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltocellsaga, UnitRefFromUnit(DataTableGetUnit(true, "Trunks")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltocellsaga, UnitRefFromUnit(DataTableGetUnit(true, "Goten")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltocellsaga, UnitRefFromUnit(DataTableGetUnit(true, "Gohan")), RegionGetCenter(RegionFromId(83)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Cell Saga form 2 countdown Timer
//--------------------------------------------------------------------------------------------------
bool gt_CellSagaform2countdownTimer_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) == 15) && (gv_abilitytomovewithtimers == 11) && (UnitGroupCount(gv_cell, c_unitCountAlive) == 0)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_CellSagacountdownTimer, false);
    TriggerDestroy(gt_CellSagacountdownTimer);
    TriggerEnable(gt_CellsagaBegin, false);
    TriggerDestroy(gt_CellsagaBegin);
    TriggerEnable(gt_SetCellGroup, false);
    TriggerDestroy(gt_SetCellGroup);
    TriggerEnable(gt_AllowTraveltocellsaga, false);
    TriggerDestroy(gt_AllowTraveltocellsaga);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/75E960D7"));
    gv_abilitytomovewithtimers -= 11;
    TriggerEnable(gt_SetCellGroup, false);
    TimerWindowCreate(gv_cellSaga2form2, StringExternal("Param/Value/DEBC1F72"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 500, 50);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_cellSaga2form2, 150.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_cellSaga2form2);
    Wait(150.0, c_timeGame);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/0720387A"));
    TimerWindowDestroy(TimerWindowLastCreated());
    gv_abilitytomovewithtimers += 12;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CellSagaform2countdownTimer_Init () {
    gt_CellSagaform2countdownTimer = TriggerCreate("gt_CellSagaform2countdownTimer_Func");
    TriggerAddEventUnitDied(gt_CellSagaform2countdownTimer, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Cell saga Begin 2
//--------------------------------------------------------------------------------------------------
bool gt_CellsagaBegin2_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitCreate(1, "Lurker", 0, 15, RegionGetCenter(RegionFromId(106)), 270.0);
    Wait(3.0, c_timeGame);
    while ((libNtve_gf_UnitGroupIsDead(gv_cell) == false)) {
        UnitGroupIssueOrder(gv_cell, OrderTargetingPoint(AbilityCommand("attack", 0), gv_Civillian_Point_Array_West_City[RandomInt(1, 22)]), c_orderQueueReplace);
        UnitGroupWaitUntilIdle(gv_cell, 0, true);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CellsagaBegin2_Init () {
    gt_CellsagaBegin2 = TriggerCreate("gt_CellsagaBegin2_Func");
    TriggerAddEventTimer(gt_CellsagaBegin2, gv_cellSaga2form2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set Cell Group 2
//--------------------------------------------------------------------------------------------------
bool gt_SetCellGroup2_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 12))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupAddUnitGroup(gv_cell, UnitGroup(null, 15, RegionFromId(106), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SetCellGroup2_Init () {
    gt_SetCellGroup2 = TriggerCreate("gt_SetCellGroup2_Func");
    TriggerAddEventTimePeriodic(gt_SetCellGroup2, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Allow Travel to cell saga form 2
//--------------------------------------------------------------------------------------------------
bool gt_AllowTraveltocellsagaform2_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 12))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(105)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(105)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AllowTraveltocellsagaform2_Init () {
    gt_AllowTraveltocellsagaform2 = TriggerCreate("gt_AllowTraveltocellsagaform2_Func");
    TriggerAddEventUnitRangePoint(gt_AllowTraveltocellsagaform2, UnitRefFromUnit(DataTableGetUnit(true, "Goku")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltocellsagaform2, UnitRefFromUnit(DataTableGetUnit(true, "Vegeta")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltocellsagaform2, UnitRefFromUnit(DataTableGetUnit(true, "Piccolo")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltocellsagaform2, UnitRefFromUnit(DataTableGetUnit(true, "Trunks")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltocellsagaform2, UnitRefFromUnit(DataTableGetUnit(true, "Goten")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltocellsagaform2, UnitRefFromUnit(DataTableGetUnit(true, "Gohan")), RegionGetCenter(RegionFromId(83)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Cell Games Countdown Timer
//--------------------------------------------------------------------------------------------------
bool gt_CellGamesCountdownTimer_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) == 15) && (gv_abilitytomovewithtimers == 12) && (UnitGroupCount(gv_cell, c_unitCountAlive) == 0)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(gt_KillWestCityTriggers, true, true);
    TriggerEnable(gt_CellSagaform2countdownTimer, false);
    TriggerDestroy(gt_CellSagaform2countdownTimer);
    TriggerEnable(gt_CellsagaBegin2, false);
    TriggerDestroy(gt_CellsagaBegin2);
    TriggerEnable(gt_SetCellGroup2, false);
    TriggerDestroy(gt_SetCellGroup2);
    TriggerEnable(gt_AllowTraveltocellsagaform2, false);
    TriggerDestroy(gt_AllowTraveltocellsagaform2);
    gv_abilitytomovewithtimers -= 12;
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/4BFC7883"));
    Wait(10.0, c_timeGame);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/A02A4E46"));
    TriggerEnable(gt_SetCellGroup2, false);
    TimerWindowCreate(gv_cellSaga3tournament, StringExternal("Param/Value/6AA34084"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 500, 50);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_cellSaga3tournament, 150.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_cellSaga3tournament);
    Wait(150.0, c_timeGame);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/1D238689"));
    TimerWindowDestroy(TimerWindowLastCreated());
    gv_abilitytomovewithtimers += 13;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CellGamesCountdownTimer_Init () {
    gt_CellGamesCountdownTimer = TriggerCreate("gt_CellGamesCountdownTimer_Func");
    TriggerAddEventUnitDied(gt_CellGamesCountdownTimer, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Cell Games Begin
//--------------------------------------------------------------------------------------------------
bool gt_CellGamesBegin_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    SoundChannelMute(PlayerGroupAll(), c_soundCategoryVoice, false);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, true);
    SoundPlay(SoundLink("PerfectCellSong", -1), PlayerGroupAll(), 100.0, 0.0);
    UnitCreate(1, "InfestedTerranCampaign", 0, 15, RegionGetCenter(RegionFromId(108)), 270.0);
    gv_cellforRemoval[0] = UnitLastCreated();
    Wait(0.1, c_timeGame);
    UnitCreate(6, "Drone", 0, 15, RegionGetCenter(RegionFromId(108)), 270.0);
    Wait(0.1, c_timeGame);
    TriggerExecute(gt_StoptransformingbeforeCellGames, true, true);
    Wait(5.0, c_timeGame);
    TriggerExecute(gt_WarptoCellGames, true, true);
    Wait(1.0, c_timeGame);
    libNtve_gf_SwooshCamera(1, ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(109)), 1.5);
    libNtve_gf_SwooshCamera(2, ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(109)), 1.5);
    libNtve_gf_SwooshCamera(3, ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(109)), 1.5);
    libNtve_gf_SwooshCamera(4, ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(109)), 1.5);
    libNtve_gf_SwooshCamera(5, ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(109)), 1.5);
    libNtve_gf_SwooshCamera(6, ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(109)), 1.5);
    TriggerEnable(gt_Losingconditiontoperfectcell, true);
    Wait(1.0, c_timeGame);
    TriggerEnable(gt_Removeplayerswholeft, true);
    libNtve_gf_SetAllianceOneWay(15, 7, 1);
    TriggerEnable(gt_CellAI, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CellGamesBegin_Init () {
    gt_CellGamesBegin = TriggerCreate("gt_CellGamesBegin_Func");
    TriggerAddEventTimer(gt_CellGamesBegin, gv_cellSaga3tournament);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set Perfect Cell Group
//--------------------------------------------------------------------------------------------------
bool gt_SetPerfectCellGroup_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 13))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupAddUnitGroup(gv_cell, UnitGroup(null, 15, RegionFromId(108), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SetPerfectCellGroup_Init () {
    gt_SetPerfectCellGroup = TriggerCreate("gt_SetPerfectCellGroup_Func");
    TriggerAddEventTimePeriodic(gt_SetPerfectCellGroup, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Warp to Cell Games
//--------------------------------------------------------------------------------------------------
bool gt_WarptoCellGames_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupAdd(gv_cellGames, RegionGetAttachUnit(RegionFromId(84)));
    UnitSetPropertyFixed(RegionGetAttachUnit(RegionFromId(84)), c_unitPropLifePercent, 100.0);
    Wait(0.1, c_timeGame);
    UnitGroupAdd(gv_cellGames, RegionGetAttachUnit(RegionFromId(85)));
    UnitSetPropertyFixed(RegionGetAttachUnit(RegionFromId(85)), c_unitPropLifePercent, 100.0);
    Wait(0.1, c_timeGame);
    UnitGroupAdd(gv_cellGames, RegionGetAttachUnit(RegionFromId(86)));
    UnitSetPropertyFixed(RegionGetAttachUnit(RegionFromId(86)), c_unitPropLifePercent, 100.0);
    Wait(0.1, c_timeGame);
    UnitGroupAdd(gv_cellGames, RegionGetAttachUnit(RegionFromId(87)));
    UnitSetPropertyFixed(RegionGetAttachUnit(RegionFromId(87)), c_unitPropLifePercent, 100.0);
    Wait(0.1, c_timeGame);
    UnitGroupAdd(gv_cellGames, RegionGetAttachUnit(RegionFromId(88)));
    UnitSetPropertyFixed(RegionGetAttachUnit(RegionFromId(88)), c_unitPropLifePercent, 100.0);
    Wait(0.1, c_timeGame);
    UnitGroupAdd(gv_cellGames, RegionGetAttachUnit(RegionFromId(89)));
    UnitSetPropertyFixed(RegionGetAttachUnit(RegionFromId(89)), c_unitPropLifePercent, 100.0);
    Wait(0.1, c_timeGame);
    UnitGroupLoopBegin(gv_cellGames);
    for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
        UnitSetOwner(UnitGroupLoopCurrent(), 0, true);
        Wait(0.1, c_timeGame);
    }
    UnitGroupLoopEnd();
    UnitGroupLoopBegin(gv_cellGames);
    for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
        UnitSetPosition(UnitGroupLoopCurrent(), RegionGetCenter(RegionFromId(109)), false);
        UnitIssueOrder(UnitGroupLoopCurrent(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    }
    UnitGroupLoopEnd();
    TriggerExecute(gt_Givecontrolback, true, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_WarptoCellGames_Init () {
    gt_WarptoCellGames = TriggerCreate("gt_WarptoCellGames_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Give control back
//--------------------------------------------------------------------------------------------------
bool gt_Givecontrolback_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    if ((libNtve_gf_UnitInRegion(RegionGetAttachUnit(RegionFromId(84)), RegionFromId(109)) == true) && (UnitGetOwner(RegionGetAttachUnit(RegionFromId(84))) == 0)) {
        UnitSetOwner(RegionGetAttachUnit(RegionFromId(84)), UnitGetOwner(UnitFromId(229)), true);
        Wait(0.1, c_timeGame);
        UnitSetOwner(UnitFromId(135), UnitGetOwner(UnitFromId(229)), true);
        Wait(0.1, c_timeGame);
    }
    else {
    }
    if ((libNtve_gf_UnitInRegion(RegionGetAttachUnit(RegionFromId(85)), RegionFromId(109)) == true) && (UnitGetOwner(RegionGetAttachUnit(RegionFromId(85))) == 0)) {
        UnitSetOwner(RegionGetAttachUnit(RegionFromId(85)), UnitGetOwner(UnitFromId(230)), true);
        Wait(0.1, c_timeGame);
        UnitSetOwner(UnitFromId(158), UnitGetOwner(UnitFromId(230)), true);
        Wait(0.1, c_timeGame);
    }
    else {
    }
    if ((libNtve_gf_UnitInRegion(RegionGetAttachUnit(RegionFromId(86)), RegionFromId(109)) == true) && (UnitGetOwner(RegionGetAttachUnit(RegionFromId(86))) == 0)) {
        UnitSetOwner(RegionGetAttachUnit(RegionFromId(86)), UnitGetOwner(UnitFromId(231)), true);
        Wait(0.1, c_timeGame);
        UnitSetOwner(UnitFromId(159), UnitGetOwner(UnitFromId(231)), true);
        Wait(0.1, c_timeGame);
    }
    else {
    }
    if ((libNtve_gf_UnitInRegion(RegionGetAttachUnit(RegionFromId(87)), RegionFromId(109)) == true) && (UnitGetOwner(RegionGetAttachUnit(RegionFromId(87))) == 0)) {
        UnitSetOwner(RegionGetAttachUnit(RegionFromId(87)), UnitGetOwner(UnitFromId(232)), true);
        Wait(0.1, c_timeGame);
        UnitSetOwner(UnitFromId(160), UnitGetOwner(UnitFromId(232)), true);
        Wait(0.1, c_timeGame);
    }
    else {
    }
    if ((libNtve_gf_UnitInRegion(RegionGetAttachUnit(RegionFromId(88)), RegionFromId(109)) == true) && (UnitGetOwner(RegionGetAttachUnit(RegionFromId(88))) == 0)) {
        UnitSetOwner(RegionGetAttachUnit(RegionFromId(88)), UnitGetOwner(UnitFromId(233)), true);
        Wait(0.1, c_timeGame);
        UnitSetOwner(UnitFromId(162), UnitGetOwner(UnitFromId(233)), true);
        Wait(0.1, c_timeGame);
    }
    else {
    }
    if ((libNtve_gf_UnitInRegion(RegionGetAttachUnit(RegionFromId(89)), RegionFromId(109)) == true) && (UnitGetOwner(RegionGetAttachUnit(RegionFromId(89))) == 0)) {
        UnitSetOwner(RegionGetAttachUnit(RegionFromId(89)), UnitGetOwner(UnitFromId(234)), true);
        Wait(0.1, c_timeGame);
        UnitSetOwner(UnitFromId(163), UnitGetOwner(UnitFromId(234)), true);
        Wait(0.1, c_timeGame);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Givecontrolback_Init () {
    gt_Givecontrolback = TriggerCreate("gt_Givecontrolback_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Remove players who left
//--------------------------------------------------------------------------------------------------
bool gt_Removeplayerswholeft_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) == 7) && (libNtve_gf_UnitInRegion(EventUnit(), RegionFromId(110)) == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(133)), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Removeplayerswholeft_Init () {
    gt_Removeplayerswholeft = TriggerCreate("gt_Removeplayerswholeft_Func");
    TriggerEnable(gt_Removeplayerswholeft, false);
    TriggerAddEventUnitStartedAttack2(gt_Removeplayerswholeft, null, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Stop transforming before Cell Games
//--------------------------------------------------------------------------------------------------
bool gt_StoptransformingbeforeCellGames_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetOwner(UnitFromId(160), 0, true);
    UnitSetOwner(UnitFromId(135), 0, true);
    UnitSetOwner(UnitFromId(158), 0, true);
    UnitSetOwner(UnitFromId(162), 0, true);
    UnitSetOwner(UnitFromId(163), 0, true);
    UnitSetOwner(UnitFromId(159), 0, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StoptransformingbeforeCellGames_Init () {
    gt_StoptransformingbeforeCellGames = TriggerCreate("gt_StoptransformingbeforeCellGames_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Cell AI
//--------------------------------------------------------------------------------------------------
bool gt_CellAI_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupLoopBegin(UnitGroup(null, 15, RegionFromId(110), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0));
    for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
        UnitIssueOrder(UnitGroupLoopCurrent(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitGroupClosestToPoint(UnitGroupAlliance(UnitGetOwner(UnitGroupLoopCurrent()), c_unitAllianceEnemy, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), UnitGetPosition(UnitGroupLoopCurrent())))), c_orderQueueReplace);
    }
    UnitGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CellAI_Init () {
    gt_CellAI = TriggerCreate("gt_CellAI_Func");
    TriggerEnable(gt_CellAI, false);
    TriggerAddEventTimePeriodic(gt_CellAI, 0.5, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Remove Units from Cell games Group if not controlled
//--------------------------------------------------------------------------------------------------
bool gt_RemoveUnitsfromCellgamesGroupifnotcontrolled_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupRemove(gv_cellGames, EventUnit());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RemoveUnitsfromCellgamesGroupifnotcontrolled_Init () {
    gt_RemoveUnitsfromCellgamesGroupifnotcontrolled = TriggerCreate("gt_RemoveUnitsfromCellgamesGroupifnotcontrolled_Func");
    TriggerEnable(gt_RemoveUnitsfromCellgamesGroupifnotcontrolled, false);
    TriggerAddEventUnitRegion(gt_RemoveUnitsfromCellgamesGroupifnotcontrolled, null, RegionFromId(2), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Add units to Cell Games if they transform
//--------------------------------------------------------------------------------------------------
bool gt_AddunitstoCellGamesiftheytransform_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    if ((libNtve_gf_UnitInRegion(RegionGetAttachUnit(RegionFromId(84)), RegionFromId(110)) == true)) {
        UnitGroupAdd(gv_cellGames, RegionGetAttachUnit(RegionFromId(84)));
    }
    else {
    }
    if ((libNtve_gf_UnitInRegion(RegionGetAttachUnit(RegionFromId(85)), RegionFromId(110)) == true)) {
        UnitGroupAdd(gv_cellGames, RegionGetAttachUnit(RegionFromId(85)));
    }
    else {
    }
    if ((libNtve_gf_UnitInRegion(RegionGetAttachUnit(RegionFromId(86)), RegionFromId(110)) == true)) {
        UnitGroupAdd(gv_cellGames, RegionGetAttachUnit(RegionFromId(86)));
    }
    else {
    }
    if ((libNtve_gf_UnitInRegion(RegionGetAttachUnit(RegionFromId(87)), RegionFromId(110)) == true)) {
        UnitGroupAdd(gv_cellGames, RegionGetAttachUnit(RegionFromId(87)));
    }
    else {
    }
    if ((libNtve_gf_UnitInRegion(RegionGetAttachUnit(RegionFromId(88)), RegionFromId(110)) == true)) {
        UnitGroupAdd(gv_cellGames, RegionGetAttachUnit(RegionFromId(88)));
    }
    else {
    }
    if ((libNtve_gf_UnitInRegion(RegionGetAttachUnit(RegionFromId(89)), RegionFromId(110)) == true)) {
        UnitGroupAdd(gv_cellGames, RegionGetAttachUnit(RegionFromId(89)));
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AddunitstoCellGamesiftheytransform_Init () {
    gt_AddunitstoCellGamesiftheytransform = TriggerCreate("gt_AddunitstoCellGamesiftheytransform_Func");
    TriggerEnable(gt_AddunitstoCellGamesiftheytransform, false);
    TriggerAddEventTimePeriodic(gt_AddunitstoCellGamesiftheytransform, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Unit dies during cell games remove them from group
//--------------------------------------------------------------------------------------------------
bool gt_Unitdiesduringcellgamesremovethemfromgroup_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    if ((EventUnit() == RegionGetAttachUnit(RegionFromId(84)))) {
        UnitGroupRemove(gv_cellGames, EventUnit());
    }
    else {
    }
    if ((EventUnit() == RegionGetAttachUnit(RegionFromId(85)))) {
        UnitGroupRemove(gv_cellGames, EventUnit());
    }
    else {
    }
    if ((EventUnit() == RegionGetAttachUnit(RegionFromId(86)))) {
        UnitGroupRemove(gv_cellGames, EventUnit());
    }
    else {
    }
    if ((EventUnit() == RegionGetAttachUnit(RegionFromId(87)))) {
        UnitGroupRemove(gv_cellGames, EventUnit());
    }
    else {
    }
    if ((EventUnit() == RegionGetAttachUnit(RegionFromId(88)))) {
        UnitGroupRemove(gv_cellGames, EventUnit());
    }
    else {
    }
    if ((EventUnit() == RegionGetAttachUnit(RegionFromId(89)))) {
        UnitGroupRemove(gv_cellGames, EventUnit());
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Unitdiesduringcellgamesremovethemfromgroup_Init () {
    gt_Unitdiesduringcellgamesremovethemfromgroup = TriggerCreate("gt_Unitdiesduringcellgamesremovethemfromgroup_Func");
    TriggerEnable(gt_Unitdiesduringcellgamesremovethemfromgroup, false);
    TriggerAddEventUnitDied(gt_Unitdiesduringcellgamesremovethemfromgroup, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Super Perfect Cell Countdown Timer
//--------------------------------------------------------------------------------------------------
bool gt_SuperPerfectCellCountdownTimer_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) == 15) && (gv_abilitytomovewithtimers == 13) && (UnitGroupCount(gv_cell, c_unitCountAlive) == 0)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_abilitytomovewithtimers -= 13;
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/26D2AFF6"));
    Wait(8.0, c_timeGame);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/869BD2AB"));
    Wait(8.0, c_timeGame);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/01A27A46"));
    Wait(8.0, c_timeGame);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/1009EFD6"));
    Wait(8.0, c_timeGame);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/B3820E9A"));
    Wait(8.0, c_timeGame);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/B6FABF14"));
    TriggerEnable(gt_SetPerfectCellGroup, false);
    TimerWindowCreate(gv_superPerfectCellFight, StringExternal("Param/Value/46AED203"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 500, 50);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_superPerfectCellFight, 5.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_superPerfectCellFight);
    Wait(5.0, c_timeGame);
    TimerWindowDestroy(TimerWindowLastCreated());
    gv_abilitytomovewithtimers += 14;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SuperPerfectCellCountdownTimer_Init () {
    gt_SuperPerfectCellCountdownTimer = TriggerCreate("gt_SuperPerfectCellCountdownTimer_Func");
    TriggerAddEventUnitDied(gt_SuperPerfectCellCountdownTimer, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Super Perfect Cell Begin
//--------------------------------------------------------------------------------------------------
bool gt_SuperPerfectCellBegin_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_ReturnFromCellGames, true);
    Wait(0.1, c_timeGame);
    UnitSetPosition(RegionGetAttachUnit(RegionFromId(84)), RegionGetCenter(RegionFromId(21)), false);
    UnitGroupRemove(gv_cellGames, RegionGetAttachUnit(RegionFromId(84)));
    UnitCreate(1, "Kerrigan", 0, 15, RegionGetCenter(RegionFromId(108)), 270.0);
    libNtve_gf_MakeUnitInvulnerable(UnitLastCreated(), false);
    gv_cellforRemoval[1] = UnitLastCreated();
    Wait(0.1, c_timeGame);
    TriggerEnable(gt_Losingconditiontosuperperfectcell, true);
    Wait(2.0, c_timeGame);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SuperPerfectCellBegin_Init () {
    gt_SuperPerfectCellBegin = TriggerCreate("gt_SuperPerfectCellBegin_Func");
    TriggerAddEventTimer(gt_SuperPerfectCellBegin, gv_superPerfectCellFight);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set Super Perfect Cell Group
//--------------------------------------------------------------------------------------------------
bool gt_SetSuperPerfectCellGroup_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 14))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupAddUnitGroup(gv_cell, UnitGroup(null, 15, RegionFromId(108), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SetSuperPerfectCellGroup_Init () {
    gt_SetSuperPerfectCellGroup = TriggerCreate("gt_SetSuperPerfectCellGroup_Func");
    TriggerAddEventTimePeriodic(gt_SetSuperPerfectCellGroup, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Buu Saga Countdown Timer
//--------------------------------------------------------------------------------------------------
bool gt_BuuSagaCountdownTimer_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) == 15) && (UnitGroupCount(gv_cell, c_unitCountAlive) == 0) && ((gv_abilitytomovewithtimers == 14) || (gv_abilitytomovewithtimers == 15))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_Removeplayerswholeft, false);
    TriggerDestroy(gt_Removeplayerswholeft);
    TriggerEnable(gt_CellGamesCountdownTimer, false);
    TriggerDestroy(gt_CellGamesCountdownTimer);
    TriggerEnable(gt_CellGamesBegin, false);
    TriggerDestroy(gt_CellGamesBegin);
    TriggerEnable(gt_SetPerfectCellGroup, false);
    TriggerDestroy(gt_SetPerfectCellGroup);
    TriggerEnable(gt_WarptoCellGames, false);
    TriggerDestroy(gt_WarptoCellGames);
    TriggerEnable(gt_Givecontrolback, false);
    TriggerDestroy(gt_Givecontrolback);
    TriggerEnable(gt_Removeplayerswholeft, false);
    TriggerDestroy(gt_Removeplayerswholeft);
    TriggerEnable(gt_StoptransformingbeforeCellGames, false);
    TriggerDestroy(gt_StoptransformingbeforeCellGames);
    TriggerEnable(gt_CellAI, false);
    TriggerDestroy(gt_CellAI);
    TriggerEnable(gt_SuperPerfectCellCountdownTimer, false);
    TriggerDestroy(gt_SuperPerfectCellCountdownTimer);
    TriggerEnable(gt_SuperPerfectCellBegin, false);
    TriggerDestroy(gt_SuperPerfectCellBegin);
    TriggerEnable(gt_SetSuperPerfectCellGroup, false);
    TriggerDestroy(gt_SetSuperPerfectCellGroup);
    TriggerExecute(gt_ReturnFromCellGames, true, true);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/FBA93107"));
    gv_abilitytomovewithtimers = 0;
    TimerWindowCreate(gv_buuSagakillbuuegg, StringExternal("Param/Value/A2031E8B"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 500, 50);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_buuSagakillbuuegg, 360.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_buuSagakillbuuegg);
    Wait(360.0, c_timeGame);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/5DC0365B"));
    TimerWindowDestroy(TimerWindowLastCreated());
    gv_abilitytomovewithtimers += 16;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BuuSagaCountdownTimer_Init () {
    gt_BuuSagaCountdownTimer = TriggerCreate("gt_BuuSagaCountdownTimer_Func");
    TriggerAddEventUnitDied(gt_BuuSagaCountdownTimer, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Buu Saga Begin
//--------------------------------------------------------------------------------------------------
bool gt_BuuSagaBegin_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/01F45734"));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BuuSagaBegin_Init () {
    gt_BuuSagaBegin = TriggerCreate("gt_BuuSagaBegin_Func");
    TriggerAddEventTimer(gt_BuuSagaBegin, gv_buuSagakillbuuegg);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set Buu Group
//--------------------------------------------------------------------------------------------------
bool gt_SetBuuGroup_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 16))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupAdd(gv_buu, UnitFromId(586));
    UnitGroupAdd(gv_buu, UnitFromId(587));
    UnitGroupAdd(gv_buu, UnitFromId(588));
    UnitGroupAdd(gv_buu, UnitFromId(590));
    UnitGroupAdd(gv_buu, UnitFromId(603));
    TriggerExecute(gt_Losingconditionifeggisntkilledintime, true, false);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SetBuuGroup_Init () {
    gt_SetBuuGroup = TriggerCreate("gt_SetBuuGroup_Func");
    TriggerAddEventTimePeriodic(gt_SetBuuGroup, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Allow Travel to Buu Saga
//--------------------------------------------------------------------------------------------------
bool gt_AllowTraveltoBuuSaga_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 16))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(123)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(123)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AllowTraveltoBuuSaga_Init () {
    gt_AllowTraveltoBuuSaga = TriggerCreate("gt_AllowTraveltoBuuSaga_Func");
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga, UnitRefFromUnit(DataTableGetUnit(true, "Goku")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga, UnitRefFromUnit(DataTableGetUnit(true, "Vegeta")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga, UnitRefFromUnit(DataTableGetUnit(true, "Piccolo")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga, UnitRefFromUnit(DataTableGetUnit(true, "Trunks")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga, UnitRefFromUnit(DataTableGetUnit(true, "Goten")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga, UnitRefFromUnit(DataTableGetUnit(true, "Gohan")), RegionGetCenter(RegionFromId(83)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Kill East City Units
//--------------------------------------------------------------------------------------------------
bool gt_KillEastCityUnits_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupLoopBegin(gv_eastCity);
    for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
        UnitKill(UnitGroupLoopCurrent());
    }
    UnitGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_KillEastCityUnits_Init () {
    gt_KillEastCityUnits = TriggerCreate("gt_KillEastCityUnits_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Kill Central City Units
//--------------------------------------------------------------------------------------------------
bool gt_KillCentralCityUnits_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupLoopBegin(gv_centralCity);
    for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
        UnitKill(UnitGroupLoopCurrent());
    }
    UnitGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_KillCentralCityUnits_Init () {
    gt_KillCentralCityUnits = TriggerCreate("gt_KillCentralCityUnits_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Kill West City Units
//--------------------------------------------------------------------------------------------------
bool gt_KillWestCityUnits_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupLoopBegin(gv_westCity);
    for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
        UnitKill(UnitGroupLoopCurrent());
    }
    UnitGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_KillWestCityUnits_Init () {
    gt_KillWestCityUnits = TriggerCreate("gt_KillWestCityUnits_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Buu Saga Countdown Timer 2
//--------------------------------------------------------------------------------------------------
bool gt_BuuSagaCountdownTimer2_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) == 15) && (gv_abilitytomovewithtimers == 16) && (UnitGroupCount(gv_buu, c_unitCountAlive) == 0)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_BuuSagaCountdownTimer, false);
    TriggerDestroy(gt_BuuSagaCountdownTimer);
    TriggerEnable(gt_BuuSagaBegin, false);
    TriggerDestroy(gt_BuuSagaBegin);
    TriggerEnable(gt_SetBuuGroup, false);
    TriggerDestroy(gt_SetBuuGroup);
    TriggerEnable(gt_AllowTraveltoBuuSaga, false);
    TriggerDestroy(gt_AllowTraveltoBuuSaga);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/50239267"));
    TriggerExecute(gt_KillEastCityUnits, true, true);
    TriggerExecute(gt_KillCentralCityUnits, true, true);
    TriggerExecute(gt_KillWestCityUnits, true, true);
    gv_abilitytomovewithtimers -= 16;
    TimerWindowCreate(gv_buuSaga2fightfatbuu, StringExternal("Param/Value/5D8BC3A6"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 500, 50);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_buuSaga2fightfatbuu, 90.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_buuSaga2fightfatbuu);
    Wait(90.0, c_timeGame);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/D91AD4A7"));
    TimerWindowDestroy(TimerWindowLastCreated());
    gv_abilitytomovewithtimers += 17;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BuuSagaCountdownTimer2_Init () {
    gt_BuuSagaCountdownTimer2 = TriggerCreate("gt_BuuSagaCountdownTimer2_Func");
    TriggerAddEventUnitDied(gt_BuuSagaCountdownTimer2, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Buu Saga Begin 2
//--------------------------------------------------------------------------------------------------
bool gt_BuuSagaBegin2_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitCreate(1, "Stetmann", 0, 7, RegionGetCenter(RegionFromId(124)), 270.0);
    UnitGroupAdd(gv_supremeKai, UnitLastCreated());
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(600)), c_orderQueueReplace);
    UnitCreate(1, "Omegalisk", 0, 15, RegionGetCenter(RegionFromId(132)), 270.0);
    Wait(3.0, c_timeGame);
    TriggerEnable(gt_BuuAI, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BuuSagaBegin2_Init () {
    gt_BuuSagaBegin2 = TriggerCreate("gt_BuuSagaBegin2_Func");
    TriggerAddEventTimer(gt_BuuSagaBegin2, gv_buuSaga2fightfatbuu);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set Buu Group 2
//--------------------------------------------------------------------------------------------------
bool gt_SetBuuGroup2_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 17))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupAddUnitGroup(gv_buu, UnitGroup(null, 15, RegionFromId(132), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SetBuuGroup2_Init () {
    gt_SetBuuGroup2 = TriggerCreate("gt_SetBuuGroup2_Func");
    TriggerAddEventTimePeriodic(gt_SetBuuGroup2, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Allow Travel to Buu Saga 2
//--------------------------------------------------------------------------------------------------
bool gt_AllowTraveltoBuuSaga2_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 17))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(123)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(123)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AllowTraveltoBuuSaga2_Init () {
    gt_AllowTraveltoBuuSaga2 = TriggerCreate("gt_AllowTraveltoBuuSaga2_Func");
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga2, UnitRefFromUnit(DataTableGetUnit(true, "Goku")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga2, UnitRefFromUnit(DataTableGetUnit(true, "Vegeta")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga2, UnitRefFromUnit(DataTableGetUnit(true, "Piccolo")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga2, UnitRefFromUnit(DataTableGetUnit(true, "Trunks")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga2, UnitRefFromUnit(DataTableGetUnit(true, "Goten")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga2, UnitRefFromUnit(DataTableGetUnit(true, "Gohan")), RegionGetCenter(RegionFromId(83)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Buu AI
//--------------------------------------------------------------------------------------------------
bool gt_BuuAI_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupLoopBegin(UnitGroup(null, 15, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0));
    for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
        UnitIssueOrder(UnitGroupLoopCurrent(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitGroupClosestToPoint(UnitGroupAlliance(UnitGetOwner(UnitGroupLoopCurrent()), c_unitAllianceEnemy, RegionFromId(134), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), UnitGetPosition(UnitGroupLoopCurrent())))), c_orderQueueReplace);
    }
    UnitGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BuuAI_Init () {
    gt_BuuAI = TriggerCreate("gt_BuuAI_Func");
    TriggerEnable(gt_BuuAI, false);
    TriggerAddEventTimePeriodic(gt_BuuAI, 0.5, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Buu Saga Countdown Timer 3
//--------------------------------------------------------------------------------------------------
bool gt_BuuSagaCountdownTimer3_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) == 15) && (gv_abilitytomovewithtimers == 17) && (UnitGroupCount(gv_buu, c_unitCountAlive) == 0)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_BuuSagaCountdownTimer2, false);
    TriggerDestroy(gt_BuuSagaCountdownTimer2);
    TriggerEnable(gt_BuuSagaBegin2, false);
    TriggerDestroy(gt_BuuSagaBegin2);
    TriggerEnable(gt_SetBuuGroup2, false);
    TriggerDestroy(gt_SetBuuGroup2);
    TriggerEnable(gt_AllowTraveltoBuuSaga2, false);
    TriggerDestroy(gt_AllowTraveltoBuuSaga2);
    TriggerEnable(gt_KillCentralCityUnits, false);
    TriggerDestroy(gt_KillCentralCityUnits);
    TriggerEnable(gt_KillEastCityUnits, false);
    TriggerDestroy(gt_KillEastCityUnits);
    TriggerEnable(gt_KillWestCityUnits, false);
    TriggerDestroy(gt_KillWestCityUnits);
    TriggerEnable(gt_BuuAI, false);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/6B60C61B"));
    gv_abilitytomovewithtimers -= 17;
    TimerWindowCreate(gv_buuSaga3fightevilsuperbuu, StringExternal("Param/Value/FE3BA945"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 500, 50);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_buuSaga3fightevilsuperbuu, 90.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_buuSaga3fightevilsuperbuu);
    Wait(90.0, c_timeGame);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/E5313B3C"));
    TimerWindowDestroy(TimerWindowLastCreated());
    gv_abilitytomovewithtimers += 18;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BuuSagaCountdownTimer3_Init () {
    gt_BuuSagaCountdownTimer3 = TriggerCreate("gt_BuuSagaCountdownTimer3_Func");
    TriggerAddEventUnitDied(gt_BuuSagaCountdownTimer3, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Buu Saga Begin 3
//--------------------------------------------------------------------------------------------------
bool gt_BuuSagaBegin3_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitCreate(1, "Scout", 0, 15, RegionGetCenter(RegionFromId(132)), 270.0);
    Wait(3.0, c_timeGame);
    TriggerEnable(gt_BuuAI, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BuuSagaBegin3_Init () {
    gt_BuuSagaBegin3 = TriggerCreate("gt_BuuSagaBegin3_Func");
    TriggerAddEventTimer(gt_BuuSagaBegin3, gv_buuSaga3fightevilsuperbuu);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set Buu Group 3
//--------------------------------------------------------------------------------------------------
bool gt_SetBuuGroup3_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 18))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupAddUnitGroup(gv_buu, UnitGroup(null, 15, RegionFromId(132), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SetBuuGroup3_Init () {
    gt_SetBuuGroup3 = TriggerCreate("gt_SetBuuGroup3_Func");
    TriggerAddEventTimePeriodic(gt_SetBuuGroup3, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Allow Travel to Buu Saga 3
//--------------------------------------------------------------------------------------------------
bool gt_AllowTraveltoBuuSaga3_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 18))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(123)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(123)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AllowTraveltoBuuSaga3_Init () {
    gt_AllowTraveltoBuuSaga3 = TriggerCreate("gt_AllowTraveltoBuuSaga3_Func");
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga3, UnitRefFromUnit(DataTableGetUnit(true, "Goku")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga3, UnitRefFromUnit(DataTableGetUnit(true, "Vegeta")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga3, UnitRefFromUnit(DataTableGetUnit(true, "Piccolo")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga3, UnitRefFromUnit(DataTableGetUnit(true, "Trunks")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga3, UnitRefFromUnit(DataTableGetUnit(true, "Goten")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga3, UnitRefFromUnit(DataTableGetUnit(true, "Gohan")), RegionGetCenter(RegionFromId(83)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Buu Saga Countdown Timer 4
//--------------------------------------------------------------------------------------------------
bool gt_BuuSagaCountdownTimer4_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) == 15) && (gv_abilitytomovewithtimers == 18) && (UnitGroupCount(gv_buu, c_unitCountAlive) == 0)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_BuuSagaCountdownTimer3, false);
    TriggerDestroy(gt_BuuSagaCountdownTimer3);
    TriggerEnable(gt_BuuSagaBegin3, false);
    TriggerDestroy(gt_BuuSagaBegin3);
    TriggerEnable(gt_SetBuuGroup3, false);
    TriggerDestroy(gt_SetBuuGroup3);
    TriggerEnable(gt_AllowTraveltoBuuSaga3, false);
    TriggerDestroy(gt_AllowTraveltoBuuSaga3);
    TriggerEnable(gt_BuuAI, false);
    TriggerDestroy(gt_BuuAI);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/AADFFEE9"));
    gv_abilitytomovewithtimers -= 18;
    TimerWindowCreate(gv_buuSaga4fightsuperbuugotenkspiccoloabsorbed, StringExternal("Param/Value/B87F3150"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 500, 50);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_buuSaga4fightsuperbuugotenkspiccoloabsorbed, 90.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_buuSaga4fightsuperbuugotenkspiccoloabsorbed);
    Wait(90.0, c_timeGame);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/6DA74EEE"));
    TimerWindowDestroy(TimerWindowLastCreated());
    gv_abilitytomovewithtimers += 19;
    UnitGroupLoopBegin(gv_supremeKai);
    for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
        UnitKill(UnitGroupLoopCurrent());
    }
    UnitGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BuuSagaCountdownTimer4_Init () {
    gt_BuuSagaCountdownTimer4 = TriggerCreate("gt_BuuSagaCountdownTimer4_Func");
    TriggerAddEventUnitDied(gt_BuuSagaCountdownTimer4, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Buu Saga Begin 4
//--------------------------------------------------------------------------------------------------
bool gt_BuuSagaBegin4_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitCreate(1, "Urun", 0, 15, RegionGetCenter(RegionFromId(136)), 270.0);
    Wait(3.0, c_timeGame);
    TriggerEnable(gt_BuuAI2, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BuuSagaBegin4_Init () {
    gt_BuuSagaBegin4 = TriggerCreate("gt_BuuSagaBegin4_Func");
    TriggerAddEventTimer(gt_BuuSagaBegin4, gv_buuSaga4fightsuperbuugotenkspiccoloabsorbed);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set Buu Group 4
//--------------------------------------------------------------------------------------------------
bool gt_SetBuuGroup4_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 19))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupAddUnitGroup(gv_buu, UnitGroup(null, 15, RegionFromId(136), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SetBuuGroup4_Init () {
    gt_SetBuuGroup4 = TriggerCreate("gt_SetBuuGroup4_Func");
    TriggerAddEventTimePeriodic(gt_SetBuuGroup4, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Allow Travel to Buu Saga 4
//--------------------------------------------------------------------------------------------------
bool gt_AllowTraveltoBuuSaga4_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 19))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(135)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(135)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AllowTraveltoBuuSaga4_Init () {
    gt_AllowTraveltoBuuSaga4 = TriggerCreate("gt_AllowTraveltoBuuSaga4_Func");
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga4, UnitRefFromUnit(DataTableGetUnit(true, "Goku")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga4, UnitRefFromUnit(DataTableGetUnit(true, "Vegeta")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga4, UnitRefFromUnit(DataTableGetUnit(true, "Piccolo")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga4, UnitRefFromUnit(DataTableGetUnit(true, "Trunks")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga4, UnitRefFromUnit(DataTableGetUnit(true, "Goten")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga4, UnitRefFromUnit(DataTableGetUnit(true, "Gohan")), RegionGetCenter(RegionFromId(83)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Catch Buu if he goes for Chooser
//--------------------------------------------------------------------------------------------------
bool gt_CatchBuuifhegoesforChooser_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 15))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) != 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionRandomPoint(RegionFromId(137)), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CatchBuuifhegoesforChooser_Init () {
    gt_CatchBuuifhegoesforChooser = TriggerCreate("gt_CatchBuuifhegoesforChooser_Func");
    TriggerAddEventUnitRegion(gt_CatchBuuifhegoesforChooser, null, RegionFromId(137), false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Buu AI 2
//--------------------------------------------------------------------------------------------------
bool gt_BuuAI2_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupLoopBegin(UnitGroup(null, 15, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0));
    for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
        UnitIssueOrder(UnitGroupLoopCurrent(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitGroupClosestToPoint(UnitGroupAlliance(UnitGetOwner(UnitGroupLoopCurrent()), c_unitAllianceEnemy, RegionFromId(137), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), UnitGetPosition(UnitGroupLoopCurrent())))), c_orderQueueReplace);
    }
    UnitGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BuuAI2_Init () {
    gt_BuuAI2 = TriggerCreate("gt_BuuAI2_Func");
    TriggerEnable(gt_BuuAI2, false);
    TriggerAddEventTimePeriodic(gt_BuuAI2, 0.5, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Buu Saga Countdown Timer 5
//--------------------------------------------------------------------------------------------------
bool gt_BuuSagaCountdownTimer5_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) == 15) && (gv_abilitytomovewithtimers == 19) && (UnitGroupCount(gv_buu, c_unitCountAlive) == 0)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_BuuSagaCountdownTimer4, false);
    TriggerDestroy(gt_BuuSagaCountdownTimer4);
    TriggerEnable(gt_BuuSagaBegin4, false);
    TriggerDestroy(gt_BuuSagaBegin4);
    TriggerEnable(gt_SetBuuGroup4, false);
    TriggerDestroy(gt_SetBuuGroup4);
    TriggerEnable(gt_AllowTraveltoBuuSaga4, false);
    TriggerDestroy(gt_AllowTraveltoBuuSaga4);
    TriggerEnable(gt_BuuAI2, false);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/7CB31729"));
    gv_abilitytomovewithtimers -= 19;
    TimerWindowCreate(gv_buuSaga5fightbuugohanabsorbed, StringExternal("Param/Value/AC985F7A"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 500, 50);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_buuSaga5fightbuugohanabsorbed, 90.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_buuSaga5fightbuugohanabsorbed);
    Wait(90.0, c_timeGame);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/CA0A7E65"));
    TimerWindowDestroy(TimerWindowLastCreated());
    gv_abilitytomovewithtimers += 20;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BuuSagaCountdownTimer5_Init () {
    gt_BuuSagaCountdownTimer5 = TriggerCreate("gt_BuuSagaCountdownTimer5_Func");
    TriggerAddEventUnitDied(gt_BuuSagaCountdownTimer5, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Buu Saga Begin 5
//--------------------------------------------------------------------------------------------------
bool gt_BuuSagaBegin5_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitCreate(1, "VoidSeeker", 0, 15, RegionGetCenter(RegionFromId(136)), 270.0);
    libNtve_gf_MakeUnitInvulnerable(UnitLastCreated(), false);
    Wait(3.0, c_timeGame);
    TriggerEnable(gt_BuuAI2, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BuuSagaBegin5_Init () {
    gt_BuuSagaBegin5 = TriggerCreate("gt_BuuSagaBegin5_Func");
    TriggerAddEventTimer(gt_BuuSagaBegin5, gv_buuSaga5fightbuugohanabsorbed);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set Buu Group 5
//--------------------------------------------------------------------------------------------------
bool gt_SetBuuGroup5_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 20))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupAddUnitGroup(gv_buu, UnitGroup(null, 15, RegionFromId(136), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SetBuuGroup5_Init () {
    gt_SetBuuGroup5 = TriggerCreate("gt_SetBuuGroup5_Func");
    TriggerAddEventTimePeriodic(gt_SetBuuGroup5, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Allow Travel to Buu Saga 5
//--------------------------------------------------------------------------------------------------
bool gt_AllowTraveltoBuuSaga5_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 20))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(135)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(135)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AllowTraveltoBuuSaga5_Init () {
    gt_AllowTraveltoBuuSaga5 = TriggerCreate("gt_AllowTraveltoBuuSaga5_Func");
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga5, UnitRefFromUnit(DataTableGetUnit(true, "Goku")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga5, UnitRefFromUnit(DataTableGetUnit(true, "Vegeta")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga5, UnitRefFromUnit(DataTableGetUnit(true, "Piccolo")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga5, UnitRefFromUnit(DataTableGetUnit(true, "Trunks")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga5, UnitRefFromUnit(DataTableGetUnit(true, "Goten")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga5, UnitRefFromUnit(DataTableGetUnit(true, "Gohan")), RegionGetCenter(RegionFromId(83)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Buu Saga Countdown Timer 6
//--------------------------------------------------------------------------------------------------
bool gt_BuuSagaCountdownTimer6_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) == 15) && (gv_abilitytomovewithtimers == 20) && (UnitGroupCount(gv_buu, c_unitCountAlive) == 0)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_BuuSagaCountdownTimer5, false);
    TriggerDestroy(gt_BuuSagaCountdownTimer5);
    TriggerEnable(gt_BuuSagaBegin5, false);
    TriggerDestroy(gt_BuuSagaBegin5);
    TriggerEnable(gt_SetBuuGroup5, false);
    TriggerDestroy(gt_SetBuuGroup5);
    TriggerEnable(gt_AllowTraveltoBuuSaga5, false);
    TriggerDestroy(gt_AllowTraveltoBuuSaga5);
    TriggerEnable(gt_BuuAI2, false);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/C40173CB"));
    gv_abilitytomovewithtimers -= 20;
    TimerWindowCreate(gv_buuSaga6kidbuu, StringExternal("Param/Value/72CB74CF"), true, false);
    TimerWindowSetPosition(TimerWindowLastCreated(), 500, 50);
    TimerWindowSetColor(TimerWindowLastCreated(), c_timerWindowColorTime, Color(100.00, 100.00, 100.00), 0.0);
    TimerStart(gv_buuSaga6kidbuu, 90.0, false, c_timeGame);
    TimerWindowSetTimer(TimerWindowLastCreated(), gv_buuSaga6kidbuu);
    Wait(30.0, c_timeGame);
    SoundChannelMute(PlayerGroupAll(), c_soundCategoryVoice, false);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, true);
    SoundPlay(SoundLink("KidBuutheme", -1), PlayerGroupAll(), 100.0, 0.0);
    Wait(60.0, c_timeGame);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/43C7BE8D"));
    TimerWindowDestroy(TimerWindowLastCreated());
    gv_abilitytomovewithtimers += 21;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BuuSagaCountdownTimer6_Init () {
    gt_BuuSagaCountdownTimer6 = TriggerCreate("gt_BuuSagaCountdownTimer6_Func");
    TriggerAddEventUnitDied(gt_BuuSagaCountdownTimer6, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Buu Saga Begin 6
//--------------------------------------------------------------------------------------------------
bool gt_BuuSagaBegin6_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitCreate(1, "Selendis", 0, 15, RegionGetCenter(RegionFromId(136)), 270.0);
    Wait(3.0, c_timeGame);
    TriggerEnable(gt_BuuAI2, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BuuSagaBegin6_Init () {
    gt_BuuSagaBegin6 = TriggerCreate("gt_BuuSagaBegin6_Func");
    TriggerAddEventTimer(gt_BuuSagaBegin6, gv_buuSaga6kidbuu);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set Buu Group 6
//--------------------------------------------------------------------------------------------------
bool gt_SetBuuGroup6_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 21))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupAddUnitGroup(gv_buu, UnitGroup(null, 15, RegionFromId(136), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SetBuuGroup6_Init () {
    gt_SetBuuGroup6 = TriggerCreate("gt_SetBuuGroup6_Func");
    TriggerAddEventTimePeriodic(gt_SetBuuGroup6, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Allow Travel to Buu Saga 6
//--------------------------------------------------------------------------------------------------
bool gt_AllowTraveltoBuuSaga6_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((gv_abilitytomovewithtimers == 21))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(135)), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_SwooshCamera(EventPlayer(), ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 8.0), CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance), RegionGetCenter(RegionFromId(135)), 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AllowTraveltoBuuSaga6_Init () {
    gt_AllowTraveltoBuuSaga6 = TriggerCreate("gt_AllowTraveltoBuuSaga6_Func");
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga6, UnitRefFromUnit(DataTableGetUnit(true, "Goku")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga6, UnitRefFromUnit(DataTableGetUnit(true, "Vegeta")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga6, UnitRefFromUnit(DataTableGetUnit(true, "Piccolo")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga6, UnitRefFromUnit(DataTableGetUnit(true, "Trunks")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga6, UnitRefFromUnit(DataTableGetUnit(true, "Goten")), RegionGetCenter(RegionFromId(83)), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_AllowTraveltoBuuSaga6, UnitRefFromUnit(DataTableGetUnit(true, "Gohan")), RegionGetCenter(RegionFromId(83)), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Make Xel Naga vulnerable
//--------------------------------------------------------------------------------------------------
bool gt_MakeXelNagavulnerable_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_MakeUnitInvulnerable(UnitFromId(638), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MakeXelNagavulnerable_Init () {
    gt_MakeXelNagavulnerable = TriggerCreate("gt_MakeXelNagavulnerable_Func");
    TriggerAddEventMapInit(gt_MakeXelNagavulnerable);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lose to Raditz
//--------------------------------------------------------------------------------------------------
bool gt_LosetoRaditz_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) == 7) && (gv_abilitytomovewithtimers == 1)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/37EEFE22"));
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/0B60B3C9"));
    Wait(10.0, c_timeGame);
    PlayerGroupLoopBegin(PlayerGroupActive());
    for ( ; !PlayerGroupLoopDone() ; PlayerGroupLoopStep() ) {
        GameOver(PlayerGroupLoopCurrent(), c_gameOverDefeat, true, true);
    }
    PlayerGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_LosetoRaditz_Init () {
    gt_LosetoRaditz = TriggerCreate("gt_LosetoRaditz_Func");
    TriggerAddEventUnitDied(gt_LosetoRaditz, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set Earth Dragon Balls Group
//--------------------------------------------------------------------------------------------------
bool gt_SetEarthDragonBallsGroup_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupAdd(gv_earthDragonBalls, UnitFromId(149));
    UnitGroupAdd(gv_earthDragonBalls, UnitFromId(147));
    UnitGroupAdd(gv_earthDragonBalls, UnitFromId(568));
    UnitGroupAdd(gv_earthDragonBalls, UnitFromId(570));
    UnitGroupAdd(gv_earthDragonBalls, UnitFromId(569));
    UnitGroupAdd(gv_earthDragonBalls, UnitFromId(148));
    UnitGroupAdd(gv_earthDragonBalls, UnitFromId(150));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SetEarthDragonBallsGroup_Init () {
    gt_SetEarthDragonBallsGroup = TriggerCreate("gt_SetEarthDragonBallsGroup_Func");
    TriggerAddEventMapInit(gt_SetEarthDragonBallsGroup);
}

//--------------------------------------------------------------------------------------------------
// Trigger: End Game from Earth Dragon Balls
//--------------------------------------------------------------------------------------------------
bool gt_EndGamefromEarthDragonBalls_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGroupCount(gv_earthDragonBalls, c_unitCountAlive) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/0E706A56"));
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/A8B4B836"));
    Wait(10.0, c_timeGame);
    PlayerGroupLoopBegin(PlayerGroupActive());
    for ( ; !PlayerGroupLoopDone() ; PlayerGroupLoopStep() ) {
        GameOver(PlayerGroupLoopCurrent(), c_gameOverDefeat, true, true);
    }
    PlayerGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_EndGamefromEarthDragonBalls_Init () {
    gt_EndGamefromEarthDragonBalls = TriggerCreate("gt_EndGamefromEarthDragonBalls_Func");
    TriggerAddEventUnitDied(gt_EndGamefromEarthDragonBalls, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set Dragon Balls Group
//--------------------------------------------------------------------------------------------------
bool gt_SetDragonBallsGroup_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupAdd(gv_dragonBalls, UnitFromId(561));
    UnitGroupAdd(gv_dragonBalls, UnitFromId(562));
    UnitGroupAdd(gv_dragonBalls, UnitFromId(563));
    UnitGroupAdd(gv_dragonBalls, UnitFromId(564));
    UnitGroupAdd(gv_dragonBalls, UnitFromId(565));
    UnitGroupAdd(gv_dragonBalls, UnitFromId(566));
    UnitGroupAdd(gv_dragonBalls, UnitFromId(567));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SetDragonBallsGroup_Init () {
    gt_SetDragonBallsGroup = TriggerCreate("gt_SetDragonBallsGroup_Func");
    TriggerAddEventMapInit(gt_SetDragonBallsGroup);
}

//--------------------------------------------------------------------------------------------------
// Trigger: 1 Star Ball is Taken
//--------------------------------------------------------------------------------------------------
bool gt__1StarBallisTaken_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 6)) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/D6C52B71"));
    }
    else {
        if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 5)) {
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/B24B9C04"));
        }
        else {
            if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 4)) {
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/CDA20A3A"));
            }
            else {
                if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 3)) {
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/EE87233B"));
                }
                else {
                    if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 2)) {
                        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/A771C005"));
                    }
                    else {
                        if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 1)) {
                            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/8ADE2066"));
                        }
                        else {
                        }
                    }
                }
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt__1StarBallisTaken_Init () {
    gt__1StarBallisTaken = TriggerCreate("gt__1StarBallisTaken_Func");
    TriggerAddEventUnitDied(gt__1StarBallisTaken, UnitRefFromUnit(UnitFromId(561)));
}

//--------------------------------------------------------------------------------------------------
// Trigger: 2 Star Ball is Taken
//--------------------------------------------------------------------------------------------------
bool gt__2StarBallisTaken_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 6)) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/9863060C"));
    }
    else {
        if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 5)) {
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/B933006B"));
        }
        else {
            if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 4)) {
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/52EF8EA6"));
            }
            else {
                if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 3)) {
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/FC54FA2A"));
                }
                else {
                    if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 2)) {
                        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/3516601D"));
                    }
                    else {
                        if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 1)) {
                            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/FBA4A956"));
                        }
                        else {
                        }
                    }
                }
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt__2StarBallisTaken_Init () {
    gt__2StarBallisTaken = TriggerCreate("gt__2StarBallisTaken_Func");
    TriggerAddEventUnitDied(gt__2StarBallisTaken, UnitRefFromUnit(UnitFromId(562)));
}

//--------------------------------------------------------------------------------------------------
// Trigger: 3 Star Ball is Taken
//--------------------------------------------------------------------------------------------------
bool gt__3StarBallisTaken_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 6)) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/11AAB8B8"));
    }
    else {
        if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 5)) {
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/8CDC3FC2"));
        }
        else {
            if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 4)) {
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/8956FE48"));
            }
            else {
                if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 3)) {
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/8A91BF61"));
                }
                else {
                    if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 2)) {
                        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/E2F3FA56"));
                    }
                    else {
                        if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 1)) {
                            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/9022720A"));
                        }
                        else {
                        }
                    }
                }
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt__3StarBallisTaken_Init () {
    gt__3StarBallisTaken = TriggerCreate("gt__3StarBallisTaken_Func");
    TriggerAddEventUnitDied(gt__3StarBallisTaken, UnitRefFromUnit(UnitFromId(563)));
}

//--------------------------------------------------------------------------------------------------
// Trigger: 4 Star Ball is Taken
//--------------------------------------------------------------------------------------------------
bool gt__4StarBallisTaken_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 6)) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/8010EA29"));
    }
    else {
        if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 5)) {
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/6BEF6830"));
        }
        else {
            if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 4)) {
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/B0065DB8"));
            }
            else {
                if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 3)) {
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/7F691437"));
                }
                else {
                    if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 2)) {
                        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/13951B0A"));
                    }
                    else {
                        if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 1)) {
                            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/FA799445"));
                        }
                        else {
                        }
                    }
                }
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt__4StarBallisTaken_Init () {
    gt__4StarBallisTaken = TriggerCreate("gt__4StarBallisTaken_Func");
    TriggerAddEventUnitDied(gt__4StarBallisTaken, UnitRefFromUnit(UnitFromId(564)));
}

//--------------------------------------------------------------------------------------------------
// Trigger: 5 Star Ball is Taken
//--------------------------------------------------------------------------------------------------
bool gt__5StarBallisTaken_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 6)) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/40AF88B5"));
    }
    else {
        if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 5)) {
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/4D26E24F"));
        }
        else {
            if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 4)) {
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/63A1A1F0"));
            }
            else {
                if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 3)) {
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/E2678B8D"));
                }
                else {
                    if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 2)) {
                        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/174B52D8"));
                    }
                    else {
                        if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 1)) {
                            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/8CFE686F"));
                        }
                        else {
                        }
                    }
                }
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt__5StarBallisTaken_Init () {
    gt__5StarBallisTaken = TriggerCreate("gt__5StarBallisTaken_Func");
    TriggerAddEventUnitDied(gt__5StarBallisTaken, UnitRefFromUnit(UnitFromId(565)));
}

//--------------------------------------------------------------------------------------------------
// Trigger: 6 Star Ball is Taken
//--------------------------------------------------------------------------------------------------
bool gt__6StarBallisTaken_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 6)) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/53684162"));
    }
    else {
        if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 5)) {
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/A60E72F3"));
        }
        else {
            if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 4)) {
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/489BCD26"));
            }
            else {
                if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 3)) {
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/A695C640"));
                }
                else {
                    if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 2)) {
                        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/B20A5815"));
                    }
                    else {
                        if ((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 1)) {
                            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/7AA224C1"));
                        }
                        else {
                        }
                    }
                }
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt__6StarBallisTaken_Init () {
    gt__6StarBallisTaken = TriggerCreate("gt__6StarBallisTaken_Func");
    TriggerAddEventUnitDied(gt__6StarBallisTaken, UnitRefFromUnit(UnitFromId(566)));
}

//--------------------------------------------------------------------------------------------------
// Trigger: End Game from Dragon Balls
//--------------------------------------------------------------------------------------------------
bool gt_EndGamefromDragonBalls_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGroupCount(gv_dragonBalls, c_unitCountAlive) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/359D6588"));
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/3ADCE2CA"));
    Wait(10.0, c_timeGame);
    PlayerGroupLoopBegin(PlayerGroupActive());
    for ( ; !PlayerGroupLoopDone() ; PlayerGroupLoopStep() ) {
        GameOver(PlayerGroupLoopCurrent(), c_gameOverDefeat, true, true);
    }
    PlayerGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_EndGamefromDragonBalls_Init () {
    gt_EndGamefromDragonBalls = TriggerCreate("gt_EndGamefromDragonBalls_Func");
    TriggerAddEventUnitDied(gt_EndGamefromDragonBalls, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set Dragonball Percent damage taken
//--------------------------------------------------------------------------------------------------
bool gt_SetDragonballPercentdamagetaken_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    if ((gv_difficultyvariable == 0)) {
        PlayerModifyPropertyInt(7, c_playerPropDamageTakenPercent, c_playerPropOperSetTo, 7);
    }
    else {
    }
    if ((gv_difficultyvariable == 1)) {
        PlayerModifyPropertyInt(7, c_playerPropDamageTakenPercent, c_playerPropOperSetTo, 10);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SetDragonballPercentdamagetaken_Init () {
    gt_SetDragonballPercentdamagetaken = TriggerCreate("gt_SetDragonballPercentdamagetaken_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Initiate east city group
//--------------------------------------------------------------------------------------------------
bool gt_Initiateeastcitygroup_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupLoopBegin(UnitGroup(null, 7, RegionFromId(101), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0));
    for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
        UnitGroupAdd(gv_eastCity, UnitGroupLoopCurrent());
    }
    UnitGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Initiateeastcitygroup_Init () {
    gt_Initiateeastcitygroup = TriggerCreate("gt_Initiateeastcitygroup_Func");
    TriggerAddEventTimeElapsed(gt_Initiateeastcitygroup, 0.1, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: End game for androids 19 and 20
//--------------------------------------------------------------------------------------------------
bool gt_Endgameforandroids19and20_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((gv_abilitytomovewithtimers == 9) && (UnitGroupCount(gv_eastCity, c_unitCountAlive) == 0)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/E47594C7"));
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/B0694212"));
    Wait(10.0, c_timeGame);
    PlayerGroupLoopBegin(PlayerGroupActive());
    for ( ; !PlayerGroupLoopDone() ; PlayerGroupLoopStep() ) {
        GameOver(PlayerGroupLoopCurrent(), c_gameOverDefeat, true, true);
    }
    PlayerGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Endgameforandroids19and20_Init () {
    gt_Endgameforandroids19and20 = TriggerCreate("gt_Endgameforandroids19and20_Func");
    TriggerAddEventUnitDied(gt_Endgameforandroids19and20, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Initiate Central city group
//--------------------------------------------------------------------------------------------------
bool gt_InitiateCentralcitygroup_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupLoopBegin(UnitGroup(null, 7, RegionFromId(102), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0));
    for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
        UnitGroupAdd(gv_centralCity, UnitGroupLoopCurrent());
    }
    UnitGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_InitiateCentralcitygroup_Init () {
    gt_InitiateCentralcitygroup = TriggerCreate("gt_InitiateCentralcitygroup_Func");
    TriggerAddEventTimeElapsed(gt_InitiateCentralcitygroup, 0.1, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: End game for androids 17 and 18
//--------------------------------------------------------------------------------------------------
bool gt_Endgameforandroids17and18_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((gv_abilitytomovewithtimers == 10) && (UnitGroupCount(gv_centralCity, c_unitCountAlive) == 0)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/71123809"));
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/69672818"));
    Wait(10.0, c_timeGame);
    PlayerGroupLoopBegin(PlayerGroupActive());
    for ( ; !PlayerGroupLoopDone() ; PlayerGroupLoopStep() ) {
        GameOver(PlayerGroupLoopCurrent(), c_gameOverDefeat, true, true);
    }
    PlayerGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Endgameforandroids17and18_Init () {
    gt_Endgameforandroids17and18 = TriggerCreate("gt_Endgameforandroids17and18_Func");
    TriggerAddEventUnitDied(gt_Endgameforandroids17and18, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Initiate west city group
//--------------------------------------------------------------------------------------------------
bool gt_Initiatewestcitygroup_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupLoopBegin(UnitGroup(null, 7, RegionFromId(107), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0));
    for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
        UnitGroupAdd(gv_westCity, UnitGroupLoopCurrent());
    }
    UnitGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Initiatewestcitygroup_Init () {
    gt_Initiatewestcitygroup = TriggerCreate("gt_Initiatewestcitygroup_Func");
    TriggerAddEventTimeElapsed(gt_Initiatewestcitygroup, 0.1, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: End game for Cell
//--------------------------------------------------------------------------------------------------
bool gt_EndgameforCell_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGroupCount(gv_westCity, c_unitCountAlive) == 0) && ((gv_abilitytomovewithtimers == 12) || (gv_abilitytomovewithtimers == 11))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/EEF9D631"));
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/13EB9548"));
    Wait(10.0, c_timeGame);
    PlayerGroupLoopBegin(PlayerGroupActive());
    for ( ; !PlayerGroupLoopDone() ; PlayerGroupLoopStep() ) {
        GameOver(PlayerGroupLoopCurrent(), c_gameOverDefeat, true, true);
    }
    PlayerGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_EndgameforCell_Init () {
    gt_EndgameforCell = TriggerCreate("gt_EndgameforCell_Func");
    TriggerAddEventUnitDied(gt_EndgameforCell, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Losing condition to perfect cell
//--------------------------------------------------------------------------------------------------
bool gt_Losingconditiontoperfectcell_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) != 14) && (UnitGetOwner(EventUnit()) != 15) && (libNtve_gf_UnitInRegion(RegionGetAttachUnit(RegionFromId(84)), RegionFromId(110)) == false) && (libNtve_gf_UnitInRegion(RegionGetAttachUnit(RegionFromId(85)), RegionFromId(110)) == false) && (libNtve_gf_UnitInRegion(RegionGetAttachUnit(RegionFromId(86)), RegionFromId(110)) == false) && (libNtve_gf_UnitInRegion(RegionGetAttachUnit(RegionFromId(87)), RegionFromId(110)) == false) && (libNtve_gf_UnitInRegion(RegionGetAttachUnit(RegionFromId(88)), RegionFromId(110)) == false) && (libNtve_gf_UnitInRegion(RegionGetAttachUnit(RegionFromId(89)), RegionFromId(110)) == false) && (gv_abilitytomovewithtimers == 13)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/52DF73A9"));
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/A5446711"));
    Wait(10.0, c_timeGame);
    PlayerGroupLoopBegin(PlayerGroupActive());
    for ( ; !PlayerGroupLoopDone() ; PlayerGroupLoopStep() ) {
        GameOver(PlayerGroupLoopCurrent(), c_gameOverDefeat, true, true);
    }
    PlayerGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Losingconditiontoperfectcell_Init () {
    gt_Losingconditiontoperfectcell = TriggerCreate("gt_Losingconditiontoperfectcell_Func");
    TriggerEnable(gt_Losingconditiontoperfectcell, false);
    TriggerAddEventUnitDied(gt_Losingconditiontoperfectcell, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Losing condition to super perfect cell
//--------------------------------------------------------------------------------------------------
bool gt_Losingconditiontosuperperfectcell_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) != 14) && (UnitGetOwner(EventUnit()) != 15) && (libNtve_gf_UnitInRegion(RegionGetAttachUnit(RegionFromId(84)), RegionFromId(110)) == false) && (libNtve_gf_UnitInRegion(RegionGetAttachUnit(RegionFromId(85)), RegionFromId(110)) == false) && (libNtve_gf_UnitInRegion(RegionGetAttachUnit(RegionFromId(86)), RegionFromId(110)) == false) && (libNtve_gf_UnitInRegion(RegionGetAttachUnit(RegionFromId(87)), RegionFromId(110)) == false) && (libNtve_gf_UnitInRegion(RegionGetAttachUnit(RegionFromId(88)), RegionFromId(110)) == false) && (libNtve_gf_UnitInRegion(RegionGetAttachUnit(RegionFromId(89)), RegionFromId(110)) == false) && (gv_abilitytomovewithtimers == 14)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/285E4595"));
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/5E0767FB"));
    Wait(10.0, c_timeGame);
    PlayerGroupLoopBegin(PlayerGroupActive());
    for ( ; !PlayerGroupLoopDone() ; PlayerGroupLoopStep() ) {
        GameOver(PlayerGroupLoopCurrent(), c_gameOverDefeat, true, true);
    }
    PlayerGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Losingconditiontosuperperfectcell_Init () {
    gt_Losingconditiontosuperperfectcell = TriggerCreate("gt_Losingconditiontosuperperfectcell_Func");
    TriggerEnable(gt_Losingconditiontosuperperfectcell, false);
    TriggerAddEventUnitDied(gt_Losingconditiontosuperperfectcell, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Initiate final city group
//--------------------------------------------------------------------------------------------------
bool gt_Initiatefinalcitygroup_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupLoopBegin(UnitGroup(null, 7, RegionFromId(137), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0));
    for ( ; !UnitGroupLoopDone() ; UnitGroupLoopStep() ) {
        UnitGroupAdd(gv_finalCity, UnitGroupLoopCurrent());
    }
    UnitGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Initiatefinalcitygroup_Init () {
    gt_Initiatefinalcitygroup = TriggerCreate("gt_Initiatefinalcitygroup_Func");
    TriggerAddEventMapInit(gt_Initiatefinalcitygroup);
}

//--------------------------------------------------------------------------------------------------
// Trigger: End game for Buu Final city
//--------------------------------------------------------------------------------------------------
bool gt_EndgameforBuuFinalcity_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGroupCount(gv_finalCity, c_unitCountAlive) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/95573525"));
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/56C70E86"));
    Wait(10.0, c_timeGame);
    PlayerGroupLoopBegin(PlayerGroupActive());
    for ( ; !PlayerGroupLoopDone() ; PlayerGroupLoopStep() ) {
        GameOver(PlayerGroupLoopCurrent(), c_gameOverDefeat, true, true);
    }
    PlayerGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_EndgameforBuuFinalcity_Init () {
    gt_EndgameforBuuFinalcity = TriggerCreate("gt_EndgameforBuuFinalcity_Func");
    TriggerAddEventUnitDied(gt_EndgameforBuuFinalcity, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Fat Buu and Super Buu kill S.Kai
//--------------------------------------------------------------------------------------------------
bool gt_FatBuuandSuperBuukillSKai_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) == 7) && (UnitGroupCount(gv_supremeKai, c_unitCountAlive) == 0) && ((gv_abilitytomovewithtimers == 17) || (gv_abilitytomovewithtimers == 18))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/B2D1A590"));
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/464BD814"));
    Wait(10.0, c_timeGame);
    PlayerGroupLoopBegin(PlayerGroupActive());
    for ( ; !PlayerGroupLoopDone() ; PlayerGroupLoopStep() ) {
        GameOver(PlayerGroupLoopCurrent(), c_gameOverDefeat, true, true);
    }
    PlayerGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FatBuuandSuperBuukillSKai_Init () {
    gt_FatBuuandSuperBuukillSKai = TriggerCreate("gt_FatBuuandSuperBuukillSKai_Func");
    TriggerAddEventUnitDied(gt_FatBuuandSuperBuukillSKai, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Losing condition if egg isn't killed in time
//--------------------------------------------------------------------------------------------------
bool gt_Losingconditionifeggisntkilledintime_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_counter;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    while (((UnitGroupCount(gv_buu, c_unitCountAlive) >= 1) && (lv_counter <= 90))) {
        lv_counter += 1;
        Wait(1.0, c_timeReal);
    }
    if ((lv_counter >= 90)) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/92783321"));
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/31E0AB30"));
        Wait(10.0, c_timeGame);
        PlayerGroupLoopBegin(PlayerGroupActive());
        for ( ; !PlayerGroupLoopDone() ; PlayerGroupLoopStep() ) {
            GameOver(PlayerGroupLoopCurrent(), c_gameOverDefeat, true, true);
        }
        PlayerGroupLoopEnd();
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Losingconditionifeggisntkilledintime_Init () {
    gt_Losingconditionifeggisntkilledintime = TriggerCreate("gt_Losingconditionifeggisntkilledintime_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Initialize Supreme Kai point array
//--------------------------------------------------------------------------------------------------
bool gt_InitializeSupremeKaipointarray_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    gv_supremeKaiPointArray[0] = PointFromId(592);
    gv_supremeKaiPointArray[1] = PointFromId(593);
    gv_supremeKaiPointArray[2] = PointFromId(594);
    gv_supremeKaiPointArray[3] = PointFromId(595);
    gv_supremeKaiPointArray[4] = PointFromId(596);
    gv_supremeKaiPointArray[5] = PointFromId(597);
    gv_supremeKaiPointArray[6] = PointFromId(598);
    gv_supremeKaiPointArray[7] = PointFromId(599);
    gv_supremeKaiPointArray[8] = PointFromId(600);
    gv_supremeKaiPointArray[9] = PointFromId(601);
    gv_supremeKaiPointArray[10] = PointFromId(602);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_InitializeSupremeKaipointarray_Init () {
    gt_InitializeSupremeKaipointarray = TriggerCreate("gt_InitializeSupremeKaipointarray_Func");
    TriggerAddEventMapInit(gt_InitializeSupremeKaipointarray);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Move idle Supreme Kai
//--------------------------------------------------------------------------------------------------
bool gt_MoveidleSupremeKai_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((libNtve_gf_UnitInRegion(EventUnit(), RegionFromId(134)) == true))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_supremeKaiPointArray[RandomInt(0, 10)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MoveidleSupremeKai_Init () {
    gt_MoveidleSupremeKai = TriggerCreate("gt_MoveidleSupremeKai_Func");
    TriggerAddEventUnitBecomesIdle(gt_MoveidleSupremeKai, null, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Supreme Kai AI
//--------------------------------------------------------------------------------------------------
bool gt_SupremeKaiAI_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_supremeKaiPointArray[RandomInt(0, 10)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SupremeKaiAI_Init () {
    gt_SupremeKaiAI = TriggerCreate("gt_SupremeKaiAI_Func");
    TriggerAddEventUnitRangePoint(gt_SupremeKaiAI, null, PointFromId(592), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Supreme Kai AI 2
//--------------------------------------------------------------------------------------------------
bool gt_SupremeKaiAI2_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_supremeKaiPointArray[RandomInt(0, 10)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SupremeKaiAI2_Init () {
    gt_SupremeKaiAI2 = TriggerCreate("gt_SupremeKaiAI2_Func");
    TriggerAddEventUnitRangePoint(gt_SupremeKaiAI2, null, PointFromId(593), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Supreme Kai AI 3
//--------------------------------------------------------------------------------------------------
bool gt_SupremeKaiAI3_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_supremeKaiPointArray[RandomInt(0, 10)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SupremeKaiAI3_Init () {
    gt_SupremeKaiAI3 = TriggerCreate("gt_SupremeKaiAI3_Func");
    TriggerAddEventUnitRangePoint(gt_SupremeKaiAI3, null, PointFromId(594), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Supreme Kai AI 4
//--------------------------------------------------------------------------------------------------
bool gt_SupremeKaiAI4_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_supremeKaiPointArray[RandomInt(0, 10)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SupremeKaiAI4_Init () {
    gt_SupremeKaiAI4 = TriggerCreate("gt_SupremeKaiAI4_Func");
    TriggerAddEventUnitRangePoint(gt_SupremeKaiAI4, null, PointFromId(595), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Supreme Kai AI 5
//--------------------------------------------------------------------------------------------------
bool gt_SupremeKaiAI5_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_supremeKaiPointArray[RandomInt(0, 10)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SupremeKaiAI5_Init () {
    gt_SupremeKaiAI5 = TriggerCreate("gt_SupremeKaiAI5_Func");
    TriggerAddEventUnitRangePoint(gt_SupremeKaiAI5, null, PointFromId(596), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Supreme Kai AI 6
//--------------------------------------------------------------------------------------------------
bool gt_SupremeKaiAI6_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_supremeKaiPointArray[RandomInt(0, 10)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SupremeKaiAI6_Init () {
    gt_SupremeKaiAI6 = TriggerCreate("gt_SupremeKaiAI6_Func");
    TriggerAddEventUnitRangePoint(gt_SupremeKaiAI6, null, PointFromId(597), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Supreme Kai AI 7
//--------------------------------------------------------------------------------------------------
bool gt_SupremeKaiAI7_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_supremeKaiPointArray[RandomInt(0, 10)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SupremeKaiAI7_Init () {
    gt_SupremeKaiAI7 = TriggerCreate("gt_SupremeKaiAI7_Func");
    TriggerAddEventUnitRangePoint(gt_SupremeKaiAI7, null, PointFromId(598), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Supreme Kai AI 8
//--------------------------------------------------------------------------------------------------
bool gt_SupremeKaiAI8_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_supremeKaiPointArray[RandomInt(0, 10)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SupremeKaiAI8_Init () {
    gt_SupremeKaiAI8 = TriggerCreate("gt_SupremeKaiAI8_Func");
    TriggerAddEventUnitRangePoint(gt_SupremeKaiAI8, null, PointFromId(599), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Supreme Kai AI 9
//--------------------------------------------------------------------------------------------------
bool gt_SupremeKaiAI9_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_supremeKaiPointArray[RandomInt(0, 10)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SupremeKaiAI9_Init () {
    gt_SupremeKaiAI9 = TriggerCreate("gt_SupremeKaiAI9_Func");
    TriggerAddEventUnitRangePoint(gt_SupremeKaiAI9, null, PointFromId(600), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Supreme Kai AI 10
//--------------------------------------------------------------------------------------------------
bool gt_SupremeKaiAI10_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_supremeKaiPointArray[RandomInt(0, 10)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SupremeKaiAI10_Init () {
    gt_SupremeKaiAI10 = TriggerCreate("gt_SupremeKaiAI10_Func");
    TriggerAddEventUnitRangePoint(gt_SupremeKaiAI10, null, PointFromId(601), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Supreme Kai AI 11
//--------------------------------------------------------------------------------------------------
bool gt_SupremeKaiAI11_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_supremeKaiPointArray[RandomInt(0, 10)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SupremeKaiAI11_Init () {
    gt_SupremeKaiAI11 = TriggerCreate("gt_SupremeKaiAI11_Func");
    TriggerAddEventUnitRangePoint(gt_SupremeKaiAI11, null, PointFromId(602), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Initialize All Civilian AI Trigger Array
//--------------------------------------------------------------------------------------------------
bool gt_InitializeAllCivilianAITriggerArray_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    gv_civilianTriggerArray[1] = gt_CivillianAI;
    gv_civilianTriggerArray[2] = gt_CivillianAI2;
    gv_civilianTriggerArray[3] = gt_CivillianAI3;
    gv_civilianTriggerArray[4] = gt_CivillianAI4;
    gv_civilianTriggerArray[5] = gt_CivillianAI5;
    gv_civilianTriggerArray[6] = gt_CivillianAI6;
    gv_civilianTriggerArray[7] = gt_CivillianAI7;
    gv_civilianTriggerArray[8] = gt_CivillianAI8;
    gv_civilianTriggerArray[9] = gt_CivillianAI9;
    gv_civilianTriggerArray[10] = gt_CivillianAI10;
    gv_civilianTriggerArray[11] = gt_CivillianAI11;
    gv_civilianTriggerArray[12] = gt_CivillianAI12;
    gv_civilianTriggerArray[13] = gt_CivillianAI13;
    gv_civilianTriggerArray[14] = gt_CivillianAI14;
    gv_civilianTriggerArray[15] = gt_CivillianAI15;
    gv_civilianTriggerArray[16] = gt_CivillianAI16;
    gv_civilianTriggerArray[17] = gt_CivillianAI17;
    gv_civilianTriggerArray[18] = gt_CivillianAI18;
    gv_civilianTriggerArray[19] = gt_CivillianAI19;
    gv_civilianTriggerArray[20] = gt_CivillianAI20;
    gv_civilianTriggerArray[21] = gt_CivillianAI21;
    gv_civilianTriggerArray[22] = gt_CivillianAI22;
    gv_civilianTriggerArray[23] = gt_CivillianAI23;
    gv_civilianTriggerArray[24] = gt_CivillianAI24;
    gv_civilianTriggerArray[25] = gt_CivillianAI25;
    gv_civilianTriggerArray[26] = gt_CivillianAI26;
    gv_civilianTriggerArray[27] = gt_CivillianAI27;
    gv_civilianTriggerArray[28] = gt_CivillianAI28;
    gv_civilianTriggerArray[29] = gt_CivillianAI29;
    gv_civilianTriggerArray[30] = gt_CivillianAI30;
    gv_civilianTriggerArray[31] = gt_CivillianAI31;
    gv_civilianTriggerArray[32] = gt_CivillianAI32;
    gv_civilianTriggerArray[33] = gt_CivillianAI33;
    gv_civilianTriggerArray[34] = gt_CivillianAI34;
    gv_civilianTriggerArray[35] = gt_CivillianAI35;
    gv_civilianTriggerArray[36] = gt_CivillianAI36;
    gv_civilianTriggerArray[37] = gt_CivillianAI37;
    gv_civilianTriggerArray[38] = gt_CivillianAI38;
    gv_civilianTriggerArray[39] = gt_CivillianAI39;
    gv_civilianTriggerArray[40] = gt_CivillianAI40;
    gv_civilianTriggerArray[41] = gt_CivillianAI41;
    gv_civilianTriggerArray[42] = gt_CivillianAI42;
    gv_civilianTriggerArray[43] = gt_CivillianAI43;
    gv_civilianTriggerArray[44] = gt_CivillianAI44;
    gv_civilianTriggerArray[45] = gt_CivillianAI45;
    gv_civilianTriggerArray[46] = gt_CivillianAI46;
    gv_civilianTriggerArray[47] = gt_CivillianAI47;
    gv_civilianTriggerArray[48] = gt_CivillianAI48;
    gv_civilianTriggerArray[49] = gt_CivillianAI49;
    gv_civilianTriggerArray[50] = gt_CivillianAI50;
    gv_civilianTriggerArray[51] = gt_CivillianAI51;
    gv_civilianTriggerArray[52] = gt_CivillianAI52;
    gv_civilianTriggerArray[53] = gt_CivillianAI53;
    gv_civilianTriggerArray[54] = gt_CivillianAI54;
    gv_civilianTriggerArray[55] = gt_CivillianAI55;
    gv_civilianTriggerArray[56] = gt_CivillianAI56;
    gv_civilianTriggerArray[57] = gt_CivillianAI57;
    gv_civilianTriggerArray[58] = gt_CivillianAI58;
    gv_civilianTriggerArray[59] = gt_CivillianAI59;
    gv_civilianTriggerArray[60] = gt_CivillianAI60;
    gv_civilianTriggerArray[61] = gt_CivillianAI61;
    gv_civilianTriggerArray[62] = gt_CivillianAI62;
    gv_civilianTriggerArray[63] = gt_CivillianAI63;
    gv_civilianTriggerArray[64] = gt_CivillianAI64;
    gv_civilianTriggerArray[65] = gt_CivillianAI65;
    gv_civilianTriggerArray[66] = gt_CivillianAI66;
    gv_civilianTriggerArray[67] = gt_CivillianAI67;
    gv_civilianTriggerArray[68] = gt_CivillianAI68;
    gv_civilianTriggerArray[69] = gt_CivillianAI69;
    gv_civilianTriggerArray[70] = gt_CivillianAI70;
    gv_civilianTriggerArray[71] = gt_CivillianAI71;
    gv_civilianTriggerArray[72] = gt_CivillianAI72;
    gv_civilianTriggerArray[73] = gt_CivillianAI73;
    gv_civilianTriggerArray[74] = gt_CivillianAI74;
    gv_civilianTriggerArray[75] = gt_CivillianAI75;
    gv_civilianTriggerArray[76] = gt_CivillianAI76;
    gv_civilianTriggerArray[77] = gt_CivillianAI77;
    gv_civilianTriggerArray[78] = gt_CivillianAI78;
    gv_civilianTriggerArray[79] = gt_CivillianAI79;
    gv_civilianTriggerArray[80] = gt_CivillianAI80;
    gv_civilianTriggerArray[81] = gt_CivillianAI81;
    gv_civilianTriggerArray[82] = gt_CivillianAI82;
    gv_civilianTriggerArray[83] = gt_CivillianAI83;
    gv_civilianTriggerArray[84] = gt_CivillianAI84;
    gv_civilianTriggerArray[85] = gt_CivillianAI85;
    gv_civilianTriggerArray[86] = gt_CivillianAI86;
    gv_civilianTriggerArray[87] = gt_CivillianAI87;
    gv_civilianTriggerArray[88] = gt_CivillianAI88;
    gv_civilianTriggerArray[89] = gt_CivillianAI89;
    gv_civilianTriggerArray[90] = gt_CivillianAI90;
    gv_civilianTriggerArray[91] = gt_CivillianAI91;
    gv_civilianTriggerArray[92] = gt_CivillianAI92;
    gv_civilianTriggerArray[93] = gt_CivillianAI93;
    gv_civilianTriggerArray[94] = gt_CivillianAI94;
    gv_civilianTriggerArray[95] = gt_CivillianAI95;
    gv_civilianTriggerArray[96] = gt_CivillianAI96;
    gv_civilianTriggerArray[97] = gt_CivillianAI97;
    gv_civilianTriggerArray[98] = gt_CivillianAI98;
    gv_civilianTriggerArray[99] = gt_CivillianAI99;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_InitializeAllCivilianAITriggerArray_Init () {
    gt_InitializeAllCivilianAITriggerArray = TriggerCreate("gt_InitializeAllCivilianAITriggerArray_Func");
    TriggerAddEventTimeElapsed(gt_InitializeAllCivilianAITriggerArray, 50.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Initialize Civillian_Point_Array_East_City
//--------------------------------------------------------------------------------------------------
bool gt_InitializeCivillian_Point_Array_East_City_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    gv_Civillian_Point_Array_East_City[1] = PointFromId(217);
    gv_Civillian_Point_Array_East_City[2] = PointFromId(218);
    gv_Civillian_Point_Array_East_City[3] = PointFromId(219);
    gv_Civillian_Point_Array_East_City[4] = PointFromId(220);
    gv_Civillian_Point_Array_East_City[5] = PointFromId(221);
    gv_Civillian_Point_Array_East_City[6] = PointFromId(223);
    gv_Civillian_Point_Array_East_City[7] = PointFromId(225);
    gv_Civillian_Point_Array_East_City[8] = PointFromId(226);
    gv_Civillian_Point_Array_East_City[9] = PointFromId(227);
    gv_Civillian_Point_Array_East_City[10] = PointFromId(228);
    gv_Civillian_Point_Array_East_City[11] = PointFromId(235);
    gv_Civillian_Point_Array_East_City[12] = PointFromId(243);
    gv_Civillian_Point_Array_East_City[13] = PointFromId(244);
    gv_Civillian_Point_Array_East_City[14] = PointFromId(245);
    gv_Civillian_Point_Array_East_City[15] = PointFromId(246);
    gv_Civillian_Point_Array_East_City[16] = PointFromId(247);
    gv_Civillian_Point_Array_East_City[17] = PointFromId(248);
    gv_Civillian_Point_Array_East_City[18] = PointFromId(249);
    gv_Civillian_Point_Array_East_City[19] = PointFromId(250);
    gv_Civillian_Point_Array_East_City[20] = PointFromId(251);
    gv_Civillian_Point_Array_East_City[21] = PointFromId(252);
    gv_Civillian_Point_Array_East_City[22] = PointFromId(253);
    gv_Civillian_Point_Array_East_City[23] = PointFromId(254);
    gv_Civillian_Point_Array_East_City[24] = PointFromId(255);
    gv_Civillian_Point_Array_East_City[25] = PointFromId(256);
    gv_Civillian_Point_Array_East_City[26] = PointFromId(257);
    gv_Civillian_Point_Array_East_City[27] = PointFromId(258);
    gv_Civillian_Point_Array_East_City[28] = PointFromId(259);
    gv_Civillian_Point_Array_East_City[29] = PointFromId(260);
    gv_Civillian_Point_Array_East_City[30] = PointFromId(261);
    gv_Civillian_Point_Array_East_City[31] = PointFromId(262);
    gv_Civillian_Point_Array_East_City[32] = PointFromId(263);
    gv_Civillian_Point_Array_East_City[33] = PointFromId(264);
    gv_Civillian_Point_Array_East_City[34] = PointFromId(265);
    gv_Civillian_Point_Array_East_City[35] = PointFromId(266);
    gv_Civillian_Point_Array_East_City[36] = PointFromId(267);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_InitializeCivillian_Point_Array_East_City_Init () {
    gt_InitializeCivillian_Point_Array_East_City = TriggerCreate("gt_InitializeCivillian_Point_Array_East_City_Func");
    TriggerAddEventMapInit(gt_InitializeCivillian_Point_Array_East_City);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Move idle Civs East City
//--------------------------------------------------------------------------------------------------
bool gt_MoveidleCivsEastCity_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((libNtve_gf_UnitInRegion(EventUnit(), RegionFromId(101)) == true))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MoveidleCivsEastCity_Init () {
    gt_MoveidleCivsEastCity = TriggerCreate("gt_MoveidleCivsEastCity_Func");
    TriggerAddEventUnitBecomesIdle(gt_MoveidleCivsEastCity, null, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI_Init () {
    gt_CivillianAI = TriggerCreate("gt_CivillianAI_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI, null, PointFromId(217), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 2
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI2_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI2_Init () {
    gt_CivillianAI2 = TriggerCreate("gt_CivillianAI2_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI2, null, PointFromId(218), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 3
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI3_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI3_Init () {
    gt_CivillianAI3 = TriggerCreate("gt_CivillianAI3_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI3, null, PointFromId(219), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 4
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI4_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI4_Init () {
    gt_CivillianAI4 = TriggerCreate("gt_CivillianAI4_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI4, null, PointFromId(220), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 5
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI5_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI5_Init () {
    gt_CivillianAI5 = TriggerCreate("gt_CivillianAI5_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI5, null, PointFromId(221), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 6
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI6_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI6_Init () {
    gt_CivillianAI6 = TriggerCreate("gt_CivillianAI6_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI6, null, PointFromId(223), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 7
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI7_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI7_Init () {
    gt_CivillianAI7 = TriggerCreate("gt_CivillianAI7_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI7, null, PointFromId(225), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 8
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI8_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI8_Init () {
    gt_CivillianAI8 = TriggerCreate("gt_CivillianAI8_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI8, null, PointFromId(226), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 9
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI9_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI9_Init () {
    gt_CivillianAI9 = TriggerCreate("gt_CivillianAI9_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI9, null, PointFromId(227), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 10
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI10_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI10_Init () {
    gt_CivillianAI10 = TriggerCreate("gt_CivillianAI10_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI10, null, PointFromId(228), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 11
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI11_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI11_Init () {
    gt_CivillianAI11 = TriggerCreate("gt_CivillianAI11_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI11, null, PointFromId(235), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 12
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI12_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI12_Init () {
    gt_CivillianAI12 = TriggerCreate("gt_CivillianAI12_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI12, null, PointFromId(243), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 13
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI13_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI13_Init () {
    gt_CivillianAI13 = TriggerCreate("gt_CivillianAI13_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI13, null, PointFromId(244), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 14
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI14_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI14_Init () {
    gt_CivillianAI14 = TriggerCreate("gt_CivillianAI14_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI14, null, PointFromId(245), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 15
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI15_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI15_Init () {
    gt_CivillianAI15 = TriggerCreate("gt_CivillianAI15_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI15, null, PointFromId(246), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 16
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI16_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI16_Init () {
    gt_CivillianAI16 = TriggerCreate("gt_CivillianAI16_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI16, null, PointFromId(247), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 17
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI17_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI17_Init () {
    gt_CivillianAI17 = TriggerCreate("gt_CivillianAI17_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI17, null, PointFromId(248), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 18
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI18_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI18_Init () {
    gt_CivillianAI18 = TriggerCreate("gt_CivillianAI18_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI18, null, PointFromId(249), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 19
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI19_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI19_Init () {
    gt_CivillianAI19 = TriggerCreate("gt_CivillianAI19_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI19, null, PointFromId(250), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 20
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI20_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI20_Init () {
    gt_CivillianAI20 = TriggerCreate("gt_CivillianAI20_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI20, null, PointFromId(251), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 21
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI21_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI21_Init () {
    gt_CivillianAI21 = TriggerCreate("gt_CivillianAI21_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI21, null, PointFromId(252), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 22
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI22_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI22_Init () {
    gt_CivillianAI22 = TriggerCreate("gt_CivillianAI22_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI22, null, PointFromId(253), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 23
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI23_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI23_Init () {
    gt_CivillianAI23 = TriggerCreate("gt_CivillianAI23_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI23, null, PointFromId(254), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 24
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI24_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI24_Init () {
    gt_CivillianAI24 = TriggerCreate("gt_CivillianAI24_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI24, null, PointFromId(255), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 25
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI25_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI25_Init () {
    gt_CivillianAI25 = TriggerCreate("gt_CivillianAI25_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI25, null, PointFromId(256), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 26
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI26_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI26_Init () {
    gt_CivillianAI26 = TriggerCreate("gt_CivillianAI26_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI26, null, PointFromId(257), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 27
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI27_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI27_Init () {
    gt_CivillianAI27 = TriggerCreate("gt_CivillianAI27_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI27, null, PointFromId(258), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 28
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI28_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI28_Init () {
    gt_CivillianAI28 = TriggerCreate("gt_CivillianAI28_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI28, null, PointFromId(259), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 29
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI29_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI29_Init () {
    gt_CivillianAI29 = TriggerCreate("gt_CivillianAI29_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI29, null, PointFromId(260), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 30
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI30_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI30_Init () {
    gt_CivillianAI30 = TriggerCreate("gt_CivillianAI30_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI30, null, PointFromId(261), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 31
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI31_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI31_Init () {
    gt_CivillianAI31 = TriggerCreate("gt_CivillianAI31_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI31, null, PointFromId(262), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 32
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI32_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI32_Init () {
    gt_CivillianAI32 = TriggerCreate("gt_CivillianAI32_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI32, null, PointFromId(263), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 33
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI33_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI33_Init () {
    gt_CivillianAI33 = TriggerCreate("gt_CivillianAI33_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI33, null, PointFromId(264), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 34
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI34_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI34_Init () {
    gt_CivillianAI34 = TriggerCreate("gt_CivillianAI34_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI34, null, PointFromId(265), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 35
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI35_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI35_Init () {
    gt_CivillianAI35 = TriggerCreate("gt_CivillianAI35_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI35, null, PointFromId(266), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 36
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI36_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_East_City[RandomInt(1, 36)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI36_Init () {
    gt_CivillianAI36 = TriggerCreate("gt_CivillianAI36_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI36, null, PointFromId(267), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Kill East City Triggers
//--------------------------------------------------------------------------------------------------
bool gt_KillEastCityTriggers_Func (bool testConds, bool runActions) {
    int auto7E158B0E_ae;
    int auto7E158B0E_ai;

    // Variable Declarations
    int lv_i;

    // Variable Initialization
    lv_i = 1;

    // Actions
    if (!runActions) {
        return true;
    }

    auto7E158B0E_ae = 36;
    auto7E158B0E_ai = 1;
    lv_i = 1;
    for ( ; ( (auto7E158B0E_ai >= 0 && lv_i <= auto7E158B0E_ae) || (auto7E158B0E_ai <= 0 && lv_i >= auto7E158B0E_ae) ) ; lv_i += auto7E158B0E_ai ) {
        TriggerEnable(gv_civilianTriggerArray[lv_i], false);
        TriggerDestroy(gv_civilianTriggerArray[lv_i]);
    }
    TriggerEnable(gt_InitializeCivillian_Point_Array_East_City, false);
    TriggerDestroy(gt_InitializeCivillian_Point_Array_East_City);
    TriggerEnable(gt_MoveidleCivsEastCity, false);
    TriggerDestroy(gt_MoveidleCivsEastCity);
    TriggerEnable(gt_InitializeAllCivilianAITriggerArray, false);
    TriggerDestroy(gt_InitializeAllCivilianAITriggerArray);
    TriggerEnable(TriggerGetCurrent(), false);
    TriggerDestroy(gt_KillEastCityTriggers);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_KillEastCityTriggers_Init () {
    gt_KillEastCityTriggers = TriggerCreate("gt_KillEastCityTriggers_Func");
    TriggerEnable(gt_KillEastCityTriggers, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Initialize Civillian_Point_Array_Central_City
//--------------------------------------------------------------------------------------------------
bool gt_InitializeCivillian_Point_Array_Central_City_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    gv_Civillian_Point_Array_Central_City[1] = PointFromId(308);
    gv_Civillian_Point_Array_Central_City[2] = PointFromId(309);
    gv_Civillian_Point_Array_Central_City[3] = PointFromId(317);
    gv_Civillian_Point_Array_Central_City[4] = PointFromId(323);
    gv_Civillian_Point_Array_Central_City[5] = PointFromId(329);
    gv_Civillian_Point_Array_Central_City[6] = PointFromId(330);
    gv_Civillian_Point_Array_Central_City[7] = PointFromId(331);
    gv_Civillian_Point_Array_Central_City[8] = PointFromId(332);
    gv_Civillian_Point_Array_Central_City[9] = PointFromId(333);
    gv_Civillian_Point_Array_Central_City[10] = PointFromId(334);
    gv_Civillian_Point_Array_Central_City[11] = PointFromId(335);
    gv_Civillian_Point_Array_Central_City[12] = PointFromId(336);
    gv_Civillian_Point_Array_Central_City[13] = PointFromId(337);
    gv_Civillian_Point_Array_Central_City[14] = PointFromId(338);
    gv_Civillian_Point_Array_Central_City[15] = PointFromId(339);
    gv_Civillian_Point_Array_Central_City[16] = PointFromId(340);
    gv_Civillian_Point_Array_Central_City[17] = PointFromId(341);
    gv_Civillian_Point_Array_Central_City[18] = PointFromId(342);
    gv_Civillian_Point_Array_Central_City[19] = PointFromId(343);
    gv_Civillian_Point_Array_Central_City[20] = PointFromId(344);
    gv_Civillian_Point_Array_Central_City[21] = PointFromId(345);
    gv_Civillian_Point_Array_Central_City[22] = PointFromId(346);
    gv_Civillian_Point_Array_Central_City[23] = PointFromId(347);
    gv_Civillian_Point_Array_Central_City[24] = PointFromId(348);
    gv_Civillian_Point_Array_Central_City[25] = PointFromId(349);
    gv_Civillian_Point_Array_Central_City[26] = PointFromId(350);
    gv_Civillian_Point_Array_Central_City[27] = PointFromId(351);
    gv_Civillian_Point_Array_Central_City[28] = PointFromId(352);
    gv_Civillian_Point_Array_Central_City[29] = PointFromId(353);
    gv_Civillian_Point_Array_Central_City[30] = PointFromId(354);
    gv_Civillian_Point_Array_Central_City[31] = PointFromId(355);
    gv_Civillian_Point_Array_Central_City[32] = PointFromId(356);
    gv_Civillian_Point_Array_Central_City[33] = PointFromId(357);
    gv_Civillian_Point_Array_Central_City[34] = PointFromId(358);
    gv_Civillian_Point_Array_Central_City[35] = PointFromId(359);
    gv_Civillian_Point_Array_Central_City[36] = PointFromId(360);
    gv_Civillian_Point_Array_Central_City[37] = PointFromId(361);
    gv_Civillian_Point_Array_Central_City[38] = PointFromId(362);
    gv_Civillian_Point_Array_Central_City[39] = PointFromId(363);
    gv_Civillian_Point_Array_Central_City[40] = PointFromId(364);
    gv_Civillian_Point_Array_Central_City[41] = PointFromId(365);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_InitializeCivillian_Point_Array_Central_City_Init () {
    gt_InitializeCivillian_Point_Array_Central_City = TriggerCreate("gt_InitializeCivillian_Point_Array_Central_City_Func");
    TriggerAddEventMapInit(gt_InitializeCivillian_Point_Array_Central_City);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Move idle Civs Central City
//--------------------------------------------------------------------------------------------------
bool gt_MoveidleCivsCentralCity_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((libNtve_gf_UnitInRegion(EventUnit(), RegionFromId(102)) == true))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MoveidleCivsCentralCity_Init () {
    gt_MoveidleCivsCentralCity = TriggerCreate("gt_MoveidleCivsCentralCity_Func");
    TriggerAddEventUnitBecomesIdle(gt_MoveidleCivsCentralCity, null, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 37
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI37_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI37_Init () {
    gt_CivillianAI37 = TriggerCreate("gt_CivillianAI37_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI37, null, PointFromId(308), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 38
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI38_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI38_Init () {
    gt_CivillianAI38 = TriggerCreate("gt_CivillianAI38_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI38, null, PointFromId(309), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 39
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI39_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI39_Init () {
    gt_CivillianAI39 = TriggerCreate("gt_CivillianAI39_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI39, null, PointFromId(317), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 40
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI40_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI40_Init () {
    gt_CivillianAI40 = TriggerCreate("gt_CivillianAI40_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI40, null, PointFromId(323), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 41
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI41_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI41_Init () {
    gt_CivillianAI41 = TriggerCreate("gt_CivillianAI41_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI41, null, PointFromId(329), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 42
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI42_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI42_Init () {
    gt_CivillianAI42 = TriggerCreate("gt_CivillianAI42_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI42, null, PointFromId(330), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 43
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI43_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI43_Init () {
    gt_CivillianAI43 = TriggerCreate("gt_CivillianAI43_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI43, null, PointFromId(331), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 44
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI44_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI44_Init () {
    gt_CivillianAI44 = TriggerCreate("gt_CivillianAI44_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI44, null, PointFromId(332), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 45
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI45_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI45_Init () {
    gt_CivillianAI45 = TriggerCreate("gt_CivillianAI45_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI45, null, PointFromId(333), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 46
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI46_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI46_Init () {
    gt_CivillianAI46 = TriggerCreate("gt_CivillianAI46_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI46, null, PointFromId(334), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 47
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI47_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI47_Init () {
    gt_CivillianAI47 = TriggerCreate("gt_CivillianAI47_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI47, null, PointFromId(335), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 48
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI48_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI48_Init () {
    gt_CivillianAI48 = TriggerCreate("gt_CivillianAI48_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI48, null, PointFromId(336), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 49
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI49_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI49_Init () {
    gt_CivillianAI49 = TriggerCreate("gt_CivillianAI49_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI49, null, PointFromId(337), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 50
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI50_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI50_Init () {
    gt_CivillianAI50 = TriggerCreate("gt_CivillianAI50_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI50, null, PointFromId(338), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 51
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI51_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI51_Init () {
    gt_CivillianAI51 = TriggerCreate("gt_CivillianAI51_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI51, null, PointFromId(339), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 52
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI52_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI52_Init () {
    gt_CivillianAI52 = TriggerCreate("gt_CivillianAI52_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI52, null, PointFromId(340), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 53
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI53_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI53_Init () {
    gt_CivillianAI53 = TriggerCreate("gt_CivillianAI53_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI53, null, PointFromId(341), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 54
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI54_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI54_Init () {
    gt_CivillianAI54 = TriggerCreate("gt_CivillianAI54_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI54, null, PointFromId(342), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 55
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI55_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI55_Init () {
    gt_CivillianAI55 = TriggerCreate("gt_CivillianAI55_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI55, null, PointFromId(343), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 56
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI56_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI56_Init () {
    gt_CivillianAI56 = TriggerCreate("gt_CivillianAI56_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI56, null, PointFromId(344), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 57
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI57_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI57_Init () {
    gt_CivillianAI57 = TriggerCreate("gt_CivillianAI57_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI57, null, PointFromId(345), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 58
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI58_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI58_Init () {
    gt_CivillianAI58 = TriggerCreate("gt_CivillianAI58_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI58, null, PointFromId(346), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 59
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI59_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI59_Init () {
    gt_CivillianAI59 = TriggerCreate("gt_CivillianAI59_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI59, null, PointFromId(347), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 60
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI60_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI60_Init () {
    gt_CivillianAI60 = TriggerCreate("gt_CivillianAI60_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI60, null, PointFromId(348), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 61
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI61_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI61_Init () {
    gt_CivillianAI61 = TriggerCreate("gt_CivillianAI61_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI61, null, PointFromId(349), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 62
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI62_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI62_Init () {
    gt_CivillianAI62 = TriggerCreate("gt_CivillianAI62_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI62, null, PointFromId(350), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 63
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI63_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI63_Init () {
    gt_CivillianAI63 = TriggerCreate("gt_CivillianAI63_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI63, null, PointFromId(351), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 64
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI64_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI64_Init () {
    gt_CivillianAI64 = TriggerCreate("gt_CivillianAI64_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI64, null, PointFromId(352), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 65
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI65_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI65_Init () {
    gt_CivillianAI65 = TriggerCreate("gt_CivillianAI65_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI65, null, PointFromId(353), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 66
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI66_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI66_Init () {
    gt_CivillianAI66 = TriggerCreate("gt_CivillianAI66_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI66, null, PointFromId(354), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 67
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI67_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI67_Init () {
    gt_CivillianAI67 = TriggerCreate("gt_CivillianAI67_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI67, null, PointFromId(355), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 68
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI68_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI68_Init () {
    gt_CivillianAI68 = TriggerCreate("gt_CivillianAI68_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI68, null, PointFromId(356), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 69
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI69_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI69_Init () {
    gt_CivillianAI69 = TriggerCreate("gt_CivillianAI69_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI69, null, PointFromId(357), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 70
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI70_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI70_Init () {
    gt_CivillianAI70 = TriggerCreate("gt_CivillianAI70_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI70, null, PointFromId(358), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 71
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI71_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI71_Init () {
    gt_CivillianAI71 = TriggerCreate("gt_CivillianAI71_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI71, null, PointFromId(359), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 72
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI72_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI72_Init () {
    gt_CivillianAI72 = TriggerCreate("gt_CivillianAI72_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI72, null, PointFromId(360), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 73
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI73_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI73_Init () {
    gt_CivillianAI73 = TriggerCreate("gt_CivillianAI73_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI73, null, PointFromId(361), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 74
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI74_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI74_Init () {
    gt_CivillianAI74 = TriggerCreate("gt_CivillianAI74_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI74, null, PointFromId(362), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 75
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI75_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI75_Init () {
    gt_CivillianAI75 = TriggerCreate("gt_CivillianAI75_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI75, null, PointFromId(363), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 76
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI76_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI76_Init () {
    gt_CivillianAI76 = TriggerCreate("gt_CivillianAI76_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI76, null, PointFromId(364), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 77
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI77_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_Central_City[RandomInt(1, 41)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI77_Init () {
    gt_CivillianAI77 = TriggerCreate("gt_CivillianAI77_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI77, null, PointFromId(365), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Kill Central City Triggers
//--------------------------------------------------------------------------------------------------
bool gt_KillCentralCityTriggers_Func (bool testConds, bool runActions) {
    int autoA7779F52_ae;
    int autoA7779F52_ai;

    // Variable Declarations
    int lv_i;

    // Variable Initialization
    lv_i = 37;

    // Actions
    if (!runActions) {
        return true;
    }

    autoA7779F52_ae = 77;
    autoA7779F52_ai = 1;
    lv_i = 37;
    for ( ; ( (autoA7779F52_ai >= 0 && lv_i <= autoA7779F52_ae) || (autoA7779F52_ai <= 0 && lv_i >= autoA7779F52_ae) ) ; lv_i += autoA7779F52_ai ) {
        TriggerEnable(gv_civilianTriggerArray[lv_i], false);
        TriggerDestroy(gv_civilianTriggerArray[lv_i]);
    }
    TriggerEnable(gt_InitializeCivillian_Point_Array_Central_City, false);
    TriggerDestroy(gt_InitializeCivillian_Point_Array_Central_City);
    TriggerEnable(gt_MoveidleCivsCentralCity, false);
    TriggerDestroy(gt_MoveidleCivsCentralCity);
    TriggerEnable(TriggerGetCurrent(), false);
    TriggerDestroy(gt_KillCentralCityTriggers);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_KillCentralCityTriggers_Init () {
    gt_KillCentralCityTriggers = TriggerCreate("gt_KillCentralCityTriggers_Func");
    TriggerEnable(gt_KillCentralCityTriggers, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Initialize Civillian_Point_Array_West_City
//--------------------------------------------------------------------------------------------------
bool gt_InitializeCivillian_Point_Array_West_City_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    gv_Civillian_Point_Array_West_City[1] = PointFromId(448);
    gv_Civillian_Point_Array_West_City[2] = PointFromId(449);
    gv_Civillian_Point_Array_West_City[3] = PointFromId(450);
    gv_Civillian_Point_Array_West_City[4] = PointFromId(451);
    gv_Civillian_Point_Array_West_City[5] = PointFromId(452);
    gv_Civillian_Point_Array_West_City[6] = PointFromId(453);
    gv_Civillian_Point_Array_West_City[7] = PointFromId(454);
    gv_Civillian_Point_Array_West_City[8] = PointFromId(455);
    gv_Civillian_Point_Array_West_City[9] = PointFromId(456);
    gv_Civillian_Point_Array_West_City[10] = PointFromId(457);
    gv_Civillian_Point_Array_West_City[11] = PointFromId(458);
    gv_Civillian_Point_Array_West_City[12] = PointFromId(459);
    gv_Civillian_Point_Array_West_City[13] = PointFromId(460);
    gv_Civillian_Point_Array_West_City[14] = PointFromId(461);
    gv_Civillian_Point_Array_West_City[15] = PointFromId(462);
    gv_Civillian_Point_Array_West_City[16] = PointFromId(463);
    gv_Civillian_Point_Array_West_City[17] = PointFromId(464);
    gv_Civillian_Point_Array_West_City[18] = PointFromId(465);
    gv_Civillian_Point_Array_West_City[19] = PointFromId(466);
    gv_Civillian_Point_Array_West_City[20] = PointFromId(467);
    gv_Civillian_Point_Array_West_City[21] = PointFromId(468);
    gv_Civillian_Point_Array_West_City[22] = PointFromId(469);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_InitializeCivillian_Point_Array_West_City_Init () {
    gt_InitializeCivillian_Point_Array_West_City = TriggerCreate("gt_InitializeCivillian_Point_Array_West_City_Func");
    TriggerAddEventMapInit(gt_InitializeCivillian_Point_Array_West_City);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Move idle Civs West City
//--------------------------------------------------------------------------------------------------
bool gt_MoveidleCivsWestCity_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((libNtve_gf_UnitInRegion(EventUnit(), RegionFromId(107)) == true))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_West_City[RandomInt(1, 22)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MoveidleCivsWestCity_Init () {
    gt_MoveidleCivsWestCity = TriggerCreate("gt_MoveidleCivsWestCity_Func");
    TriggerAddEventUnitBecomesIdle(gt_MoveidleCivsWestCity, null, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 78
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI78_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_West_City[RandomInt(1, 22)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI78_Init () {
    gt_CivillianAI78 = TriggerCreate("gt_CivillianAI78_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI78, null, PointFromId(448), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 79
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI79_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_West_City[RandomInt(1, 22)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI79_Init () {
    gt_CivillianAI79 = TriggerCreate("gt_CivillianAI79_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI79, null, PointFromId(449), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 80
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI80_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_West_City[RandomInt(1, 22)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI80_Init () {
    gt_CivillianAI80 = TriggerCreate("gt_CivillianAI80_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI80, null, PointFromId(450), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 81
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI81_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_West_City[RandomInt(1, 22)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI81_Init () {
    gt_CivillianAI81 = TriggerCreate("gt_CivillianAI81_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI81, null, PointFromId(451), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 82
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI82_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_West_City[RandomInt(1, 22)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI82_Init () {
    gt_CivillianAI82 = TriggerCreate("gt_CivillianAI82_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI82, null, PointFromId(452), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 83
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI83_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_West_City[RandomInt(1, 22)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI83_Init () {
    gt_CivillianAI83 = TriggerCreate("gt_CivillianAI83_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI83, null, PointFromId(453), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 84
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI84_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_West_City[RandomInt(1, 22)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI84_Init () {
    gt_CivillianAI84 = TriggerCreate("gt_CivillianAI84_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI84, null, PointFromId(454), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 85
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI85_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_West_City[RandomInt(1, 22)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI85_Init () {
    gt_CivillianAI85 = TriggerCreate("gt_CivillianAI85_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI85, null, PointFromId(455), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 86
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI86_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_West_City[RandomInt(1, 22)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI86_Init () {
    gt_CivillianAI86 = TriggerCreate("gt_CivillianAI86_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI86, null, PointFromId(456), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 87
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI87_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_West_City[RandomInt(1, 22)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI87_Init () {
    gt_CivillianAI87 = TriggerCreate("gt_CivillianAI87_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI87, null, PointFromId(457), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 88
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI88_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_West_City[RandomInt(1, 22)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI88_Init () {
    gt_CivillianAI88 = TriggerCreate("gt_CivillianAI88_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI88, null, PointFromId(458), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 89
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI89_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_West_City[RandomInt(1, 22)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI89_Init () {
    gt_CivillianAI89 = TriggerCreate("gt_CivillianAI89_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI89, null, PointFromId(459), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 90
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI90_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_West_City[RandomInt(1, 22)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI90_Init () {
    gt_CivillianAI90 = TriggerCreate("gt_CivillianAI90_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI90, null, PointFromId(460), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 91
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI91_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_West_City[RandomInt(1, 22)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI91_Init () {
    gt_CivillianAI91 = TriggerCreate("gt_CivillianAI91_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI91, null, PointFromId(461), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 92
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI92_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_West_City[RandomInt(1, 22)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI92_Init () {
    gt_CivillianAI92 = TriggerCreate("gt_CivillianAI92_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI92, null, PointFromId(462), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 93
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI93_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_West_City[RandomInt(1, 22)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI93_Init () {
    gt_CivillianAI93 = TriggerCreate("gt_CivillianAI93_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI93, null, PointFromId(463), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 94
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI94_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_West_City[RandomInt(1, 22)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI94_Init () {
    gt_CivillianAI94 = TriggerCreate("gt_CivillianAI94_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI94, null, PointFromId(464), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 95
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI95_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_West_City[RandomInt(1, 22)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI95_Init () {
    gt_CivillianAI95 = TriggerCreate("gt_CivillianAI95_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI95, null, PointFromId(465), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 96
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI96_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_West_City[RandomInt(1, 22)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI96_Init () {
    gt_CivillianAI96 = TriggerCreate("gt_CivillianAI96_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI96, null, PointFromId(466), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 97
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI97_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_West_City[RandomInt(1, 22)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI97_Init () {
    gt_CivillianAI97 = TriggerCreate("gt_CivillianAI97_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI97, null, PointFromId(467), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 98
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI98_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_West_City[RandomInt(1, 22)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI98_Init () {
    gt_CivillianAI98 = TriggerCreate("gt_CivillianAI98_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI98, null, PointFromId(468), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Civillian AI 99
//--------------------------------------------------------------------------------------------------
bool gt_CivillianAI99_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), gv_Civillian_Point_Array_West_City[RandomInt(1, 22)]), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CivillianAI99_Init () {
    gt_CivillianAI99 = TriggerCreate("gt_CivillianAI99_Func");
    TriggerAddEventUnitRangePoint(gt_CivillianAI99, null, PointFromId(469), 0.3, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Kill West City Triggers
//--------------------------------------------------------------------------------------------------
bool gt_KillWestCityTriggers_Func (bool testConds, bool runActions) {
    int auto7827FCC2_ae;
    int auto7827FCC2_ai;

    // Variable Declarations
    int lv_i;

    // Variable Initialization
    lv_i = 78;

    // Actions
    if (!runActions) {
        return true;
    }

    auto7827FCC2_ae = 99;
    auto7827FCC2_ai = 1;
    lv_i = 78;
    for ( ; ( (auto7827FCC2_ai >= 0 && lv_i <= auto7827FCC2_ae) || (auto7827FCC2_ai <= 0 && lv_i >= auto7827FCC2_ae) ) ; lv_i += auto7827FCC2_ai ) {
        TriggerEnable(gv_civilianTriggerArray[lv_i], false);
        TriggerDestroy(gv_civilianTriggerArray[lv_i]);
    }
    TriggerEnable(gt_InitializeCivillian_Point_Array_West_City, false);
    TriggerDestroy(gt_InitializeCivillian_Point_Array_West_City);
    TriggerEnable(gt_MoveidleCivsWestCity, false);
    TriggerDestroy(gt_MoveidleCivsWestCity);
    TriggerEnable(TriggerGetCurrent(), false);
    TriggerDestroy(gt_KillWestCityTriggers);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_KillWestCityTriggers_Init () {
    gt_KillWestCityTriggers = TriggerCreate("gt_KillWestCityTriggers_Func");
    TriggerEnable(gt_KillWestCityTriggers, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Current Win Condition
//--------------------------------------------------------------------------------------------------
bool gt_CurrentWinCondition_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/02F597DB"));
    Wait(10.0, c_timeGame);
    PlayerGroupLoopBegin(PlayerGroupActive());
    for ( ; !PlayerGroupLoopDone() ; PlayerGroupLoopStep() ) {
        GameOver(PlayerGroupLoopCurrent(), c_gameOverVictory, true, true);
    }
    PlayerGroupLoopEnd();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CurrentWinCondition_Init () {
    gt_CurrentWinCondition = TriggerCreate("gt_CurrentWinCondition_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Remove unit when player leaves
//--------------------------------------------------------------------------------------------------
bool gt_Removeunitwhenplayerleaves_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerStatus(EventPlayer()) != c_playerStatusActive) && (UnitGetOwner(RegionGetAttachUnit(RegionFromId(84))) == EventPlayer())) {
        UnitSetOwner(RegionGetAttachUnit(RegionFromId(84)), 7, true);
        UnitSetOwner(UnitFromId(229), 7, true);
        UnitSetPosition(RegionGetAttachUnit(RegionFromId(84)), RegionGetCenter(RegionFromId(133)), false);
    }
    else {
    }
    if ((PlayerStatus(EventPlayer()) != c_playerStatusActive) && (UnitGetOwner(RegionGetAttachUnit(RegionFromId(85))) == EventPlayer())) {
        UnitSetOwner(RegionGetAttachUnit(RegionFromId(85)), 7, true);
        UnitSetOwner(UnitFromId(230), 7, true);
        UnitSetPosition(RegionGetAttachUnit(RegionFromId(85)), RegionGetCenter(RegionFromId(133)), false);
    }
    else {
    }
    if ((PlayerStatus(EventPlayer()) != c_playerStatusActive) && (UnitGetOwner(RegionGetAttachUnit(RegionFromId(86))) == EventPlayer())) {
        UnitSetOwner(RegionGetAttachUnit(RegionFromId(86)), 7, true);
        UnitSetOwner(UnitFromId(231), 7, true);
        UnitSetPosition(RegionGetAttachUnit(RegionFromId(86)), RegionGetCenter(RegionFromId(133)), false);
    }
    else {
    }
    if ((PlayerStatus(EventPlayer()) != c_playerStatusActive) && (UnitGetOwner(RegionGetAttachUnit(RegionFromId(87))) == EventPlayer())) {
        UnitSetOwner(RegionGetAttachUnit(RegionFromId(87)), 7, true);
        UnitSetOwner(UnitFromId(232), 7, true);
        UnitSetPosition(RegionGetAttachUnit(RegionFromId(87)), RegionGetCenter(RegionFromId(133)), false);
    }
    else {
    }
    if ((PlayerStatus(EventPlayer()) != c_playerStatusActive) && (UnitGetOwner(RegionGetAttachUnit(RegionFromId(88))) == EventPlayer())) {
        UnitSetOwner(RegionGetAttachUnit(RegionFromId(88)), 7, true);
        UnitSetOwner(UnitFromId(233), 7, true);
        UnitSetPosition(RegionGetAttachUnit(RegionFromId(88)), RegionGetCenter(RegionFromId(133)), false);
    }
    else {
    }
    if ((PlayerStatus(EventPlayer()) != c_playerStatusActive) && (UnitGetOwner(RegionGetAttachUnit(RegionFromId(89))) == EventPlayer())) {
        UnitSetOwner(RegionGetAttachUnit(RegionFromId(89)), 7, true);
        UnitSetOwner(UnitFromId(234), 7, true);
        UnitSetPosition(RegionGetAttachUnit(RegionFromId(89)), RegionGetCenter(RegionFromId(133)), false);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Removeunitwhenplayerleaves_Init () {
    gt_Removeunitwhenplayerleaves = TriggerCreate("gt_Removeunitwhenplayerleaves_Func");
    TriggerAddEventPlayerLeft(gt_Removeunitwhenplayerleaves, c_playerAny, c_gameResultUndecided);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Move warped Leaver Unit
//--------------------------------------------------------------------------------------------------
bool gt_MovewarpedLeaverUnit_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), RegionGetCenter(RegionFromId(133)), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MovewarpedLeaverUnit_Init () {
    gt_MovewarpedLeaverUnit = TriggerCreate("gt_MovewarpedLeaverUnit_Func");
    TriggerAddEventUnitRegion(gt_MovewarpedLeaverUnit, null, RegionFromId(21), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Melee Initialization
//--------------------------------------------------------------------------------------------------
bool gt_MeleeInitialization_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_achIconPath;
    int lv_i;

    // Variable Initialization
    lv_achIconPath = "";

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MeleeInitialization_Init () {
    gt_MeleeInitialization = TriggerCreate("gt_MeleeInitialization_Func");
    TriggerAddEventMapInit(gt_MeleeInitialization);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Create Achievement Very Easy
//--------------------------------------------------------------------------------------------------
bool gt_CreateAchievementVeryEasy_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CreateAchievementVeryEasy_Init () {
    gt_CreateAchievementVeryEasy = TriggerCreate("gt_CreateAchievementVeryEasy_Func");
    TriggerAddEventMapInit(gt_CreateAchievementVeryEasy);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Create Achievement Easy
//--------------------------------------------------------------------------------------------------
bool gt_CreateAchievementEasy_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CreateAchievementEasy_Init () {
    gt_CreateAchievementEasy = TriggerCreate("gt_CreateAchievementEasy_Func");
    TriggerAddEventMapInit(gt_CreateAchievementEasy);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Create Achievement Normal
//--------------------------------------------------------------------------------------------------
bool gt_CreateAchievementNormal_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CreateAchievementNormal_Init () {
    gt_CreateAchievementNormal = TriggerCreate("gt_CreateAchievementNormal_Func");
    TriggerAddEventMapInit(gt_CreateAchievementNormal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Create Achievement Hard
//--------------------------------------------------------------------------------------------------
bool gt_CreateAchievementHard_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CreateAchievementHard_Init () {
    gt_CreateAchievementHard = TriggerCreate("gt_CreateAchievementHard_Func");
    TriggerAddEventMapInit(gt_CreateAchievementHard);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Create Achievement Very Hard
//--------------------------------------------------------------------------------------------------
bool gt_CreateAchievementVeryHard_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CreateAchievementVeryHard_Init () {
    gt_CreateAchievementVeryHard = TriggerCreate("gt_CreateAchievementVeryHard_Func");
    TriggerAddEventMapInit(gt_CreateAchievementVeryHard);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Create Achievement Z
//--------------------------------------------------------------------------------------------------
bool gt_CreateAchievementZ_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CreateAchievementZ_Init () {
    gt_CreateAchievementZ = TriggerCreate("gt_CreateAchievementZ_Func");
    TriggerAddEventMapInit(gt_CreateAchievementZ);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Create Achievement Z 2
//--------------------------------------------------------------------------------------------------
bool gt_CreateAchievementZ2_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CreateAchievementZ2_Init () {
    gt_CreateAchievementZ2 = TriggerCreate("gt_CreateAchievementZ2_Func");
    TriggerAddEventMapInit(gt_CreateAchievementZ2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Create Achievement Z 3
//--------------------------------------------------------------------------------------------------
bool gt_CreateAchievementZ3_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CreateAchievementZ3_Init () {
    gt_CreateAchievementZ3 = TriggerCreate("gt_CreateAchievementZ3_Func");
    TriggerAddEventMapInit(gt_CreateAchievementZ3);
}

//--------------------------------------------------------------------------------------------------
// Trigger Initialization
//--------------------------------------------------------------------------------------------------

    gt_modifyxup_Init();
    gt_modifyxdown_Init();
    gt_Checkxvalue_Init();
    gt_PreloadtheBank2_Init();
    gt_Seebankinfo_Init();
    gt_Seebankinfo2_Init();
    gt_Seebankinfo3_Init();
    gt_Seebankinfo4_Init();
    gt_Seebankinfo5_Init();
    gt_Seebankinfo6_Init();
    gt_Seebankinfo7_Init();
    gt_Seebankinfo8_Init();
    gt_Seebankinfo9_Init();
    gt_Seebankinfo10_Init();
    gt_Seebankinfo11_Init();
    gt_BankLoadCrystals2_Init();
    gt_LoadStartingPowerLevel_Init();
    gt_RandomNumberGenerator_Init();
    gt_BankSave2_Init();



}

//--------------------------------------------------------------------------------------------------
// Map Initialization
//--------------------------------------------------------------------------------------------------
void InitMap () {
    InitLibs();
    InitGlobals();
    InitTriggers();
}
